<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1223.0056                               -->
<workbook source-build='10.1.3 (10100.16.1223.0056)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='BData (BDataExcel)' inline='true' name='federated.1fqnz9e0lch8uw1h8bngn0qhijxy' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='BDataExcel' name='excel-direct.1hy2zdl12pmt8f1cm6tr810nzxq8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\ochang\Desktop\GA\Final Project Files\BDataExcel.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1hy2zdl12pmt8f1cm6tr810nzxq8' name='BData' table='[BData$]' type='table'>
          <columns gridOrigin='A1:R394:no:A1:R394:0' header='yes' outcome='2'>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='integer' name='Age' ordinal='1' />
            <column datatype='string' name='Outcome' ordinal='2' />
            <column datatype='integer' name='Season' ordinal='3' />
            <column datatype='string' name='First Impression Rose' ordinal='4' />
            <column datatype='string' name='Date Rose' ordinal='5' />
            <column datatype='string' name='First Name' ordinal='6' />
            <column datatype='string' name='Last Name' ordinal='7' />
            <column datatype='string' name='Hometown' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='integer' name='Winner' ordinal='10' />
            <column datatype='integer' name='Second Place' ordinal='11' />
            <column datatype='integer' name='Third Place' ordinal='12' />
            <column datatype='integer' name='Abs Distance from Age' ordinal='13' />
            <column datatype='integer' name='Dist from Age (B-C)' ordinal='14' />
            <column datatype='integer' name='Bachelor Age' ordinal='15' />
            <column datatype='string' name='Hair Color' ordinal='16' />
            <column datatype='string' name='Hair Type' ordinal='17' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Outcome</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Outcome]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Outcome</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Impression Rose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[First Impression Rose]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>First Impression Rose</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Rose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date Rose]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Date Rose</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[First Name]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>First Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Last Name]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Last Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hometown</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Hometown]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Hometown</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Winner]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Second Place</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Second Place]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Second Place</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Third Place</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Third Place]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Third Place</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Abs Distance from Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Abs Distance from Age]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Abs Distance from Age</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dist from Age (B-C)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dist from Age (B-C)]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Dist from Age (B-C)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bachelor Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Bachelor Age]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Bachelor Age</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hair Color</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Hair Color]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Hair Color</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hair Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Hair Type]</local-name>
            <parent-name>[BData]</parent-name>
            <remote-alias>Hair Type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[BData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R394:no:A1:R394:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Abs Distance from Age (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Abs Distance from Age]' peg='0' size='4.35' />
      </column>
      <column datatype='integer' name='[Abs Distance from Age]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Age]' peg='0' size='1.87' />
      </column>
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column caption='Name Count' datatype='integer' name='[Calculation_591941911314784256]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([First Name])' />
      </column>
      <column datatype='string' name='[First Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[First Name]' derivation='None' name='[none:First Name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.482085' measure-ordering='alphabetic' measure-percentage='0.517915' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:First Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Agnese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Christine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ellen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JoJo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kylie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lisa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meghan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Robyn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samantha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tamara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ashleigh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cathy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeShaun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Holly&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kelsey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lauren&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mackenzie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Megan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peyton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blakeney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chantel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dolores&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elizabeth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jean-Marie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jessica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kim&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kristin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mallory&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rebecca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Regina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stacia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alexa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Camille&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cosetta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frances&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jillian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Juli&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michelle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Selma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tenley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brittney&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erika&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jeanette&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lace&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rosella&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sarah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tandra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dominique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elyse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jenna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kimberly&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kristina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marissa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rhonda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stacey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suzanne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anne-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Danielle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deanna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hayley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lori&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lucinda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paige&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sheena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bettina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Celeste&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Christy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Devon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isabel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jennifer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Keltie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raichel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shira&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trista&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ann&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AshLee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Daniela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gwen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kari&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laura&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lindsey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Noelle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shawntel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stephanie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tierra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Breanne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chelsie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elise&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jenni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kristine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kristy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rita&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Susan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suzi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wendi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alexis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Candace&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Courtney&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Francine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Julie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kaitlyn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sharleen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tessa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Angelique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cari&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cristy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kacie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liangy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Naomi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rachel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sharon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Becca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Britt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Daniella&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindzi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Olivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shayne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tracy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;April&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cassandra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Catherine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Debbie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Heather&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Helene&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kathryn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lyndsie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mandy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paula&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sheila&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alissa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caila&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Claudia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estefania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jenny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jubilee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lacy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Merrilee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rozlyn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taryn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Britnee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Christi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ella&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Emily&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jade&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jessie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lindsay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;McCarten&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Robin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suzie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Whitney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amber&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bevin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Channy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denise&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Diana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jaclyn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keriann&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maegan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Natalie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raquel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shushanna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valerie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Angela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anindita&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carissa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lacey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Linda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicki&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Renee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shawn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tiara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alyssa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Caitlyn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Corrie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fatima&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Juelia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LaNease&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Melissa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Molly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sadie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tauni&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tiffany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Blakeley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chantal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Desiree&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dianna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kelly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kirsten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maggie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nikki&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reegan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solisa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valishia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Absolute Difference in Age'>
      <table>
        <view>
          <datasources>
            <datasource caption='BData (BDataExcel)' name='federated.1fqnz9e0lch8uw1h8bngn0qhijxy' />
          </datasources>
          <datasource-dependencies datasource='federated.1fqnz9e0lch8uw1h8bngn0qhijxy'>
            <column datatype='integer' name='[Abs Distance from Age (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Abs Distance from Age]' peg='0' size='4.35' />
            </column>
            <column datatype='integer' name='[Abs Distance from Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Season]' role='measure' type='quantitative' />
            <column-instance column='[Abs Distance from Age]' derivation='Count' name='[cnt:Abs Distance from Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Abs Distance from Age (bin)]' derivation='None' name='[none:Abs Distance from Age (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Abs Distance from Age]' derivation='Sum' name='[pcto:sum:Abs Distance from Age:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Abs Distance from Age (bin):qk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Season:qk]' included-values='in-range'>
            <min>10</min>
            <max>20</max>
          </filter>
          <slices>
            <column>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Season:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[pcto:sum:Abs Distance from Age:qk:1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[cnt:Abs Distance from Age:qk]</rows>
        <cols>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Abs Distance from Age (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[Abs Distance from Age (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Age by Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='BData (BDataExcel)' name='federated.1fqnz9e0lch8uw1h8bngn0qhijxy' />
          </datasources>
          <datasource-dependencies datasource='federated.1fqnz9e0lch8uw1h8bngn0qhijxy'>
            <column aggregation='None' datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Age]' peg='0' size='1.87' />
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Second Place]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Third Place]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Winner]' role='measure' type='quantitative' />
            <column-instance column='[Age]' derivation='Count' name='[cnt:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Second Place]' derivation='Sum' name='[sum:Second Place:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Third Place]' derivation='Sum' name='[sum:Third Place:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Winner]' derivation='Sum' name='[sum:Winner:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' y-axis-name='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[cnt:Age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='2' y-axis-name='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[sum:Winner:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='3' y-axis-name='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[sum:Second Place:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='4' y-axis-name='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[sum:Third Place:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>([federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[cnt:Age:qk] + ([federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[sum:Winner:qk] + ([federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[sum:Second Place:qk] + [federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[sum:Third Place:qk])))</rows>
        <cols>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Age (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[Age (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Demographics'>
      <table>
        <view>
          <datasources>
            <datasource caption='BData (BDataExcel)' name='federated.1fqnz9e0lch8uw1h8bngn0qhijxy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fqnz9e0lch8uw1h8bngn0qhijxy'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Name Count' datatype='integer' name='[Calculation_591941911314784256]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([First Name])' />
            </column>
            <column datatype='string' name='[First Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Second Place]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Third Place]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Winner]' role='measure' type='quantitative' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='Median' name='[med:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Second Place]' derivation='None' name='[none:Second Place:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Third Place]' derivation='None' name='[none:Third Place:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Winner]' derivation='None' name='[none:Winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_591941911314784256]' derivation='User' name='[pcto:usr:Calculation_591941911314784256:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[State]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_591941911314784256]' derivation='User' name='[usr:Calculation_591941911314784256:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Second Place:qk]' included-values='in-range'>
            <min>0</min>
            <max>1</max>
          </filter>
          <sort class='computed' column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:State:nk]' direction='DESC' using='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[usr:Calculation_591941911314784256:qk]' />
          <filter class='quantitative' column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Third Place:qk]' included-values='in-range'>
            <min>0</min>
            <max>1</max>
          </filter>
          <filter class='quantitative' column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Winner:qk]' included-values='in-range'>
            <min>0</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Winner:qk]</column>
            <column>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Second Place:qk]</column>
            <column>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Third Place:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[Longitude (generated)]' field-type='quantitative' max='-168648.34121041' min='-24876872.064206764' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[Latitude (generated)]' field-type='quantitative' max='12415423.965640761' min='-4093534.4548640652' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:State:nk]' />
              <lod column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[pcto:usr:Calculation_591941911314784256:qk:2]' />
              <lod column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[avg:Age:qk]' />
              <lod column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[med:Age:qk]' />
              <color column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[usr:Calculation_591941911314784256:qk]' />
              <geometry column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[Latitude (generated)]</rows>
        <cols>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Name Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='BData (BDataExcel)' name='federated.1fqnz9e0lch8uw1h8bngn0qhijxy' />
          </datasources>
          <datasource-dependencies datasource='federated.1fqnz9e0lch8uw1h8bngn0qhijxy'>
            <column caption='Name Count' datatype='integer' name='[Calculation_591941911314784256]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([First Name])' />
            </column>
            <column datatype='string' name='[First Name]' role='dimension' type='nominal' />
            <column-instance column='[First Name]' derivation='None' name='[none:First Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_591941911314784256]' derivation='User' name='[usr:Calculation_591941911314784256:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:First Name:nk]' direction='DESC' using='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[usr:Calculation_591941911314784256:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[usr:Calculation_591941911314784256:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:First Name:nk]</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Name Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:First Name:nk]</field>
            <field>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[sum:Winner:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Age by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Demographics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[usr:Calculation_591941911314784256:qk]' type='color' />
            <card param='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Winner:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Second Place:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Third Place:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Hometown:nk]</field>
            <field>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Second Place:qk]</field>
            <field>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:State:nk]</field>
            <field>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Third Place:qk]</field>
            <field>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Winner:qk]</field>
            <field>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[usr:Calculation_591941911314784256:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Absolute Difference in Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fqnz9e0lch8uw1h8bngn0qhijxy].[none:Season:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Absolute Difference in Age' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Age by Category' width='192'>
      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
      1fxgl5sJqQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Demographics' width='192'>
      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
      SnyJEgDw/wO//dpaI667/wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Name Count' width='164'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
