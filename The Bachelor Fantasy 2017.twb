<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Picks (Bachelor Fantasy 2017)' inline='true' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Bachelor Fantasy 2017' name='excel-direct.0kejm901tftsm81h312710ja0fd2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\ochang\My Documents\GitHub\Whaleshit-Fantasy-Football\Bachelor Fantasy 2017.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0kejm901tftsm81h312710ja0fd2' name='Picks' table='[Picks$]' type='table'>
          <columns gridOrigin='A1:O21:no:A1:O21:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestants' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='integer' name='Grand Total' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestants</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestants]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Contestants</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Picks]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O21:no:A1:O21:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\ochang\My Documents\My Tableau Repository\Datasources\Picks (Bachelor Fantasy 2017).tde' schema='Extract' tablename='Extract' update-time='03/01/2017 05:51:50 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='20' timestamp-start='2017-03-01 17:51:50.745' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestants</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestants]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestants</remote-alias>
              <ordinal>0</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brittany&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sarah&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>2</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>570.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>50</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.649932048214154</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.380269746013347</statistic>
                <statistic aggregation='Var' datatype='real'>113.42105263157895</statistic>
                <statistic aggregation='VarP' datatype='real'>107.75</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18400.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>3</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>675.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>44.095440747733115</statistic>
                <statistic aggregation='StdevP' datatype='real'>42.97891925118639</statistic>
                <statistic aggregation='Var' datatype='real'>1944.4078947368421</statistic>
                <statistic aggregation='VarP' datatype='real'>1847.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>59725.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>4</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>745.0</statistic>
                <statistic aggregation='Avg' datatype='real'>37.25</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>38.915394058609273</statistic>
                <statistic aggregation='StdevP' datatype='real'>37.930034273646527</statistic>
                <statistic aggregation='Var' datatype='real'>1514.4078947368421</statistic>
                <statistic aggregation='VarP' datatype='real'>1438.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>56525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>5</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>34.335803011158085</statistic>
                <statistic aggregation='StdevP' datatype='real'>33.466401061363023</statistic>
                <statistic aggregation='Var' datatype='real'>1178.9473684210527</statistic>
                <statistic aggregation='VarP' datatype='real'>1120.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>34900.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>6</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>615.0</statistic>
                <statistic aggregation='Avg' datatype='real'>30.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>50.269667531068976</statistic>
                <statistic aggregation='StdevP' datatype='real'>48.996811120724992</statistic>
                <statistic aggregation='Var' datatype='real'>2527.0394736842104</statistic>
                <statistic aggregation='VarP' datatype='real'>2400.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>66925.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>7</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.358509593425559</statistic>
                <statistic aggregation='StdevP' datatype='real'>40.311288741492746</statistic>
                <statistic aggregation='Var' datatype='real'>1710.5263157894738</statistic>
                <statistic aggregation='VarP' datatype='real'>1625.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>45000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>8</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>465.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.25</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>105</statistic>
                <statistic aggregation='Stdev' datatype='real'>40.009045029974487</statistic>
                <statistic aggregation='StdevP' datatype='real'>38.995993383936252</statistic>
                <statistic aggregation='Var' datatype='real'>1600.7236842105262</statistic>
                <statistic aggregation='VarP' datatype='real'>1520.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>41225.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>9</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>235.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.89512162874653</statistic>
                <statistic aggregation='StdevP' datatype='real'>35.960916284210555</statistic>
                <statistic aggregation='Var' datatype='real'>1361.25</statistic>
                <statistic aggregation='VarP' datatype='real'>1293.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>28625.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>10</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>50.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>25</statistic>
                <statistic aggregation='Stdev' datatype='real'>7.6948376406386556</statistic>
                <statistic aggregation='StdevP' datatype='real'>7.5</statistic>
                <statistic aggregation='Var' datatype='real'>59.210526315789473</statistic>
                <statistic aggregation='VarP' datatype='real'>56.25</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1250.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>11</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4355.0</statistic>
                <statistic aggregation='Avg' datatype='real'>217.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>730</statistic>
                <statistic aggregation='Stdev' datatype='real'>212.39533025890535</statistic>
                <statistic aggregation='StdevP' datatype='real'>207.01736038313308</statistic>
                <statistic aggregation='Var' datatype='real'>45111.776315789473</statistic>
                <statistic aggregation='VarP' datatype='real'>42856.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1805425.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>20.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>20.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>13</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Eliminated&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Eliminated&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>14</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bailey&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Rebecca&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>15</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.327362' measure-ordering='alphabetic' measure-percentage='0.672638' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Contestants]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
              <wedge-size column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
              <tooltip column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Score by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]' direction='DESC' using='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Score by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' direction='DESC' using='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk]' direction='DESC' />
          <slices>
            <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]' value='60' />
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk]' value='76' />
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk] / ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk] / [federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]))</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]</column>
          <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='8' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='9' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep9:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk] + [federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep9:qk]))))))))</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017'>
      <style />
      <size maxheight='1500' maxwidth='1100' minheight='1500' minwidth='1100' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='9' param='horz' type='layout-flow' w='99636' x='0' y='0'>
              <zone h='100000' id='7' type='layout-basic' w='99636' x='0' y='0'>
                <zone h='24467' id='1' is-centered='0' is-scaled='1' param='C:\Users\ochang\Pictures\Bach.JPG' type='bitmap' w='99636' x='0' y='0' />
                <zone h='12000' id='3' name='Weekly Score by Team' w='49818' x='0' y='24467' />
                <zone h='38200' id='4' name='Weekly Score by Team and Contestant' w='49818' x='49818' y='24467' />
                <zone h='26200' id='5' name='Contestant Filter' w='49818' x='0' y='36467' />
                <zone h='37333' id='6' name='Scoring Pie' w='49818' x='49818' y='62667' />
                <zone h='37333' id='10' name='Weekly Scoring by Episode' w='49818' x='0' y='62667' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Weekly Score by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Score by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Score by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Score by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='104'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9ebxdV3Xn+d17n+mOb35PepKe5sGWLHlEBNuYxMQ2Q4rgJJ0QU0lnMEOg
      k0/XpzIRCpOhqpoKEKrK3UVCJU3A7hBiTLpNbDxWPOBByINsyZI1S09vHu+705n23v3Huffq
      SdgYCCShovX53Hfvu+ece/bZZ83rt/YR1lrLBbpA/0JJ/lMP4AJdoH9KctofDh585Z9yHBfo
      XxAZBAKDtAaBAQQAQmTvWLDY1keBbW1HtHe1YAXL9Xf72O/WoXFef5cLdIG+vySxgMAKhUHR
      5uxl/L/sr2xttyAygRFCtDf/g+mCAFyg7zt1NPlrkLQag8QIhRUCjEWKtvYWWGuRUmKsRQiw
      QmQiYCCTEgtCIPj25/lO6IIAXKDvil6Pub8zMthMl2O0wZcGoWOSsEGapjiOQ6VaJUkSurrK
      NJohxVIZLxdgkRhjAdWyDueO6/XGd76LdEEALtA/AbX9d4uLRjSXOHloH2F1Hq1TxsbGOXnq
      JGtH1tLb08P8/Dx+oczWnZeR6+5nen4R6eZZvXoEz/O+a79/OV0QgAv0qvT90PRZIGsRHf7M
      fH0jJNaCi0XqkIfv/VuOH3iWkZV9eK5HWK1SVJpwYYozs2fIBT4TU6OMjR5n1YatFHr6WKgm
      1CsVLt5+McaCF/iZy6QtViiEVNn/rTCa17ieCwJwgc6h74+L0yZLO1oV7WyOlaTSoGyKkyRM
      HHuF5vw0w4P92DTBCXKsGFrB9OwcYRihpCKJYkqBx1xlnsqZIzRmT1OPBJXRI7jhLGcmJti+
      cxfS8SgXuil29ZMoHyMkUrQE4PxMU4suCMAF+oGRsJmPbmllLS0gNcniNHv3PotpNqjOjLO0
      MEN9cYZSocjc7AJxkjA8vIZKc4m1q1dRKuaZnZvDJItMjk3Q09ePSWMkcOK5JRCKY/V5AAr9
      qyn2DTKyZTt+uReLxAr5muGyaFeCL9QBLhB8fy2AsC0HRAgMFkVCbWme5x76GtPj41QXFlA2
      QeiQwHcwKUxOTdHT00czihEiS426SqEch9GxMeqNkIHBIXp7S4TNOuVimf7+QXScIlEsRg38
      UhelgWGuu+lfoQpdpFahxKvHCRcswL9Q+v66Oq9xjpbvbQU4WGxY4+VvPkE8P8XSxCg61eTL
      Rfx8kThqEqWG9Rs3o63l2L4XmVtYpFQssm7tGjaNrKXcO8CRo8fwvIBaU5NqBydVHB2dIk00
      5XIXlcUpwjNjOCdPU+4b5A3X/ThCqNcc4wUBuEA/MLJCY4VBoEibNWZOHGH85X1MHj9Md3cv
      QyMjuJ7L1MwkY1NTxImlGoYo12Xtpo2MIJidnaOZag4cPorreixW6wSFMoHrEDaa+H0+Vile
      OXEQYy0Xbd7C4vQ0abTA3z/8INt2XUlQ7gP16qifH0oskDEGa20n/dV+F0J8y3fLPy9/X/4y
      xvxjDv9fDGksSIM1EWOnj/L0Nx5jfn6eBMHMYoWp+XnqcUy5t5+hlWuZmF4ijA09PX0MDA6Q
      y+dpRhFHT5xkqVqjXm8ghWBqYoIkbLB6uB8dhzhSUMznUcrh5KlRevoGGB2b4tToKCeOH0aJ
      5Bx+WU4/lBZgufm21iKEQEpJkiREUUSapgghUErheV4nVyyEQGuNlJnctxlfStnZ/j8z/WNd
      39nzSKxJqcxN88T/eITq7CRT41MoAc0wxDo+Lx8+iuM4FIolNm3eShLWiet1dBRipaKYK9AI
      mp1q8Y/svop6rcrho0doxDEgGFyxkh0Xb+fY8RMEXkCzGVHu7iFMU/bv38dFO3YgXBcp5TlK
      En5IBQAypo2iiAMHDrBv3z7q9TqO4+A4TudCtdakaYoxGX7E9336+/sZHh4mDEOCIGDHjh0E
      QQCca0ku0D+chBUoK5gZH+fMieOs6uth0fUJ8kXqzUkOHjoGQP/AAOPj05RLeYYH+3CFIO8G
      WAQjQ6uQ0uP0qZOsXzdClIQIx1KLNaPTkxTzOYJCiXBqijUrBxgdn8HN5YmThDBJOXbkGGEz
      JOeWgB/iSnB74EoprLU89dRTHD9+nG3btnHLLbfgeV5n3zRNkVJ2NPtympyc5C//8i/ZvXs3
      URTx+OOPo5Ri5cqVrFu3riMMF+gfTgIBRjB6/DiBksxMTtHb00c91lTrMcIJKBaLxClY6WKt
      pRmGCJ3iKh+hPA4fOUZoNIMrhjk9PkG1WWf16lVo6dPUdZqLSwTBDI4w5H0Xx/dohE3iJCGO
      Y9I4waS6Uwg739L/0AgAZJrZGMOjjz7KypUr2b17N9ZaHMdBa82ZM2cIwxDXdenu7qarqwug
      A656/vnn2bNnD7/+679OHMd86UtfYsWKFdx0000d69G2Fj/M9GrQ4O/0mr7T/V7Nnz7/WCMk
      xmjmZ2dYqixAqrEIFhshzSSit7ePUqnEzMwMcRRRLvqcPjNBd3cXbrGXM2NjzIcxuXzAiTPj
      +EHAXC3luQcex+CQywUUc3kWqnWKOY8EhZUp9UYDozVWGxbm55mdmqbUP/yq1/E9C8A5l3++
      /2zPLz2frcT9Q8hay+TkJENDQ2zduhWAw4cP8/DDD+H7AVdccQUjIxk+5Pjx40RRxNDQENZa
      vvzlLyOl5NZbb+Xpp5/mwQcf5Fd/9VdZvXr1OVrhh535/zmRttBoNjg9Noo2KWGzSWwE9Tgk
      NSlzC3MgLUJBvpinEWoiA5PzFZ499DD11LBiaAU9ytK3YiWz8xUQOXLllSgSAl9RzOeQQqB8
      h0ojwghDZWmJMIpoNEIWFxY4efw4I9suATIPYjl9TwKQSo2fCvKRQ6IEoauxRDiRJXE9tFK4
      2qIwaGnAeoAhA4VYsK1BvEZx4rVICMHo6Cg7d+5kbm6Oz33ucwwMDPCe9/w8XV1d52jvbdu2
      kiQx1eoS//W//heuvvpq3vSmq/nc5/4UpRS//du/SRDk0DpBCEWSJLiu+71Mxz8zskhrwUpA
      YW27mcSASLDCkiX/ZLZPu8HkB0Cu1SxNT5A0aqA1QjnMVaroOEVocCXI1GASw1xlkUu2X8SR
      EzUmZmdRXp7AU8RhigmglMtTY4GS0nQNFJmrLOK5HlII0iiiWatiTEpQLNKIEiINys8RxxGz
      0xOYMMTN5TBGIKRFkALfaxrUSgySmm+ZKaagEka/fC9//R8/RTHVKDLzZ1FgHLKSiMVazXJ8
      yHd1ypbJ7evrY+/evXz605/illtu4Zd/+Zfp6uo6R4tLKVBKcubMGT7ykd/l5ptv5vLLL+e2
      2z5GLpfjsssu44//+I+Zm5tldnaWz3/+89x99928/PLL39N0/HMjS4oVKUZojDRoZdFCYPCw
      1sNapyUgZ61e+/Wd0vJjXutYa1K++fTTzExPYyzU63XSNEEpSU+5TCHwsDphoLcXaWFmZhbP
      D3BdnyTRJFFMEsdUa3XCOMb1PRCWNI3pLnfhKIWwYLQmboYoIQgbNdI4Jo4ihLVgDPuef444
      amKMQZ5XD/ieLICjJamEyE3I6xi1/yh7bv8LjuoG0S/eAutWZWAkowCLYy1R1MR1VcsEffcu
      kVKKNE3p6urib//2b7ntto93AuLzSWvDfffdy3333cdHP/pRhBB88IMf5F3vehe7d+/mc5/7
      HNu2bePrX/86Tz/9NDff/NO4rsu2bdv+J0iHCiwuVlisMBgsFolAoWynpxAwgO4c84MgqzXH
      jx+nWmsQ2hSLwHd9JIZ8zsXEKY60kDQZ6CkRVquk1qIADwtCYrXGWJiemcGkKRbwXYc0jhHa
      0AybWJPiSUHB8/EDF5Ok5PwcSIU1hqjRYGpqgvVd3Zl73gLlgf3eBEBa0Dalu1rl+U/9KeMP
      PEG9voCxEXd//r/z07/3OyAk2iqMFDhknT3zC7MMDAy2mNZ+V9NujMF1XR577DE+/OEP4zjO
      Ocza/lypVPj0pz9Ff38fn/rUp6hWq/z+7/8+t912G47j8Ad/8Ae8//3v57HHHsNxHD75yU9S
      rzcZGxt71azRDxsJJBgXISKkTHCkwVrRQkQahPAzFL4lazEULcBaa/5e7/q/G+UgsVSXKjTD
      mHrcpKtUwuiEou9QcMDzAgLPB6voyeVIjOX0xASpp4iwpIlGInExRNUqrqOozTfRgU8xCEji
      iMBqtE4oFvMM9vdQLOfpKhVZqEU045RcPg9YZudm2CgvQlvT6iTLXt+TACTK0hMlHP/i3VT+
      x+PU56eZIyFwBPu+/iBJavj5930Qr7+HJO8RCZdcLuDMWIW+vj4EojPx383EJklCX18fnudl
      5mxZAStJEu655x6efPJJfuVXfoWLLtpKmqbcfvvtfOxjH6O3t5df+7Vf40Mf+hCjo6NMTExw
      2223cejQIQqFEjt27PiOxnE+g3wn4361rMzymsPrNXR/d+e0SBWCXSJpTuOICIUlTZpYBNLp
      Q3kDCDdPQgumfF4h/PtlAZvNegZm8wOEkwHaAkexZqCb9atXUfRdPKEyd7rexCjBUG+JRppS
      qdSpLtUIw4gwivEKAcJa8rkirlL4jsAv5cjnAhwl6CqV6O4qg+fS14w5OTFLI0opFEss1aq4
      rsLadhzaioFezwLYrD3/bO9lC9IauZqF5w8zds8jnJgd45QTUUx9SqnATSNO3//3/B9PPIsa
      6sFbM8A1//qX2LHzYnr7+pmcGGd45Zqzv91igLPa3LL8fgtxNqnkOA7FYpGpqSl6enqw1jI1
      NcXTTz/N2NgY11xzDZ/+9KcxxqCUIIoibr31VgYGBrDWdj7v3LmT4eFhZmZmuPji7fi+j7UQ
      x3HGQDJz1bJxmdb5xTlM235fDq84v0Ldrji3r6m9Txvl2O5//XYpRdvqiz3729mY2jfDdr5t
      9cgKTa1+irg5iTQzxNUpwkqFRr1OM7XkSutYvWE3xb51IBxAdX7h9elsz+63ysi3Hh+GIY16
      nTAMGervo+A7rOjrYeuKPga6y3TlAvJegBAOtVoD7RhWDvVjlIPr56hX60xPzZJqgxAQNxsM
      9vehlEQJQ1epmMV7AqxO0TolRJAvlEiN4vDJ00TNJlhQThbwSylbAp+N93UtgMTiaEGiJBrI
      GeiqR9z9lbs5c/IYrtW8odzNlnw3WkvmlhaYcw3HGuOI47MUDx7nq0/tpecT/47yj/0EZ/bd
      x9aBHiZyAxTTlPHxce68887OzZayDRyn8127irtz506uueYaJicnOXz4EHEcI6XDO9/5TorF
      IpOTk3zyk5/EWoMxGtd1+cAHPtBhsCuvvAqQCAFXXHEVQgj279/PAw98nQMHDjA9PU2apuRy
      OXp7e9m+fTs//uNvZfv2HQghsTazOl/60l9x+vRppJRccskl3HDDDS1rdO6YH330UZ555ikA
      hoeHueWWW5icnOCLX/zitwhLh42WMb6Ukp/92Z8liiK++tWvdiAfH/rQh7KMVdvPtx6eLCBN
      k7AxgbCHGD19lNPHx1C6yED3OvK5HjRLjM1OE8kDrNMQOAEy6GKuZvjvn78DKyMco/F0nlil
      WMw5YyuVSmzfvp2rr766U21fLpjniIq1FLp76eouU5+WeEKQVwGDfkBX3iEXODi+C57CVYr+
      YjdGSPqFQro+wvGx0mHdJo3yAkwaEdYq5D2FMCnCplmXvLUkSUTUbJCmAqIUqQ39pRyH05im
      hkJvL4GfO6vMRdslfB0BkBaUgVRCUxqsY3GFZvLxJ7HffI6r+/opFVZiHYGs1KmHCd1ejnxP
      QLG8iudfOULqKrZWFfd85D/xni9sZ3DrCr55/Dk2b38rOk2ZnZ09jyHOzRIt17KO4/DWt76V
      P/qjP1qWv1dorbHWcscdd/CFL3yhBYNIUEqxfv163vWudy2zMhZjLGEY8od/+Ic88MADpGl8
      jgY3xuA4Dnv27OHOO+/kxhtv5Pd+7/fI5XIAPPzwwzz99NNYa7nlllu48cYbWynYs26dtZZn
      n32WO+64E2sNu3bt4j3veQ+Li4vceeed51iOs5biXAYCuP7661lcXOQLX/gCSil83+cDH/gA
      vu9jbAzWQ1oXndYwdgbfW+Klh45w8PAYb3rLO9mw/TLwAjAST0MtnGF+boqX9n0Tm06wYePF
      NOJ+7vjL/xurFFIkiNRmDSyvgrlyHIfLL7+c22+/vTMfr0VBLke5VIbh1SwuVmk2GwS5FR24
      SnuuhdPCbbkuVnmooIDwCkgvT1G5KMeBNKZZKyJ0jLQaoSPSOCRNEqzRpK0kCYDWCXESIZVk
      YW6eoFxGiAwZYM5LwLyOC5QxvxYCKS25KMQ5Mcrxv/4bdgqLHzdo1EMW0widWGIDWlrCSIDb
      z9C6IY5PTzPcVAxUQx657T/yts+8n78+8DjbLroaq/wWstN0MNtvfvObCQK/M4YkSTraOUkS
      7r//fn7+53+enTt3ngNuq1Qq3HPPPee5U3DHHXfwEz/xEy3tebbS+/GPf5z77ruvs9/atWu5
      /vrrGRoaYmZmhgcffJATJ06QJAlf+9rXSJKET3ziE53YY7mwwLf6zWehGKYzpjZTt8dsrWX7
      9u04jtP5jfOtQbFYpFKpnINePcuQNkszW4nRC4SNo5w+8SIvHhzlln/9G+S61pEIj9jECGHQ
      QuLmVrJ61SBOmvLCswc4uO8BlLcBD0NsPFIRs33HFgI33xlDHMecPn2aWq2GMYZnnnmGu+++
      m1tuueXbCgBWohwXrTW1Wp18TzeB73auUxuDSDVa6VZSI3N1hPIQbo5EuLhukMmhA66fx6YK
      aVNMmHTmoe3auK5DqjUk4DiKfD5HPDlDvVknSZOzTL2Mvq0AGGHRrTWI/NQwUIl48v/8PN2j
      k3R7Dks2IkkjrNU0hcUomeG/raE5N8e6q3dhdqzi6ef2c2nDUjh8iJfvvYfImcfYCCmCFqOo
      jvvzB3/w+/T19XWY2BjDqVOnePe7340xhjRNGRsbY9euXWfn2Vruvfde5ufnEUJwxRWXMz09
      xejoKMeOHWPPnj288Y1v7DDvc889xwMP3N85x7XXXsMnPvEJCoUCWmc349Zbb+U3f/M3eeKJ
      J0jTlIceeogXX3yRXbt2dSzOucHrt+bCl2dW2u7L8m1SSj7zmc+wcuXKc2Kh5dS+XqBz3rPH
      Z+k8IWLGJ/fTVaixd89edr/zl3D7B9BWIo0m0ClWJmhpsdYh1T6rRy5laXGM/S/cTZweoxhI
      5sMMRfuZz/xnRlatPWccR44c4b3vfS/1eh0hBC+99NKy6/9W3hEii0lKxS4Ozy+glKRYzGNs
      itE6UxzWYowmSRIcx0FIiXJbVSOjQRis1mgJ6MzlMTrF6ARM6x7Is/FYW+mAQcrMC3CURGDP
      ZvjkuULwbQth0oJjzq5I9+wjD7P48n7SuUXmqnWaQqKRiDTTroFU5JVDr1X0hpoTz7+EG0i2
      /uQV1H+kj4nuJqdmTtLVU8ouqC1oRrcu4mxxJvs+c0WSJEFKidaZX79x48YWjj9jrDRN+eu/
      /lLnuJ/6qZ/ine98Z+f/toslW5N1//33d471fZ/f+Z3fIZfLtYJnhTEGz/P4rd/6LXK5HPl8
      HqUUzzzzzLcwudbZDQzDiCg699U2ya86t8tSrsv7Epa/XitAblMWzBmkbKDkIgsz0zi6n+1b
      rgHrYYmwMsQKgzQKVyuENRhpiHBYsf4yiuWVxGFEf38RJSOkNdhEoXU2Bq01WmvWrl1LPp/v
      jKdYLL5uytRaqNcbBEEOpVRWma8tEUVRJsyd/VrXnjEBSlikjiCuYeMGOm5ikhB0grQp0qaI
      toLU2RiVUi1LmsV/cRzRDBtIJRAyyxIuW1uxQ68TAwiEFaQSjLSs3X4Rx4p50sUqLFbxjSZP
      Jn0eFhfwhSDAoWgh6B4gkQU2bR/h4Aaf2qoFNr7pMlT/CgKhiGlXhiWCzF34rd/6TXzf7zBJ
      kiQcO3aMJEnwPI/3ve99bNmypbU905qPP/4YJ06cQEpBf38/b33rW5mamuQv/uIviKKIvXv3
      cuTIETZv3oKUgldeOdQyt5I1a1azZs3Isj6BtmYXrF69hnvvvQ/a1+idC5UQQvDVr36Ve++9
      l3Z2pP19WzBfDzT2kY985DURqMPDw3z0ox99TZi2EC4GhdERnkoYG59i68YrcaI8ViWkIsZI
      g0FhrYtrBFZFIEALCLp6yBV7CeMxentLHBufQ+Bw8thpms16B6pijOHxxx9ndnYWa8HzPN7x
      jnd2LB+cRbVo0XJJdJZNqzYaRInBkQ7VxQXMiiLWWDAWRyqEFAgpMUCiDVJrdBKDysp3qU5B
      ukg0QieQJgibYq1Bpxn/ZJkdi5ASx/MQpkbcbJAmMa7vE0YxxgokFm1TjFQIk2n/14kBBFZI
      JBZrLLkNm/iJP/nP7P3//l/2fOUu1PQUKxyXkicpaI0SDspzQIEUkJ+sUr33Oaap0vWO9cw2
      5phLI3Z270CbXGZesunLJtNa9nzzmU5e+vwyu7WWffv2Ua1WO/AHaw1/9Vf/D1mq0fK2t92E
      57msW7eOK664gqeeeoowDLnrrrv43d/9Xaw11Ou1jr/Z39+HlApjbCvdKVvnzsZQLne9Zq6+
      raXr9fq58/Yage3y7W2ttXfv3s5354PyXq8ybazEECC1Q7pUp7owy8qRS4m9ZifLIazAydgL
      rRRWgjUSjMFREuV6JCZFqBQpJNoK/rd/8yHEsgxQu84ihKBQKPKJT3yCSy+9rHPvsBbZyswm
      ErApslrDKsvmjes5efAQeSEoeC6+6+EgkMaipMDxPAwGjcZTfqbVW0VS5bpZogfTcYscKTPn
      wZxNkVvbUqPKQSofqSGvFL19PdTmGoRhSlchj2zUkb5L6DlY6SONfJ00qMgkWxowUrKYA9b3
      cMkHfpHBN1zG3f/ldp59+QAjsWETAT3WwfE98A15V1BEkoYpLx5aZPhqg1lY5NHDf8+GzTfT
      Rx/CRGAlsj17SP7tv/m3FEuFc5jlyJEj3HXXXcRxzFNPPcVnPvMZbrvtNgBefPFFnn32WSCD
      S1x99dXMzMxgreXHfuzH+MY3voEQgnvuuYf3v//99PX1kcvlOgy6sLBAmiYIIc8B07UZb2Fh
      obOv4ziUy6Wz0yME11xzDTfffHPnmPb31lr+7u/+jocffvjVp7Z1nltuuYVisXjO9bapXb94
      LZLWIESCEAbluPi+QxTNg0g7S8u2a+5CtAFgaSbkQmNNgzhJCUNDZamZ+fKtecDqznmWj6HZ
      bPLFL36Ba665poOstAiMzFxmz2h0rcJLDz/EqsFe/No8WtdoOoqVxW4CXCwpRqQYNAidBb6S
      TMMbt+XbZ+lQx4AwmbZv+/BSOcRxkyRN0TbrO5aOQusEYzRCCrSBYrGMna3iA2LsFDPzcyxq
      zaarryFxsnTotxUALcg6+g0oLUitIHIVVc+h94rdfOCz2zn2/Dc59tAjHHjgcXZEdQaSlD48
      XBMQFgMO1WcJdvUSBksMj+RJZJNTUy+wtjxCMzRUa4tkIDmJEIq3v+Od9PV1nzP5Simmp6d5
      6KGHsNbyzW9+kziOcV2XL3/5yx3tqbXmwx/+cOeGLe/1rdfrfOUrX+GDH/wgW7Zs4YUXXkBK
      yejoKFNT06xYsaJzvrbGP3PmDD/3cz/X8eXf85738Bu/8Rud3zTGsGrVKq6//vpXZdT9+/d/
      u+lFa80v/MIvMDQ09Kpa/rXgCR3Qn7EYlSJdB+mUWTG8lqOnR1HCQRuLsZl7aUXmymaVHBdr
      FMpawkadpaUG1YZmqRqhrQQLf/pnn2XlyrNjSpKEO++8k7vuugtrLXv27OHw4cNcdNFF2YAk
      aGuzcxiLbdSZObSf4mwPIzkXx4REqSTIr8QVDtoYjM1QSrbFY7YVuArOZoh0FGONxWmBKJWU
      Wcoz0RghwZEoPFCCJIlbdgKU45Joi1AOhSAgrlRR02McH5+hIh3W79iJ7MnRrgm/JlnOCoEy
      klyiKDcVQZL57DpfYM21V3PTR3+bH/33H2NfwXJSpSzEmllreME3PLM2QF7psuDWEW6eFWuG
      eOLJO3n8ic8yv7Sf/QeeQUiJwEEKi5RnGbCdbkzTlKWlpXMYzxjD1NQUDz74YIfR2w0t7aCq
      /V37Rn71q19laWmJ66+/vqPVoyjij//4PxHHcUejtYO/22+/nWq1SrPZJEkSrr322nMqoOf3
      ELwaKvK1NPjyrJBSqpPBUEp1/m8H5MuLTlLKTCBb50ltSipcrNPP4PBFCMdjaW4SoZtIEqxN
      EGggxbZiLikE0qacOXWEpaUalVrMQiWkhdpi1apVrF27lrVr1zIyMsLGjRv54Ac/SD6fb82P
      ZWJiYpm1NLRYOItJjGXdmtWMnzxBfXaWnZu3INIMyxUbQ5JY4sRirAThoJSPVD6plRghUVLh
      CIuDwRUGYTRCZ4GvlA6O4+I4PkL6WBTKzaHcANPS50I6mZ+vHKxJ6CkXmJ08A3GTbRvWE9Vq
      WeTyehZAWXCMxQhB6IAyopUV0sjWmo8JkqrnM/KWN/OuP/lv3PlH/57nTh7FNOZJgm4u+Znd
      LLGIqA5wyeqreGXyJF29+3nlxP0cOv08YToAxkEID0TIR37vd/Dcsz26juMwNTXFgQMHOoxz
      +eWXk8vl+PM//3PCMMRay9DQEJ/97GcJgiy12haA6elpbr31VtI05cyZMzz66KPceOONXHvt
      tTz++ONorXnkkUd473vfy9vf/nYGBweZm5vjnnvu4ejRox0NfN1113HZZZexPNj9h1A7Tvj4
      xz/eaedc/rtt5n//+99/jiWLooj3ve99CCFQSBKpcAKXay/bxi+9991c9cYyR488wbaLLkI4
      PkY60GIapbIeAYzLQmWME6f2MDl1hoHB1cTJ4dZqy9+K1JVSUigU8H2fRiNESkmj0ehsFy1H
      ywpIUODlKA+sIDApp2amKXsFetwcGAiFxtMSaxXGSrQWCKWQysUIl8RKSBIca8FGpEmKSQ0I
      mRXQlAQhSY0k0ZIkyeDfaWoJQ4MrBEIqlOtT8Bys0fT2dUOxwObN6/D7BrPAG9bqgGsAACAA
      SURBVIux+tsLgDjv4lIlWhVCi8QiLQiTpRe1EPRftpsPfP7/4r57/hvVxglWbhogVhZd8Vg1
      tIVtG25g42bJ1NIRXn7hAcYmjvP8nv0gDUYbhJV848mnMFYjrYewIJTGCNNCOCo2bNjMhz70
      v1NZDLnrb+7BWgclJTfe8HY2btyKNZlpbWun4eE1XHXlbp586kmEUHzxi3dy001v54/+8D/w
      7z7273j88cex1nD48CscfPkgtIB6WeVQI4Tgxhtu4OMf//0WWxiEMljRjtRbeByhofO0E4EU
      KgsOFbRq8BgL4CCEixAOxhqefPKZLN+NRiERtgWpECAl/PTN/6qVwsuq3tbAyy+/jNYJrlLZ
      qmcqQIWGt1z3o2zauhKdfoOv3/cMM/MzJFaivCJKeRRzLp7v4bou1jSpNyZI/JjdV13OPQ9+
      g1o9IY3PomSsabuSFsfxcF0PITJffHzsVKtor8iyy0kGvZbgF4uIfIGuVWvY3NvD3HPPUvK8
      jmZOjEZbizaWpWoNbS3KdUiFgyAT7EIQkPM9ZCu9pKRDYjQWSTNOqTXqTM/OML+4yNLSIsbE
      CJOyengVVgsSAUiJKxz6in1s2nwxJgxJJRTyxQwYyOtlgVrujwAce/ZG0lroVLe2qda2+eoC
      1foc5U3DqNASCgnWZcPIVVy64y0ktgipYkXxIhYG59m79xAzMwv0DuTp7e3BdaFSbdDbPcDG
      NVvBuED2EJ1Sl8OuXbt483XXEgQBhw69zBvftB0pLsMYzc/87E8CURZMdfDeGYP+8q/8Ij29
      5UxrKsX09AQDA4P8yZ98ij17nuHe+/6Ol158iUplCWNASsVA/yCXXradt7/97ezcuRMpsgIL
      Ft5w5W4G+leAhYsv2p6l4Ag6a2HKVn76oq27eMdN/wtKSVavHkbi0N1V4h3vuAHHi7BWkCQh
      jUadSnWBRn0JYbMONYHAWM2j37iDOHbZvnMDhXyRiYkJurpKhFEDa8B1fHK5MtdcfRUnzoyx
      1Fxkw+q1hLVFPJpoY/HyRXSqCetzJE2oRJpaMyHRgt6BVTx/4Ene9TOXE4Yx1WqTfQe/QiVc
      z9DQGkr5fnJ+P74fcPO7f4Yzp6eQymK0wtoERJgF1VZlMHkyZs6Vu2lON/F9j3Lew5EC1/Pw
      fJ84rDFfrTKztMTs3DwWiJKE+UaTpJkiUstQbw9XXLqd1atXIqUgTVLiOGV2fpF9+w9yamqS
      ejNEOi75fMBQbwl0xEuvHEGi6BteQb5cpOTncbTEwSVVEbHRdPl5tJAIa76fa4NadGrRtko9
      nCBOqwR+kWKhD0kP4CFQzMyM8ndf/xLTC6fo7iugE4dUW/r6ihhRZ2F2geZSyI5tF7F9yyWs
      WXMxrtuDER7GZGlKa0GKLIdsaZviNqy3bcKXVynFOdDpToEpy3siVWbFmo0mactX9f0AY9tu
      yTKXx7biFdlCZYoWlMN4ZK2eGitSpDQIacE2iZMGzbDC3NwEM3NjLCzOUq0usLRUpd6ok8Qp
      IMjlcxQLRcqlXorFLorFEqVSgXypyMmTp/G9HH/2Z3/OlVddSi7vU6uHNBpVent7ueLyN3H5
      ruvAuMyOPkt1fpy0ucDU+CmWKlWM1aRGk9qAWtOjf8Vmbrjp3eTKBVLbpFafp1qfZW5+jNm5
      ccYmJpmbmcNaSU9PL+vWbWD9uo0M9W7LClvSR2tacQMt4RdoaXF1RHTqBHNHD5MTEamO+MoD
      f0/X0Aq6Cw6zc7PMzS2gHJdCsUySGgyCyUqN6twCOUfRm/NY0VfiyisvpdTVhUkM8/MVXnhx
      P3OVJU7PLzFfb+B7PsODgwwP9FDyHRYbC0S1OsVyF8Pr1rEwPs2l67YyvGoQIRLScj8rLr2G
      yPWB76sAtHEZWcCV5WgdhPUwgFSalw48w333f5lil0C5GiMs1vj0dA+xYcNGjh8/SuA6rFsz
      xOiJ/UxNnUbg0du/mv7+bWzZtIMVQ+uQlDA6AKuwqn5WY5pWdkSCsRFCKEzW+YGUDu1awfkJ
      F2tNVlK3LXfGWoSQaJMJR9bQmQV6WIsSAq1TpLRYNFKCtg2siFhYmGZ2boLZuSnm5qepLIwx
      NztLHKf4Xo5yuYu+vkG6isN0dXXT09NPV7mHYrGLIFfG2HwrFZg9O8taTS0cZd9Lz+B5OZqN
      JvMLc5w8eZSEmGLJobI0T87v4e03/AIb11+OFRE2qnHq0D4qs+PMzU4xO7+IcPL0D61i6/bL
      WLNhGxoHaXxk1sSauTekSEl2H0XCQmWcialjnBk7wvjESSqVCbrKQ6xfu531I5ewYmgDjhNk
      CskKUpn1gqfjU8wcOEBBRCRJk72vHKORanwZMz49Ta3exPPzIB0qlRqj45PMNxKUNlyyZSNp
      bYG+kseOS7axZctWlHA5fPgIz7/wEov1BoXhEQ4cOUbUjOguFOgtBOQU9K4sEQhFsVim1N9L
      Umuy++JLCXI+URphe1cyuPNHiKXM+PT7KQAZN7U/iM7LygbPvfA4Dz7yFRw/RkpLnER4QY5C
      bpCN6y/lzVffwCuHjrN+7TYKuQLKNqhWpzj4ykscO3mM2YUXiOOIUnGAtSNbWDW8npVDI5TK
      a3EcDyGcls+mMDa7eZ3Gb1QLM8PZkiVn04xnB571LWdfZUG+EJkfr02WbzcmIWwu0WjUWaws
      Mj83x/zCPDPzp5idH0cbTRAEdHV109vbS3/3egYHVtHTNUSx2IeSuawPScStManMSlnRamNM
      W5YkY0owIFOefvop+noH2bRpC1JaorjBqTNHmJw6zeLiHIFfYvPGy1m75iJSx0HqFAeNJMWQ
      Yq1EyFyWI28VnoywOKQtF1a15qrlzqgQa8mayK3bAhJqtJ1ifOI0x44fYHTsCEvVWVav3si2
      TbtZP7IBr1TGaHCWYqZe2I8XLrJUmePY5DT1OMETIa7vEqeasbFJxidm8IMSO3ddyt79h9l5
      8cVs37SJgy/upaugMCZmx45LCLw8L720H2MlzVTTt2oN0svx8sFDbN+6hfmpMcZPHmPtxmG6
      gwJaG+ajJs1GyKbhNYysXMVS2CRYs4XSpktIJcgfjAC0Gd/SdgcqtRn+4vOfIdZzIBIcJ08x
      1wvG59Jdu7nisqtxVAEpPGIbZWm61ENaASoGFdOszzMxcZrRM0eYmDrBQmUCrSOkV6BULNHd
      3Ue53Et3uZdSqYdCvhvX9fG8AlI42UuKjgBkpXOBTjXa6FZqNSWKmzQbdZrNOkl9kVq9SmVp
      jlptkWqtQiOsEadRBglwA8rlbgYHBxkcXE9f7yp6ewYp5LtRKocULtoIjLFIlaEKhcx6lrGq
      BQJc3o4lznulIFKwllotxPdymWtmUoQyrajatuITWsxrQaQokTF0Yi3Gya5baZFVUNvNMxaM
      XHa6thLAIqzTws6brGhm0+woU8TaGKFSECG1+gKnxw/zyivPMj+zSNfgKi6/4hq2DGxgfM8L
      FNI6adzga488SlAq0l926e8rUMgXiWNLtR7jeTksLkFXH4Hn4UlF4EASL1GpzDE8vIrACRgb
      m8AL8uRKXTTDkDhJSY2h0aih4waeMnSVC8hI0whDzlQXmV1Y5A07L6cnVyRBUN6yCzu4Fi0M
      iuQHsTDWMp9ZCKRwWFo4w65dF1NtNolDRX/PAN3dA2zedBXFfCFLp5oY6zQzWEKqkU6CsHnQ
      mSYs+kOsW7+KdRuuxrOaJK0y25hmYfEVZharzE/PMX1qgqPNg9TSGmmYIoyLkg1w6khVzKyE
      0EgFxiTYJEZYjU0lRvtoC9qEKKlQIofvK5ygh1yxTHdPL6vXbKWnPEhX/xC5wjAlN0/eE0TC
      YhGkWoH0EDpGGEUsc0gihNCZ99SClAgpSYxDDo02Ei1dFBGuSdFCkTgaaVyk8UmUAgPFQh6E
      RpskK+BYB0sDRRmMjyEEJ8WYLGGhEaQiK4JJKzCJQEsJqgEWFB7CpBgBiJayEdmSIdamWOvg
      GIPGkroCIRycxGaumfSwKIxxCXI9bNu0nou3/hjNqMrE9DFefuFF/K1FSsVubKWG58LwcD+j
      U3P0lPtxVQ7PC8gXXLr7PBqNBIGD0BEiTQm6u3Ak6EThuwUc5Wcwh5bCcJSgWCgTxgmpTfAD
      B0eWySkFRhPrRlZpFopUQz6XpXAXYhjoGSDEorAI+3pQiO+FxLn/WCNYt/pHGVnzJqxIcYVE
      2QRrQrRooEQTi8RxAhLrk6YKR4UosYS0DawoIHDBmgzHQoggwlWagZ6V9BW2sH4kxZMRgY3R
      0qOmLUbXScMl0rhBksY0k5A0bqJjkfnZ1kGIGEdG+IHBdXtABXiBxPd8fNWF9Us4gLBxFh/Y
      ABCkIsbKAq5NQDdQQmBEgJQKRELghBnqUhiw2VNxjTkXH+S5DZRJETLAWAerW48EBRAGR8Z4
      RGBDsm6+VhQiFAYPbQRCelibImWMpIHFARsALrrN0MIgbEqggDTFki1JmCYGQ5BBhUlQKskq
      8tZFawchIpRKUcKSWgdwkUIjxRJWpAipMVYjbNbTi/FxZZGR1RexbvUmlM3RGJ9gceEUQaIp
      5UosVU5hVg/hOAGuE+D5Pp6fp1z2s/thBcKVSAVRvUYSNrE6s4DCGKQxpFETk0bkiwVy+TyJ
      TbNin04gSUiSBsamGdrUZA3wSapp5AROuYRxFFacfW7ZD35pRAGpiVHSoESdmcmXaCyOIk1C
      1syZYERAsXsLXd2X4LlFsBVOHn8ME6esX38NOMMtk22QToNXDj5GGqWMbHgDQdCNUE1OHH+C
      pDrJ8No3kCuv5eSJ5wmbp1DWRZgCKTWEaAI9bN16A9LpxfNCXnrxYZo1wcWXbAW3h9RmPrG0
      HkYusTB5iNOHn8sw64US67dcSqlrA4mIWVg8w/EXnyLI5dh++Y9n8YRZYu/T96PjhIuueAtO
      bgVSOpxbITbse/7rNOaXuGTnNfhdI7gye/ynERJhFfXKGE899SDGSREiyVKMwkM4XfzINW9D
      CoklQNDk9MlnOXZiH5s2v4GVKy7DKpXFMdYgbBObLvHii08zfeoIRjgMj2xk+2XXkZo+hHVR
      KuTZp+5lbn6SHTuuZWDoElJR4Wv3/w1SCN58488hlUucNnnkgc9nOCGrW8IjSK3kTde9i3xx
      HSYtYlSEEBZ/RT/RRAkzF1MsDRIlgOMhpYsULsIohFUo4eF6OVJhwWrSsE5cr6KjOp7jYrXO
      Gl10ghQGHdZIXR/Hz6PQpDrFJDE20cRpSJJG6CRCCUWcaGIrmWtGbNpyCbHMLHHm+X2Pq0J8
      N2SxWFnDWA8p6sTRMWpLryCNQuOhbYwhwPX7SItVHJXD6iqL0wexaUK4YgtucQglDJasGbq6
      dJyk0WB2sszw2n6UCGnWTlJdOErf0Dr8XD+N+VPUqyeyx3BqBys1sUiJbS/rNlbJeXmSZJqZ
      qRdIEsmadRvI9XgI5WZZIZ1SGX2W/c99HUc3sMajtpSwZ+ogV7zpf6XYv5J8PmBhYQIz12Dt
      pl0EXStoVieYHDtIzi+1gug2uvSsAAgsldljLE1XiDZvxysPY6xPOxqwWqLjGtOTh5COINEW
      pCQ1DsrvI46bKMfHCoGSKZNnDjA7/jLFXBcrBi4GJ58V4aRFmoj77/8Kc1OvoGyEMAGz8yeY
      mjvFdW/9ZbA9CJuwODfK5NgxNqy7GDOQYm3E1PghlJTosInKl9E2ZGbiIHGssSYL3q2xGKG4
      7A01ggJIkVklYzVaeWzcdSULhw8zXjmK8XLEiSHjc4t1sqyaIyVSCIQSkGTMHDbqgMFxHYRy
      EC24hcCSxiFJXEfIrGnLap01zsQxiY5I45gwjKnFCcbPE3k5Nl16KW6hhG5DSMmKXP84i+Pa
      AHQXKEMa5zFJkcGhTeQH1rbMlI9we8ie8hQRNecRURVloVmbRxZCpDJgy0gTIEyKYpG5qUMM
      j7wFkZRQSRdEHugi1vaxZdtNmDChsvgiJ0/uobe4mbWbryASRZAr0TYgrDSxoUaySL16hqBr
      GBQoDMpqRvcfxKQOAyO7GR7azrHje5mdP8yRlx/j0h95N4HbS1/fKqamX2Ru7gyrSl3MTJ9A
      ELFi5Xas6slStOLcjJMAHK2RWmfVdCsy31pkaM1sKUmBsQnF/ABXvPFtpMLBCom2EiOyJQEt
      Wffd3OQkIo2ZmxxF0cBKB2EVwmomx04zM36KoFDgyjf9JDQte565l9OnDjA9fpT+FZdkT3LR
      Nju1NViZIFIHaeLscdQmGyNCg7EI63Pj296N65dJMy+PXLGvVThNkGQNOBiBlQH9Wy4mv2Yz
      +8dGiZrNDO9vPaRwsCbF6DgDwRmNjWKieo2oGaKtRhUcrPIysJtQCKBab4DjZrAIKTMUgc4w
      Q9ZAFKfUGjFzYczwjkvY9IY3IZ0gWwas9ZwBaAE9/xG4H6EqYB2QMUZGaBKE24Nxt+MrH5sK
      hOOg0SBTKovTnYb8RqVCbijBCJ3NtMlhUgumQRxOUam9Qm95FUY3EKKBoEYiGqjuIUSjAHaM
      mlejmMuh8msIVIB2XFANFhZOIG0VKSyLM4sMrPKxJkBYjUkaVGsniQLB4MWXYljFugKceeR5
      xNIZTKwxTo6Rka2MTz3H5NQZ1qzfwtiZk2hjWbFqA6ko40LmLpzfzGIkaIvopDwzJCbSYK3K
      fHjpgMgRlNcjvBKWJMvK2Aw/bG1K2KhTrzSQAqqVWeJoCTeXz8BzxjA3M42DZWTdxXSveCNl
      6XH69AlOju5jcXaR3oEY61qMUWjtZMU/kWbjsoDWHcSkxYD2MalDX98GVNCLkS5GpFmWyZVA
      hLAp0gYoXCyWhgLdlcPv6iaaqFCtLuJ5AiFbDygRijTVRGmDZqXK0sIivb29RDpB+XmkF5Bq
      jfJ9HAkmFkRhiO97CKcVP5mMuXWiSSJNM0yZXaozUuomDfL/P3tv/iTXdd15fu59S77ca98L
      VdgBAgQXUaRIUbJkSR5Z3S23PQ67l4keu7tn/Ev/B+Oe8Ggc88P0jN0T0xF2uLfpbodt2e2F
      2qzWSkkkCJCEsBA7qgq175mVe+bb7p0fXmZtqAJAiZuI/EZUVFXmeS/fvXm3c873nIPpRQp+
      5LtpmcLfDSV4F4SWGEEW3/RQQQLDs9HKQ0sbKUOkXUOYMaQyMbVCm3Xq+Tm0tqnHJGbpJv36
      E5hhmkD4KKOGCk3wbCQuuZWr9MRPoYXEVwZaJTAJMcMYwgmwChZ2PYORliAMRCyJlIK4Cimv
      raIMAy0VlUIOW3m40iLUAUI1CFUNM+gnFmax4wm02c/4sc9iGBnC0ELbms6BIQzpsL46Q+Au
      s5FfxokPE8+MYtp1tIhW852QhNohMEpoIg+3YVURoYVUBpogcrb5kQ9DmQoZA6FttAKz6Q0X
      wie3cRM/CLBScdzGOv5GGVJDxISDoSqEfhVfhRimg2kE6LjFwPGniPcM0d03HO3A2kIpI1KQ
      RYhQCWCdIDBRhiQ0PKRwMVQM7UersNBgmwkCqcHQkY6mAqI11SSUCqldQhHFkpjKpSNlsxj4
      zG8UCbRkIGMgYxIR92mELrnCBvVyjc5MJ77rIk0DEfoYhotwQFsRr7Xq+iSSDo0wICajyYPW
      +IFP4DYoBlU2RIOqW2W4rx+hVGQKbo1Jmg3gAWS4dxzNo0BkcxdIFY/IdoaFq0DYErRPpVzC
      slNYqQTVtTV8r4IZTzVv0eS5awOFyerKDMcO5lHKixw3qKaKEyHKEdSMbmoS2IQGjUcuv4aT
      yGLFTPKrJdxGCWJxhLSQtoObyOD6ZcqVSXoSSZTMMn78ExgaAmURioC4Haev5zBzcxPMTF7B
      92qMjg6iZYxQxPblmyutmlFoe/gBhI7MtMJD6TqW0hhek4goFUpHxDNLmiwvLaCRHD5yiqtX
      X2dlZYGhoSNREIeU0bFEKwhBhgLhw9Hxo7iDI0iVAWkBAaDRSjVjCHTT6d1MUtZcMDU64tOE
      msDw8XQIwgId7lmGVG/7Q0qDbEcnl/J5HOXg1+rghXSk0+iqIFfaAMPk0PgR1lbX+dr3/paR
      g4cYPziOtB1MIWmUG9y4eo382jqf/cJniFl2lBZFK1QQorRPwwso1xpoLanVXRDNDB77EHjf
      swnQYui0JkDgboB7Ay+UhDpFPDVIoDSeV6JRr5IdGEIlU5QWV/DqeWKxXjCa91CgtImd6KRW
      26BYug0qQIeCJh1r63Obn6e1bp6Zo0lUq6zT8Kp09o2STDosL0xQLC2RTXejtIU0Y3QPPMnS
      zBtceOUv6eu7yYFjH6OjfwwdxrBtE41PoCRDw6eYm77F7WsXEMJgaPgggbYxpY3AR+zq/Uh5
      jDhELcblFiInopCaULnU3RILMxcQwiHEomfwAIlMNwITA8XayiIIg7Gxx7l69RJLK9OMiBfR
      KLRU6GYeJKFDTBp41QrS8KLvw8oiDbPp6NJRkIreOiDoTS7U1pPJEEwC5u5eRtoLKBTpzk4G
      Bo43v182qSZaRHGLgogcOHbwMOWGhzIyBAI2KmVCrShUytjNjBw3JmcoFIt40ua7Z8+RvHKV
      jzzxBB3pLNcuX8ZCcnhsHC+EOBGV2qu7qDDA9VxK1QZuoClW6/ihon9gEKX3D3x573aAHVFa
      mtnpt1icPUuASaj6ee75X8aKpcnnV1C+j5PsI4inUVpSLi6SzB5BCqLc90rgBYLx0WMUr51j
      aekqUsiIoYjf9Ea3sEV+EyLi+GjlUywsEYR1kplh0skE6FuUigtkB0+ANPCDgKcf+++40qiy
      MvdjVuevsbBwk2zPOB994Vex4p0gDJS26BsaxzJjhEEZO95JZ9cQSjpRp2t9zwmopRTvHe+7
      RUFGCyqVKq+8+jW0DvFVkhc+8fcYj3UgzRS+nyefWyae6KGj8wCGkWQ9twDKBzMkbO6HKlSg
      fJZXJvnm115Cyjohgo+98EVOnn4e25CEzUVii0a49Szbv0IrjAEur37364RYaMPn8Mmn6eo6
      SCxmtRwZsG3VFTpi53Z291L1Akp1D20bdGRMtG1Sbrh4dZ9AKyxpsLa6Tjye5OTxx7g7P8t3
      XvkRXsMl4cQ5NDZOQYdcuHaDsZEhhNB0dWTQSlNxXeqhpuqFrOULdPf0kUimIvf77gSoTbz3
      JZJE9OXaTpZYrB8lBIgulLCwDEkhv4LQilSql0Ysg9KCQn6RvtFIGdNKEYaKEJNs9xDJWAcr
      K3fJ2COo0Iy4NNu/Qq2icjnNAHqhwZSC1dVZNAGp9ABxxybUPvn8PKMqAGEizOhs/PhzX+Dw
      qWeYvnON2ckLVNYnuX3le5z5yC+ijS4QAtNx6e0fYmGuwsjAEQIVI2Zb0UAU9waYRM+ld+T5
      2fYOAFJYBIHEiWcYPXgcEIQ4ZDMDTds51ColGvUKAweOo3WCTLaH0vIslVKBrt40ohW/oSPL
      t2HH6ersolFepNaoYygfFQRgWYhdQ38/+DIkEHD02OMYZg9KC3oGh5vs2q3VH7bWIQkIYZBM
      ZxkcHWNpaRY/7ZBJWnT19DC3skq55hFql/6uXno7OknEk2wUi5weP8xqfh3X8+ju7sbzfdZy
      62TSae4uruJ7DZLJGEMDfQRBSN3XrKxv4AaK04+dQhom4X1a9h7rAIIgUISh4MD4aboGzqBl
      iBIOXiAwpSafW0FKsO0Qw/GRQlMtrKO1j9ICLc0oYVcYeWZ7+kaZmrlIsbrWdOFrIhKZhdYC
      raMAaaWb6f60QijNRn4dLXySjsA0wbYMNnLrqNBHmmEzuEMRijRGNsvRp8fo6xvg7Pe/zMb6
      NKHvQjMti9KQSHUQKIt4shMhLNCiya7cq+t1cyKbaKkQzYzFSqpoodICFYZITOKJLM88+0WU
      stBSR/QfIUDUWV2aQmhFOuPguSWyqQzrXoNCfpFUdhDbEaBDtA7RWtLVM8av/tpv8qPvfplb
      N68gVOTKUkIhZBBFXojItg6y+TmalpVKS41vR8e+Zz7xC0gxjCYORsQibT3aXqut1hppmJx8
      /AzfuvkW2q9jG4rh0QNkMhnGD/YS6Bq5xTWWZudIyBid6U6OHDuMffQUK0vLeIFHoVoiNATV
      ao2lpRVijoVWfhRrYFssr+VYzRWoacnYwcMRZV6pfWfAezIBRCs/vRAoDPzQRGkbIWyMmEOo
      HWJWAP4ifrWAVh7nz/1NU3mTCNdDeRsYdh8Ki1D6hPiowKZz6Dh6chLYiFhIKh5lS9gsDyRR
      GgIdVa0xhUZ5LsVSCYHHD7/9pwTSQAQNlI7RaBRIxjvRocat5YkZNnaiC9+wyXQNoHGoNgJ8
      YSBN1UzSFCMMBYH2IlOhjMyUIWLT5rwDWiOUJFAZlFQYKMBBySDKV6M1QmtUqAm0wMPASsTQ
      2sPQMaIMNw1Wlm6hleCtK69y5eIFDESUD3PlNsPjH0WpGCIM0dqLDA+BgUhl8ZFI4YNWhMIm
      xIt0FaVBGZEWJbbKJwkMEAYIhQw0Ulvo0MFIJMAyQEgMFWez6IZoOgB1q/ZANCFCDc9/4uf4
      5n/9M4p1D50vIy5f5dShcbxqmfHjx0g88RSLE0uEGwEddho8AzcI6SSFF1QJfYP5lVV0QvD4
      sYO4vsfy2iqlcpRK/fbMHPlqg3T/MKef/AhKRfT1/fAeH4EUmsi6oQlQTYVPaQ+kT7m0jBeU
      sQwbYXaCkmhdIQw3KBeW6YkfxJAhBCFCRceZzs7HcJw38et5AqLUf2ir6VSKiHRR1gmFCm0w
      oVRZwPWK2KaDbQ+BcJEU8VyfYm6FVHqQWqXC3379/6YjMcJnPv8byFgnvm+iAoGlm5kKVGT/
      1s1dQOkmfbnJoIysK/d2sW5ypDY5LlojlWieVS2UlmhihDpyDkmtMFREO4j8BSZaWywvLoOw
      sONpUAmkDqlVGyzNz/Hk8z5Gk24gMZAoLKWQoY+pLKRKgYphagNTxxA6gVZRrhxbhSAqoH2E
      tpqGKYWhjKaTrmne1hKUiZZ+s7+3H6O2Kc/bUs3EYjFOPflRfvzmeUQjpGIjRAAAIABJREFU
      YClXYHwkoFQsMxJoYuk4ma4sG14BmYkz0DtEOp4E36NSKrC4tsjIoVGSw1myvZ1MzcxSD30w
      TO7OTVBwXcqBx6/+vb+D5UTedQPRTIp7L95zHSCyyoRNzmjUMRGJr8FGYQlNwOj4acYPvQg6
      xsriW1y/8g02cov0DrgRa1GBCjVaC5RIMDA6xt3bV5u5Zrzm4NsyKbaCvyQxpID1tUkMqTly
      9GmOHf0C2qizOnOZC+d+SG51keHRx3AsE1NXqZcXqJenScY8llYvoWSZZHIoOhkoFTmuhIwG
      td7+tTcnw969gBIeihphmAeVQ/vNTGwyCTKBIkDRIFQFhM6jgipR9FkS205Sd0uUSiWseIpf
      /8f/M0ol0H6NP/0v/y/lQoHAr2CYFqlkD0pbLC/N8ZTeoFHPs7oyBxjEkzaCBgJBLB4HU7C8
      NMHhY0eZW7iJChWxWCryuwkFSoChIj+OKqGCXDQBDI20Ek3Somy1sGkRiowQtVqNP/qjP+L2
      7dt87oWP86P6j/A8RSGXI5NMEROQ2ygTs+LEMw75kmC5vkFusUHSsrEMiWUIwrRFwkkQT8cJ
      dICnAhphSHWjwFqxQr7h0dk3xPOf+CSKqFacCrfqBO/GezQBtjxvWhmEvoHWJlqKzQXDMgzy
      azmCwCSdHcXTaWJ2hnTXCIGOsbq2zNEmezLQBkqYaGng4jM8doiJWw6BakSDRPiABUhUKFCh
      QMpYM9A9YG11Hh1apDNj+CKB6WTJdG3gh4Lc+hoAjpNmcPBpVmYn+Ntv/AkylaBRW8WSIX0H
      ThBiYwkDLaIgfKWitrFZgG5nntPtEEIQKEAEfPs7f40Ov4XAQhHyws99kfEjT6MNjVIBxeIa
      /+U//j+ARklwnD7+0T/+Z6yuzhIEId3ZYTyVIOb0Yjo1Uh29FFaWWM0tMzTSxcHDZ3jt7HdZ
      Wlngj//43+DLANyQRLyT/gPDCCtEITjxxBPcuHOZ67cuM3n3Bo3AxSDO0RPP4COISbWZwlDp
      Bn/yJ3+AVklA42PwK//wt+jrHUVvBslHk19ried5fOlLX+LcuXP85j/9pxRXl+lIOGwUNzAM
      wdTCCoO9PUzPLWObJl2ZFI2gyq2pObQRwzJNspk0hgF9PV2kzSTKrVHKV5idX2RydgElYxRr
      CtuKc2BkjMsXr/DEMx/FjpkYkl2WwS38ZFUi3zZanpRoC9XKQesYNJ3SWgvQJrm1IugUydQA
      2ogTSIt4qgtEmkqtSsP3UZgobAIsfAyUMMhkxkgnjqGDPlSYilYijMhZFkrCUBJ4zeNWWGUj
      l0cHCTKZUbBsPFKkukYQZpx8oYTrBwRYPPfCrzMwfBytNZViHTPs5eiRTzN4+AzYaZQwttqn
      JSowCXy2TQJjj74gUpBVFzpIEHoC/BDtu2g/SgSllIUKk4RhEu0l0L6CMEAEIYHrowNYWVpH
      IunpG0SJOKFIoIVDV88gWlis5nMEWhBL9vKLv/TrpDt7aTR8XC8g2znM5//O/0Ao00gzRaAS
      9A2d5FOf/RVMO02j3kALgxOnn+X0Uy+CHSOQihCBUFkkSVSgkcpHKhehG5EBQoVbZtAmpJR8
      +ctf5saNG7iuy9GjR5Fume6UTWcmEZVOLddYWC9S83xqDZdqpUhPTwfJlINhCpaWF5lfnKNc
      LVFvVLCkoFgqMTO7wPziKovLOeaXcgQihq1NetNdlDZK/OEf/AEKCPY5/gDvQkTYPV82CBSh
      AAMT7efw3BLIDjAdrJiNVgJTKNxajiDwwEhgJzrRSCzp4lVzhDoAoxPbcvC9lSgqSnYg7TRx
      QxK6FRqNCtqMY1pxLMsGJEKVqFfXMMw0oUiQSBjUSmvRimCkMJ1U9By6il/L0QhCTDuLbSWQ
      QmLoMpXqBg03xLHTGJaFsmxsK9k0+wVIAaFbwa2XEaaDMFPE7ETEqWHngIBoB/CrFTy/2AyW
      2ZZY10whrQyObVArLW9aVLQOohOdjGMYTsQSrRWQtoMyksScDBIPHZSjmrl2HGkmSdkJBHXC
      sE5xo0AoQhKxLFLEMRMJDMNqOn4D0B5+vUyltIHpWNhmGmkmMZI2QmsMBdXiBlo3iJhzUaYM
      LSXCShCLpbDNeHNZC1EKbly/yW//y9/GdT1cP+Rf/avfRy1O8rcv/SWVUo5CpUbdiFP2Qo4O
      dDA22MvR0X5ScZtGvUGl1qBQrNCV7SAes+jr7UFIuHFrirKvuHBrgvVKDaklGSdBwjD5B7/x
      zzAznfzu//V/8i/+xW/xmU9/ounxbg5IWpFv29ig70Syp/3ngIjquRKijSzSSW85gJpGk1AL
      DKcb2XQQyWYnam0hY70YzbOkkBIrNrD5vFJGvl9lxbFMZ3OA6eYZXMsEZmIkyq6mFEqbmPH+
      zWczpADlooWFdPqItwaijELhA5EilkpiJZrErWaWNq2Cpos9UoCFlcY2kpufH+Xe1Fumwe39
      oTXSiWPbsXtSH7YywCk0sXTfPd/L9noDVtrZyqDXKnlnZnAyqU0ZRQjYYNhkujObWbC32uFv
      u7dNLNmDEeuglZISQKpmKnchiGe6Np9pdy5U0zQ2vcmGYTI7M83/9qUv4bouhmnz7FPPUa8H
      jB99grEj11m+8xaW1izXfBzTYmmtAEIiDYPudJyh3k46YzFSqTRCQTKeAMPm9t1JNqou8+sF
      Gs3M0wnLwMajf/Qgw4eOUPQ0qVQn/+Hf/kcO9Pdz9PTpyPPeTIrcIhUav/M7v/M7AKura297
      YP8k2CuN4Hav6PZCEburr9ybHnxLdvv1rf93D57tqVH2S2G4PWpr++Dc67pWAY/9Pud+mZ1b
      meG2/+zuk72ec69n2P0529Mo7vVse0261mduf67d721/7t2fs7u2w/T0NP/7l36X9fUcQgr6
      +wf55//Tb+G6AYYd48Tx4yzNzSAJ0aGLVD4VL0QFAUYz/LGjqwulFIm4Q63WINvVw9J6nrnV
      PLeXFinV6oTVBl3xJDFT0tHTyRf+wW+izAQBBvPzCyzMzXP+3HlSmQwjowcwmsVYIsPIth1g
      e/q9dxP7JXzd/gzbv8zdz7Ujr88u2b0G3e4BvNfzPAx2T7Td121/pu3v7Xf/Bz3Pfn20+7X9
      SjTtJbt7Uu31/nbsfobdeZW27hVxfVopZy5dusTv/d7vUS5XmoQ/jedFCb8sy6YeCuKJJL/w
      K/+QH37jr6K0ORs5lG1Rq5QplMrYtsXM4hpdmSQNz6PuepjlKpMLy8wur7FaKtOo1Oh30sQM
      k1R3J1/89V8l3n+ASr1BEISk01kQJuVKnT/8w3/La6+d55d/+e9z/MSxZhVQ3psj0G486LPu
      9/6DvrT7Xf/TtPFhBvXb/Zy3086f5l675Xav/rsXifstUtsRBMFm2VHDMLlx4ybf+MY3OH/+
      fJSztZllTwio1xqsra7T2z1IaAh8LXDSPXz+V/8Jr738Td66/AZBpYyhHTZy6/hug/Vcjv6+
      XrqyGVaXV3GW8swuLrJRrmAakv6ODpJOku7+Yb7wK79G9/ABim6UDcMywLIkhilxGxrDV1y8
      eIVr164zODjAxz/+As997Nn3gQvUxruCd2IBe9Dus00y8qs0j1g3b93ma1/9Ordv38bzvGYu
      U2DzeBSlgllaWqa3ZwjHEph2DCwHpeO88Nkv0js8wrmXv87aOsRtk1q9QaFQoO75zC6vRskU
      SlUq1SqOY5E1HTKZDF1jB/js3//vSXaOUPFMQr+BqUGHPir0QGq0AUGgkSrSf1ZX1/nKV77K
      17/+tfdnB2jjncN+OgbsHNAPkrlXrrUrRP9J2XQo0QzGAa7duM5LL73E5MRU0yKkCbwQiYFG
      EzY98FJGlr71lVXUCQ9ppbGkgWVHqd+VlWT01DP0DA7x+rlz3Lx8ibhVjpx/WuMGPjFDQBgy
      mHQQlk2yY4Ajj53hI5/8JE62m0CbKM9r8n4kGoNspgOpBQYQNnlZWit830drI7I+tpr7XukA
      bbyz2K7474f7KeP7yW/3YkfHpuZnKLhy5S1eeukl5mZnm2dpSRhu1WWInklGBLnma4aEuZkZ
      TMMg8HwC30AkzCgNoykx7BhOZz/PfPznGR8/xtWL51mYvo3nVrGJ6oYJYWDHUnT3D3HmuU8y
      dvwxYqkMIQa+6xIG/uaEjccdxscObhZDFGIXU3W3EtzeAX528SBr04MG/95KcbhDxvdDLl+6
      zDe++m2mZ6a3WZgiejqIzYqSLUhhEGXmiVbehcV5lPKxYhZh6KO108zZGmCYgpAUdsYiHUpO
      PefQMzrGtUtvkJufQeuokMbI+EmeeeHnyA4MY6Y7CE0D1/MIgwAd+mgETjxGImbT29sTHcGC
      nRayVluV2qYEv50Voo0PHh60A9zPMNAazK3CIlFxjshc2qjXufDjH/O9732Pudm5Zh4ha9Pi
      E/3eMou2ytlGiDIDtsyjnucxPXOXEycfQ2tFGDbrJxsC2zDQhgXCIJ4R+FrTZ1uYjsO577ss
      zC/Qk+1g+MhJ4l19SCcOlkmgQpTW+J4X1ShzDJLJODHbivwSSkV+mj1M5Err9g7wqGK3qXl7
      OaZGo8HC/Arnz5/nypUrFAqF5kC3mqs5m8cKaB0ntvwhWxV6mumnNieK5sc/vsDzH3+eSqVK
      4AdobSMNgSbEkgEYGhUz6e3t4Y3ZSf7Df/pjyhs5YrbFcnmSC7cm6RkY4X/8J/+I5194nkag
      cOs+CIFhmqRSDpYtMSS4bmNzUqoWJXvbDmWI9hHokcNOHwnQpKR7rsfU1BRvXrjAzZs32MjV
      mmf7EK2jzNCCVoBMaxXdvNPm+DEMY3OQRfKRFUjKyGl4Z+I21WoJw7AxjMjfH9Va0AgdIKTE
      TsT4sy9/mb956a+RlkG8qxsRhsRMk4xtUyjl+T9+93/lX/72/8IzH3uReMwmkOCYDrEYIDRS
      CsrlcvNZWjtTyxPc1FGEbptBP+zYXcguWpWjYBWtNLVqnTdef4Mf/ehHrK6ubstUETm4Ijt/
      M3JDRxTn7eVkW9BaNAuYGM0C5qpZ8LC5uDavq1dr3Lh+h8dOncTzGziqyQzWNr4GdMArP/wu
      //n/+3dYMYdYLE4inibmWAgRkttYQ8YEMcfmX//rf8Pv/f5jdHV1E3M0tq0wWpOpVRSwSThW
      SiBa3E8tm+xQ2d4BHhUIIZrKqkIKged7vPzyy3znW9+hXK5sWmta0HqriuVeFsK9PN+t44aU
      crPqZkuuxUECuH7jGh999hk2NvI4jo0mWrF9L6RaLfOVr36Njo4OqpUy1XIDhMZMd2BaFraT
      YGV1kVQihRNPc+nSZT79mZ9HmhJhG+ggaJ71o+OOiB7sHqpIC+0J8CHHPVQQLfmL//qXnD9/
      nmKxhCHNKB9Qc1XfGszG5sC93z23/255hqWMKjoGzcHY0gla97916yZaKzKZFPl8nu7ubgDC
      MGBq6i6f//wv8ldf/jM6HZtKtUTZLVG3TbKJXnSoSQiTga5efuM3/zmjIyPcuf4Wp544FR3J
      tlm9Inv/fWgzSrUnwKMCrSNm9RtvnOcrX/kKtu0gRVRzWLAX70eh9dbKuZ+VcLtlpVqtEgQB
      pmniOFulbgG2E/NyuVWWlhYYHBxESgPPi66ZnZ3m0KFDJOKn6UkliePjuxX+85f/jPVqgGrU
      8Ep5nj1xiKef/gjDSYNwfZ6E5zJ1+QLjx49hxtNApG94nrsv7ykIAsK2EvzhwYPIcC225te/
      /g3CUBP4IbZtEgZe88y+m3l6f2bu7vtrrclkIrp1a+W/9xmie/m+x7XrbzEwMEBHRycbGwWq
      1Sq9Pd0kUylMaXH8yBFWJq7Tm03za5//PL//7/4TTrfB8aEePvuRU8RjitkLPySdSGDHk2gn
      ySqagTNPNSnokmq1tqeTsNUuz/PaE+BRgVaKXK7A1NRdlGqZLnXTahNExT1oeUu3TJxbFp7W
      73tp5Hsdge4ZeK2dgmhwXrp0mc/+/OdQKiARd0gm4sRsgZaCQAdYMQu/UaFWDzkyOsITRw6x
      srrOpz/+At3JGJZQdPVlWJydp2N4jHgsRi2fxy1skOrqJgBqjUYzEnIrPnn7jhZ3nPYEeFSg
      tebGzRv4foghbcJQE4bR0SP0ogEeVZJvDZLIahQNHJr6QLAjBqB1XxAEQbA5GTZXf9jkH+jt
      CnYomJtZoFqtEo/HiMUMDBml5vJklE7RNDX1cpGunizg89TRMbzhfsa6OzGkikpFaYGZTGMn
      0pgS4qHP9BtnGTx+ko6xI9S9BkEzq0bEYdrFe2ofgR4dCCG4c/vOjvysYQhGcyC3FEbDMLYF
      vGxd2zoCtZTZ7YFDrfvdL4Bpe5AQQK1WY25ujuPHj0b3bU4coRTokI2VJdLJOFKFCL9Bf1cH
      8cEYtgQpNUpK1tfzpNNZTDPaxYIgpJZbJT/roKVJUK5hYBLR4LaU+U2+Em0r0CMEwfT0NDR5
      OSBQWhMqhWma1Ot1gG20iK0rtw/s3WbNlkPMsizq9frm8edB0Epx/fp1Tp48vulf0AgIA0zl
      sTQ1QbcBoddgdXmdlOPg2BZaBxhS0HCjtJIdHR1NS5WmXC5Tza8zNjbG4s0bqHIJqQUBBoKt
      lJmtyWqZ5nuVFaKNdxvbOS67fwA8z2VtbXXzjB5ZhbbMn0IIfN8nCIJ77r2fgr09HLR1jx1O
      sj0W1c1JhObOnTs7JleoNYZWUK9iKw/tN9jIrxOPOcSdGJZlY5omCk2hWKSvr6+5GxnUajWm
      pqYYPzhOyomRsU1Ka8sQ+DvUlhbnyTRNwjBs7wAfFjxo1a1UKlFwumGgdbRyhypEBBHFwTRN
      XNfdHByiSWHYC9snzfaBb5omnuc9cBdQzeqN8/PzuK5LLGZH2bANC4lPbnkRGXgUS3liloXj
      JLFjcYSUhKFB6Cl6+vowpR1ZnfyAQqFIMpGgZ3AILQR+o0rGsZDaR6uteOWWjiKlxJBtT/Aj
      g0KhiNYgDUEYtFZu0VRsIz6OYUiCwCcITKS02G3x2T7gdzqXWsH0glbmBSklmq1yRNt/Cxn9
      3ai7zM3Oc/zoYQJCAu1hVSssTUyCV8ExbRwnjtFc9aPgGhNL2AgbPM9HKU213mA1t8pHn30W
      QwRU3QbFUh63WsZG4cmwWVS8qdcImllD2krwhxrbB2qlXGm+BlG6SIUQzdKsKkRKE8OImKCe
      JzEMuZkWBdjzqLPz9ehv0zQIAh8p7c3XNsdWpIFHhDolUEpz++Ydjh85hCE0vlfnxoXXEW4d
      aQjMmNXMRqej7G5CE/oBpjAJwijs0vVdqvUqB8YPEIvHCNwqlWqZ2bkZPv7MM6SmF/n+lSso
      w9psi2xO2rYV6EOEvY4c2zk8xVKpOXB36QfbFFrLsvA8D9d1m8egnc6x3WNkL5pBiwJx/0Cc
      LWV6amqqeaQKmb30Bu76CjHtEeuIIwyNaVvRccWMWKbCkJGHl0gHadQbCCHp7e0lDEPqHszM
      LrGyvMqzT3yME1py/uplynvQIaBtBfrQYPtg3+6Fbe0C9Vptx/8Rtrg8rZgAy7Ko1WqbZDbT
      NDdlWtjv79Znt2ILRLNSzG4TaCQYXXv37l3q9TqWDMlN3SFWd7HSDlJGliVpGCgBfpOTpFSU
      i9UPouOPlJJ0OomUknq9znquyLnzF/jUJ16ksyOLsuOkYjYld49KDbodEPOhxnaymuu6W6/p
      1vGomdJ9m1JrmiaGYeC6LrZt76nQ7o6u2v46sLmTmIa5MxC3da1uTj2tKZVKLC4u0tuZwisX
      STsOlm0SJYO3EBhRAW0pCZvRX9umH6ZpkkgmCIKASqXCxN1JDh45yIHxMUINbhCQzGYQq8U9
      6B7tHeBDj9aqv1kAT7cU0mggSBFFS7VoDEIIbNumUqnQaDQ2d4AWtnuCW0zR3ccdsbnq3zP+
      74GUkuvXb3Di6AG0Vli2DU1LlWXGEDpSplUrkEVG5tIW4vH4pgm3VquRzSR56uQxnGSCUrHK
      zam7zCytgOHs8envVaX4Nt5T7D6iGIaBbceAlmkzKosKGi00woiOKK7nEXNiIAVOPE6tXsd2
      Yti2Ha34Su+w7e+VVCuKOwgxTRM/CJEiKgDePIEDIIlSp/gCXANu3b7OoAOZZALTsZHSwDQM
      tPAJpIHERGJu6i+hjMpeSUNEGWDdBr7n49UqHB0dJiagWilxY2GRl17+PlVPYzl6sy82+4Y2
      HfpDjZbTRylFIpHYtN5sxeyCVlt28VCHWwqwFBimge/7mKa5adYU+xT82/57k0EaqqY/Qey4
      TgnZrL4k0EHA0vRdKgO9DKQczGbBPikESocIIaO0ik2zpWrm/YnFYviei+d5kSLv+1imQRgK
      qjWPmfUc3/7hq+TKNWKpzh3PumdATEdHxzvZ9228x9jrqKF1K94WRkdH+MgzTwNbVAB2rd4Q
      RVFFuX4EQRiilcKJxyPuj2ZHzbOolkGklLbibJtkUlSooh3AMDCk3JGhX2uFUKC0ABHSZQlO
      Pf44MdMjEY8jEUjLRFgGQhigBUqJ5mQl8iNoFRVUb9IZVKjwPA+FSUNpGoUa3SMHGTzxNNKK
      NScQCCm34h9gqz5AG208imhzgdp4pNGeAG080mhPgDYeabQnQBuPNDYnwMWLFwHNn3/5zwG4
      cvny3lcUpnn1+jIA1189R2HX2341xw9+9Brn37jIvQk17o9Xz7225+sba4t896t/ww/Ov0mx
      6r3Nu7bxTuDDOj42zaCVUpFafgqlbNaqFYqVgBtXfkyxUuHAsaeZv3WBemDywplh0AGvv/5j
      UkBYW+fidJluWSY5dopYOU8lMHjh6ScIymu8cmmC0bExSiszuEHIyJEnuX35hwyMn8IvrVCp
      1Dn2kRfoSVqsLEzzyst1jpw8yVKusXnP7t4hDg/145x6Blma50dXFkils4z1ppiaWySe7aO0
      OoNtQK5mICV89lMvvs3ubeN++DCOD+3XtnaAk0Np/voHU3zxlz7Bq3/zEoMnTnH71h1MO87c
      1OvcntpAejnm8y7nX/4m3aNHADASPeSXpphe2aA7bpAaOMrnPnaSb3/lq1y4dIenPv48hw4M
      UfFDnnv+Be7euYIyHE4eGePWndvYccns1DwA/cPjvPjiGabulnbcczsu37hO3DJYWlwil88D
      BnN3Z1CGzUeePI4Z6yLptDNdv9P4MI6PeqmwNQF6Dp/C8CokEt24psmhbodjx4+CkIwdfopj
      h7pIdA3T15nic3/3V8jNXsfJZDCBYwNpXKcHgGphjUtXb5Lq7uWJJ45y6ew57s4tkbIMXj93
      loNHz9DXH5UpPX70GEImGBvtA8CrFHnl7DUee+LwjnsCOKkMtoTTJ07ihYqxsTFcN2IsZjuy
      ZDIZkDadmWT0dxvvKD6M4yPwvXfCEaZ47Qc/4MmPf4q4+U6tvO/GPdt4f/DBHh9tT3AbjzTa
      ZtA2Hmm0J0Abjyxc121PgDYeXbQnQBuPPNoRYY8gvNIS3zp7kyeePElY9TBMDyfTT29n+v1+
      tPcc7QnwCCJolIilOrh67Q2k10vKKZOrz/DFL3zm/X609xxtM+gjipnJWyS6+ohJm+LGCrF0
      F33dj1ZUYKlUak+ANh5dlEqld08J9vIzfPU7r26y89aXp7n01u195d+6/CZvXnyLVnqnm1cv
      8sbFqw8tf+fGFd68eG1f+dde+T43JqY3/7/wg68yk9+fObhT3uObX/0auWJ1T9ndbb199RJX
      b03te+/d8vPTE3zlG9/aV353W8+98jJvvo2+OfvD7/LWzcnmfwG3rl6jWKnyrT//U5YbW9ed
      PXuWr371q5w9e3bfe3/Y8K7pAMqrUm4EXDz3KuVykU/+3c/TuLv/l1YqlYhl+vn+t79J3Tc5
      PNxBpqP3oeWfemyUhY3yvvLFUomuIclLf/UXOLbF9OQtzgw8y1hX/wPls109OE6MtVyR7mzy
      gW1tmCadqSynjx96qL558XOfItux/7Pvbqsj6xh6rzw3e8sfGMhwd2qCx08cBiqs5XL88L+d
      5cyzx++5tru7mxdeeGHfe3/Y8K5NADPVy1BHGVUrkR06QHlxHlftf9oaHRlhteAShCEHxg9T
      yM3T3zn00PKlUpmhgb0Hc0s+qooScOyJT/BzLz5L2ex+KPnR0TE2citks3uT7Ha39ZnhLhbX
      a/vee7e8l9/g6Y8++dBtNbwiVqbvoeXjosYTTz7dfDfFmSef4NSpx1hYXKHLhlwut3ntozT4
      YZsSXCqV3u9naeMDBtM0SSQSwIdzfNTr9bYS3MbDw6sWeev2XU4//gSxJguzWCqSzWQfeG3o
      1piYnmNwZIxMcv/j216IimjEfqJnvh9KpdK9R6BXz73G2EAvmb5RlmamOHLiJMZPwDh1q0Uu
      Xr/Lgf40b7w1wUhPkkz/OEfHR/aUX1mY4fKtGcb6M8znahheiRNPPs9Az96du7IwzZvXpjg+
      2sNiwUNV1+8rP3nzKqulGpZfw07EmF3TfPrnniMZM/aUX5i6yd2VddyyS0cmQaFe4cSZTzDc
      fe+XVy/neeO118iOnWB6YoLR3jSuSPD8PseaVt84okGhARlb3Ve+1TeHBjseqq0tnH/lZfrH
      jzJz6xrdI0d26CTrS3O8eW2Sz3/2U8xd+QHe8LPMXjzHE6dHOXtldc++yc9cZW6xDFYat1og
      6djU6iU6U0lcN6Czt5/OwRHS1r0Dpp7PUwdWVpapOjFCv0a55tHV24NfLFNo1BkYHKRcqZNf
      meXA+BFK1QYJU7FR9Xns+JHNe1WW5rm1vkJP9yHScaiXV8iVTXSjyPDYGCEGRlhHWg7JTAcE
      ATHH3rOPdliBlFIEnsvduQV+9Nf/nnNXbrK0Ub9vJ++HWDJLb1eagf5eTpw8TSqVYm5ubl95
      IQSPP/44Xdk0Tzz1NKlkirn5hX3lbdsmEU9gx2Ik4vYD5aVpcurESRId3WhlkbFLLOf2P6dP
      3J2hvLFC3+hhKvk8h4+NU90n3lQrzeCxJ3h8PGprLJEl5ew9sWADWZ8yAAAVqElEQVSrb8bG
      xsjl8w+Ub/XNw7a1hajPZ+juG0X7jR3vaSE48/jjAIyOjkLYoFRtcHNi+b59IwzJ5JVL/Lfv
      /JB8JbKK/ej736IhTL7/w9dI7TH4d8PzPAw7QUdHB8qvUS8WGRzsYmJ6kStXb5DNZFmcu8vt
      qRlKxdKedQbMWJLK2gLYcQId0JXtpWegn0a1xNTkFDU3oF6vcvvSBTyxv6q74whUyq9Q13H8
      8iqZvhEWJm8zfuI0cevtW0vr5Q2u3ZpkbPwoXT1Z8kuz+Gaaod7OPeWX56dZ2qhz7NABkskk
      U7ev0zt6lHTc2lM+t7LARh2soIzTOUg1t3Bf+Ykbb6FjadxKkYNHj3N3corHTj22I9XfblSr
      VdaWFxk6eJiZySmOHD2yR2ZMqBZz3Lhzl4OHj9PRmaa8vownE/R17a00t/qmr68Pw0mRlN59
      5Vt90xUXD9XWFpZmpzDTvbjFVbqHDhK3t77HtcVZZtbK9GSThG6VwEwTFy5dAyNMT919YN/s
      hlctMrde4fDY8MNf9BMidGtMzi4yMjKKE4/hNerk8wUcU6CkSaANOjMJIGRubpUjR8b3vM8O
      R5jv++/6g7fxswUpd5ZJ+iDgnRynlUplSwdoT4A2dqNVLOODhHdynAZBsFMJzs3c5OJMjo7O
      HnQtz0efe/4nvrlbK3H55jTjAx1cvHGX/oxNuu/Avltkfm2ZpVyFuPRYq7gEpQ06hw/x2NHx
      d0R+4eoreMPPsXHrPL4yqYd1jp16gaGuva0LC1dfwRt4kpkrb5JNJSi61X3lW21NSI/VkkdX
      XNy3rS350d40P74+xUhPClfEefbpM3vK70TIqy//4L5tfbvyr/3wezgdnZTzZQ4dGGRiYZ5j
      p17gQN8HkytZWVmB/n42ZqYIschm01RKZToyCUJhEk+mIQyIxfZWfLdjx+G+Wixz8PhJqsUC
      vv920xbtRCyRobczjW3bxONxkqkUCwv7K25dvQMkYgaGaXLy+FE6e4fvUdx+Gvnh4WEINYls
      J9qtcejwAWo19/7yyqV3+BDVQv6+8q22moaBhge2tSXf39fDseMnsROZfa1R9yJ8YFvfrvzo
      6Agb68uUqy63b008sG/efwTcnZigXCiyvnSXqdXIiz45OUluY4OJq5fw76P4bscOqQNnnuHO
      zZs88+QJcqWfrgPq5Q0KhQKGYTAyMkLGVqR7R/eVX1uao1BpkLEVa+tFsimLrqHxd0z+7nqD
      wFhEhYozL3ySpflZDh/eP33K3fUGgWmSsnyOffYXmL07va98q61DQ0PY2fCBbW3JpzNdHBof
      opIz8GRiX/mdsB/Y1rctLyQfff4zFFdm6RwYY3lh7r59834j3tnLY/02fr3C+nqeTHcvtoRs
      Oo6HgVSSlP1whptNJdjz2ikH29gJwzA+cDrAOzlOq9XqTjOoVy1ybWKeM2dOYYiH9/LtBa1D
      VtfyxGRIrhqStkKKntzXEeY3qpQbCr+aRya6cIurdA2Nk7D3/gJa8tWNZWLZfrzS2n3lo4vq
      XLhyneHxcVampzly+skHHj3u3LrB+NHj3J2Y5Oixo3uaQbdjbW0N7dfv29ZW33QkLZYLLnHh
      3ld+N+anJx/c1rchf+vaZYxkNw4N0r0jrCzMPVRbf9ZxTzzA8vVXWQvTrLsxHFWjVFhkYPgI
      VljBSWVZ2ajTYQcks90srOR4/qNP7Xtzt1ZmYm6Z4a4UF29O41Bn7PhTDPXt7QcoFYusra+z
      tjSHTKRJWAm00Dx++rH7ytsiYKVcx5Gx+8q3UF5fIJ9f58q84guffur+Xu76Kl/7/hVMv8aJ
      Z07ihf0cO7D/0SC3NMPFO0skRe2+bW31DYFHqBTVwtp95XfC4+pbkw/V1oeW1x43r1/lxu1l
      njg2iuxwHtjW9xO5xRlm1qscHO3HCyVJS1Nt+GDYFNcW6B0+1PQD3B97xgOcu3wHtT7Bmxfe
      wgcWFhb4wXe/xa23blDXML+wwMydG/zty6/c9+YqDJi6fZOVXIlarcbgwCC3bt3cV75RLXL9
      9l2CwMd1fXKrc0g7/kD5Wq1Gtdp4oHwL82slBobH6bHWmF7an4IMQLyb0d4k/YP9TN2ZIZm8
      v1VhLbdBMbdG/wPa2uqbarVKrlh9YN/shPHQbX1Y+ek7kxw4epyOTJyF5ZWHauv7iXR3P0ld
      Z3G9yNTkFMurOfxGlanJKZxkhlp546Hv1SbDtfEzh8CrM7eUoycbp+pLOjMJvHpl82/gochz
      O45AjcbDmtXaeFRgmuY9hbLfb7xrnmClFF6txPU7M5w8dXqT7loqlX6ibMtah6ytb5COmyzl
      qqRtRcmT+zqHfLdGuaHQjSIy0UUtv0TX4Bjx/ZTgprwZ1qgEJrpeuK98C4uzU6R6hlhdXODw
      kcMPVPSmJ27SOzrO1PUbHHrszEPZ64u5FVyZoO8h04y8XfmFmamHautDy4ce67kN5hYWGR47
      RCm/zuEjh5FK7S3/PuKd9gTv0AE2Zq8zv7zC9dvTnH/jIm9dvc6Nm9e4feMKb138MfNzC5T9
      hzsx+Y06uY0igZJUinnu3p3aDK7YCw03oJhfYzVfZHH2FsWKz9TEnQfKX7hwAa29B8pHLS5x
      4fIdcjNTWAmYnH9QkIeP46RYuHmBuZLEecgBt7iaZ21x9qFk3778Q7b1bchPTkwwv5bn6IF+
      VqYftm/eP1RWVqgA6yuLlKtVGp5HuVSjUCiwtDBPrV5nfmHpoe51jxIsDMHdq1f4zstn2ShX
      ADj7g+/REBY/ePX8Q9FdAcLAZ3ryNtffukQ1NOjvH+DOnfsM6GqRmxPT1EobeMpkY20Bad1f
      Cb45MU1HRwfT03MPlI8aZ9KRjrO0ssL05CyJxAMUPeXzxpuXiHcdoMdaZ3alcn/5Jrxaiar3
      8Kvn25M3Hq6tb0O+WCywtrrOwnqZgyM9D9c3HwAUCgWmJ66xtLLC9RuTWMJlcmaJiclZNA+3
      UG/qALXa/tx4iL6k+fUqhw4M/vRP3sbPBEzTxLY/WBOhVqsRenXuLqyRTVjEUlnKhRzpdDeZ
      TILF+RlSnX04lvHAZ9/hCCsUdpcza+NRh2mapFKp9/sxduBd9QS30cajhD1jgtto44OOytI8
      E6UqSStGT0eGerWEnchQrtQwtYuZ6MARPgGwuFIiafp0DY7Rlb13N2unR2/jZxqlUhnHcfAb
      NRYmp6ibMWrlDe5MTFCu1enp6MROpGlUinte394B2viZQ7yri3ipSn//ALYBa8sLxNMdjB46
      REcqTsNJ0plJgp2mUS3R37t/wrS2DtDGu44PalKtarXa3gHaePfxQa3b7LpuewK08d6gXFjn
      4pUbPP74aXylWJqe3kxi1aiUGBsfe1+ea1MJLq0t8Opr57l+e/+03rNz8/vfqVFgdu0+ntJd
      73/tpb/gzTcvUquV2SjXefXcawSVNRYLbVLehxHpjh7GDhwgl8tR2tjYkcTq/cTmDnDh2h0+
      /alPAXD72iUKVZfOvhHW5m7hxJPEU12cf/0cH33u49iqwkaxQt+BYyxOXCHRNUSfked7N6r8
      0uc+xvTNmxS9kDMjSS4vBhA0ON6jm++/SGc6TjzTxTPPPIWXn2HOjbI0z96+wrlFk1/42Amu
      XZ/ASabpcAxKjQrHTjxF9gPMUW/jwegf6Ef7DcoemGEDFXM4eKiTjvTD0jreeWwdgbapwusb
      FV548UXOvvIKworx9DPP8dq5Vzl69Cinjh/i6y/9Bf3DB5mfmyXhxCgVS5w5NcRR7ZA2PEqN
      gOn5eU50DjF+8uOs3HiVocFhjmqHzmZjF2enePPNHk6MWJQbUdjl0NAgxzqHyE9cIYglWFpe
      xMzGOfLsi2QfkojWxruDd06RlTgWYEXESJvIu/t+xKR7nrc1AZ4+dZgfnT1Pd08f3Z0pXn/9
      dXpHDuLV8kBTkfE9rt2e4tix4xSqPuNjo+QXZwiqdVSym/riBXLZcQIF3V2d2MkM2mxe23x/
      Y7SDzrTDqTMf4emnnsDLz5DWJrFMBjs7yMb1txg/fYTl27OMHRgjITXJ9uB/39FSZH+aOPEP
      Itpm0DbeFl499xqZmEGqs5fVpWUee/pZ0g8RI9GK441bmt7uLgprNRopk9NjY+TzOerlMl2D
      ozQqJRbmphg/fpqpG1c5cPAwdS9ksG+rmEllaZ47xTx9mSH80KMvG6daWGW2Guf0wV7WCxUC
      t8rY2Ph9n+ldrRHWxocPxfVlKjWXhYUFbl8+z/fPvkml/nABKq04Xu100B2HkrtF/y6V84TC
      ZmNtlVKpRGfPAMmYTXffAOtr61RK98b4lgoVQuUxMznF7FqezkySnqzJa29cY2Vt7aHb1N4B
      2nhP0IrjHerNUql72HYcaUmSjkOjUUMIC1BorXFrJcxEJ14lj7Ac6m5ANhXpjolEgtB10bZF
      vVgkX6rR3ZGg7gZkOjoIXJe1jRIDvV04zv0LceyICf6geuvaeP+wvUTST4N3cmypdzBMs10i
      qY33DO9UiaQHBW69HbSpEG28Z3hHSyStLHC3VKUn04Hr+gz0ZMgX6yTiFqEXXXN7rsHYiUEa
      pQYDvTZvvDFHl50nefjjDGxjRe+YABdfP8tyyePFZ06zsFqiWlgmETfJeVkGUwG9gweYm59n
      5MAYluQd2R7bePTgeR52LEGHndgqkTQ+wJ3pRVaWlzl1eIjFubssFjwO9WcR1u5xZnLgwAhL
      d6YoFQvU1DgdtqRcbrC0MMtgdxZIcHdyEkvEGOgdwjYNxB4pXnYcgS6+fpaCJ+lIWFgxh9j/
      397dPLdt3GEc/xIkQRIE+G6+SJRkSX6JYseq4zRpxjPtoccee+2f2UMvmTbTNHFs1+PXuIqs
      UNQbZVIURYEEARAvPSiWRdmyHJuyKXs/M7roBQNwtLPY/e0+Gw5zbkJlsaHRWPoeq9Njcu48
      W4aM27e4fu3yCX9UgjDo2Z7glVqTqXKe9Y062TN5QtLe+KDT3kaOqUhSmFDIY2u7Q3ksh2VY
      OL6P60uoagyJl2yJ3FxbZteWmCidwfM8Aq5F2/IxdB1cm0wmg6LGabV2MPoBZiaK7/GjED5G
      Yk+wIAzJwJ5gcUaYcNgoHpIH0Gk1qG42GS8VMfs+quyzYziklBC65RP2LYKxJN12k1J58pUJ
      4KIBCEcaxUPyACzTZHxyis21NULBAB3fJyyH2e5LBIMhDNch0P4fSw0XWc2RTx89WSOmQYVT
      J1sqs7ZSpTyWp2N6pBMKvu8fOlC7API6SfXVKdEDyXDVpQUMTyalRimV9hLgdF1H0zRarRbp
      9Osc4CB8KEYxGe7E0qEBTAfmLk7zn2+/oVFb5Gk3TTkn8fD2DdITF5nMRPnXrQfMXfoM27L4
      85+uD+1mBOF1DDsdeqAHaNRWaegOpTMpcDoQLeKY2zQ21klli5iuTbO+Rak8RTwaEj3CB24U
      ewDDMN6oEry5CcXiYDDWwDToMNdYCB+G0W0AT3FT2n4lWB3fqwS7rrNfCd42FLywQTgQ4fLc
      2JENYP8VSJLE1gBh0Kj+T8TSCVZqTS7MXXihEhyTQ8gxlfSBSjDE6HUqtDvj+8uqnxGFMOFU
      GXYlWEyDCqfKMF/JTNMcbACVxcd0PZnLF2f3v/dsGlQQRkWnVsMvldiuPMElTDKVoNPeJZ1U
      cAmjaAlwHCLR4xvLC9Ogl+dm+fabf6CFXJ5GzjGpOdRWfyEVjbJl2fSlOO3dLn/7619O7AEF
      4dVclhYWCHZ36Ro6DXOWYgwWF5+QyBUwlxY5+9k1jj8o9dAYoL5Rpb7rINltNE0jXjyPo9cJ
      hUI4nRaxdIb1+i6WaTF/6cIJPqAgHM21LPxIBMfQqTeapHJ7KdGWoWMTpL29y7lzZ4+9zsCe
      YEE4KaO633xgEOy67vu8F2EEBQKBoUyFnop0aMuy3ue9CCNomIWwUU2HFtOgwjtxMB0a2E+H
      Xt1sMVbIvbf7GmgAC4/u0er5fPXF73i+sLSPrjtoWoxqtQrA1NRea63VavurRgXhOKOYDj2w
      FqhSqRA0Tdb1BhuNPiUV4jmVZtWg+nSD+S8/JybBk4e3yV/4knxCZnp6+r3dvHCyDr4CjepA
      9m3ouj7YA0ieTZsQE/kxtASMF7KASTZmoxUyFHI5ZAmCl+ZRMlnCbpeFpSpj+Ywoln3gEokE
      nt3lxs07zHz6OU63SXli8rX/3tZ3eLLxlFyugBqTD0TqeBiGjaI8D8uybIuI/HwW/3Ax1rUM
      KhtbzJ6dJPCy7Y6uhW64KJrC3n42l50dAznoEFTSHMzyFatBhSMdHgQv/PAd6WvXeXzjOyJh
      iT98/fr7QQ6e7ZtQYnT17f1grECnw1bPIJnOUlnZJBlxSSVTPFnf5pOpPN1+YDAYq1bDySTY
      Xn+KbbtksyqtXQtNkfH6JrGQx/Kmz9hsll67x/Rkkps3V8nIDeKzf6T0a1sS6dDCbzJxcZoH
      3/+bTDZLz/lte4WDskwQ9gNrk5k85XIZJRICJGamJzFMj1xa40zuDFIowszZCTzPIxo5XNN1
      Wa6s4lk9frp/h7oBmhLBtm0e3r3DVksHYL36C08qKwAoIXClCGbP4GC6qCiECR+tgVgUQTgN
      THN4hyj2+/3BV6Dlxcfce7Rw+NfQ9R4A9Xqder2+/5PN5Z/ZMT0ePXo0tJsShFfxPI++aWL3
      TQyzj+d5b/U10AO4kkwKk7sPbrG6aVFUfdRcCqtpc/P+A65+/XsUCe7+8E/UySsUExLbj2/z
      c83g0qX39ZEIH5teq8FCs8NMMcNur0MXlSAOzdoqqcI4mhxAt3xiQRdZzZBJqkdea6AHsI1d
      1rsWEYLkUnHGp2ZJxmU8P8D81XkSSpx4PE62WKZczBGNaZhOgCufnkXX9RN/cEHYEyKdjLHV
      7pFPKpiWyVJllURCo9+3cfwgihxieWmR6nrtlVcSg2DhVBEHZAgftcgLU6Jvrt/vP28AohAm
      HDaKsSh7WaU+aytV0mdKxGNv3iACgYDoAYTTp1lbQ80WqK1WIKyghDw6/QCpWBDXl1heqzFT
      zhOIRNjeqFOcPk/qiIzQgUFwdWmBhaUqjUbjhUFtq/X8rNZerwe9Fq3eCTydIBwjEo2ytlIl
      GNVQo2F8KYwchM5Ok3q7hxINsfDTA2r1TZK5MXp658hrDawFuvffH4mmini2gSJLLFbWKWTj
      bHYkFLdNKp3m1p37lCZnuFxWubfe49q1rygkw+/s4YV3ZxRfgYbphUrws3UaiqLg9HYISGE8
      SSalhZEsC3yJC5evkE8nIWBxdf4snjO8c1sF4TjDrgSL1aDCkUaxB9g7JM+GXxfXvQ0xDSqc
      Sr1WCwoFurU1QrJMKKLQbXcJBH1so0s0rtLa7fLJ+Zljr7XfAIY5vyp8GAIv3W0yChwqlRXM
      jSUkRcP3wXUUvpgv8/cfbzN9cY5C+ujlDwf9H2/Ykxocez1HAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='Weekly Score by Team' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Score by Team and Contestant' width='192'>
      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
      JsI85LUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAZnUlEQVR4nO3daXAc533n8W9Pz40BBhhcBEAABEBCBA/wEkmRBE+JOihbkSNFh22lcnjj
      rGMnrtpsKlVbSd5spXbLVZvEyaYiZzdee+217CSSYymybB28RVIkRREET4C473OAuXumu/cF
      JMqkIJEDch7MoJ9PFV8MOKj/Hz34oY+n+3kU0zRNJMmCFEVRbAvdhCQtJBkAydJkACRLkwGQ
      LE0GQLI0GQDJ0mQAJEuzL3QDUnqS0SBjwQgfjd6484spLnAvbFM5TAYgx8z0t/H6W+9y4p0r
      LH9oC+vuf5QD9y9b6LZyliJHgnNQtJe/+4tXePRbf8RyTJKRKTq7B9BsPlbcV4ctOs6VziHy
      S5dSU1HEeO9VQnGTWMpOwG8nOBGioLKepSV5KAv9sywgRVEUuQfIcWYywtE3X2co7kQf7eTi
      zG/yWPkA7dcuc/31wzz9ta/zzvf+G6llBwi3n8O+rJlavYuzkQ38yTcfpWChf4AFJgOQ47TQ
      FMeP/IKQuxaXzaQxFGRY76S19RIjIyEmI+DIK2bjnoeJK8MM1G/jyZX1XPqrThIL3XwWkAHI
      cXaXi7KSOjY//rtsq/USiiboeeM83/jaC/zgb//P7JsUUBQFFAVFAcXSBz43kwHIRXYfzTvW
      4QfUvBKe+/JTvPzaK/yvgy52fO4ZGnd9npcPdtC4ZRtlXtDXt1Dqc5JsbMZbkg9uuH+rDc9C
      /xxZQJ4ES5Ylb4eWLC+tQyDTjDPcM3zj5ElPxtF0lcLicspKC1Az0OBHIpEIuq5nsIJkRWkF
      wNB7+d//9W9J1i7BaYPQeB8jYQ97DjzP01/YQl6mugSGhoYoLCzMYIV7qP3nkIqLq1e2Goob
      P/MtP7/0M3qmusX0AywvWcFD9z0mrN58pRUAm62GnftXcW7Czfot2ynTOzk/WMozT27K+E1F
      qqpSUlKS4Sr3yNVhSIXE1XOvhNtsm6HkAJemWwU1BAWF+TnxeaX1e6vY3Ox+5j/w5ccfIHL9
      KP/vnw8xo6ooirywJuWm9C+DKnZKapt4vLaJHTuvM24W3faXX9ci9HRcQfOvYGVVAWAw2XOZ
      99tHqLxvA03VRRixIBdbW5k0C9mwfhV+t7xCK2XevI5cTD1J/5UznG7toKe7i2Dss09OB658
      wHQiRP9wBDDRJro5dXWcuoalDLeeoHdap/PSGYJKMWXKMKfaBpDXZiUR5hWAyNRVfvSDN9Ac
      bmJXf8n33riM9hnvr2newYblFThts+UmRmeoWLGChrpGVjaVMDU8TWhGY2XzKlZt2ohzagyB
      p5CShc3rOMM0FCpXbGTHjm14thbQ/TfXmXl8JQGn/Y4SlVJseB3O2QZcbvTpMJgenC4FFA9e
      LUoUUDWNj8bpdF0nFovNp13h3KYp9JwomUqSus22MQxDUDezdMPIic9rngfacdoO/pj32w5j
      N6fp7tcZ+e8zfP3PXqD8Dr7bicFILIZpmmjhEDZfDUYwQixm4LfPMO3w4QOcTueN71FVFY8n
      RwbvFbGXBBx2B47bbBubTeyYp2qz5cTnleZAmEZoOkle2Qb+/Nt/h+L14rbrzEwlySvK+5SB
      sBQDVy7QNdBJx6gHNVXPplVLaD10loMD14iGFbY+VEgiWcSZg2/hNsJ4VrTguic/niR9trQH
      wt54qZfHfn8Hl994G9fufawrn+SNH7bzyNf345/zuxQ8BQHKbHmUVQN2H/a8MnZs38TAeBh/
      2VJK3GCu2IjqGyKGl8rK7L9+LC0O6R0CmRpTY2EMDCJTQYyUDmhMjc3w6deBVAKVtQRuLVy0
      hBVFH79WHB4qaurTakeS7lba5wAT/ed47eUY/dcuY/+FncHCMBO2MjkQluX2FZewxqwSVq8i
      UCys1t1IKwCKWsGeJ+5nCijct+vDrxax94nVeO99b9I99OpQNad7xV0J2kkVG9be/n0/+GUr
      4dhnXUS/t7Y0VbGxseLG6zTvBSpi++OP3/OmFpsP4iGS8Wlh9ZamElTc/m1Z6eC5LsanxV0u
      LS7wzD8A0p35zmQfwdiUsHrPxaZ5Qli1xUU+ECNZWk7vAf7xtfe51jsurN6Gxgq++NAdHNhK
      OSOnAzAwNsO1/klh9ZYU5wurJYmR0wGQcl8g4AeHuHF/j/fmeVRlAKQF5a+9DHFxT895ivxA
      w43XMgDSghqeOcNkdEJYvVC87qbX8iqQZGk5vQcoWTpDlU3cX49ARW4M70t3LmsCEB69zuHD
      J5gw/LTs20d96e0nWfmyQ0Fz3vZt94zbIa6WJEbWBOD61Yss2/YEu5XrvNPWy7K9Tbc9PitM
      2CEmMAGJTE79JS2ELDkHMNCTXioq8vFVLqcsGSS80C1JlpA1ewBQPnySUMFmmoh9gvXe2pqc
      IKKJG6FeqkeF1VpssiQANlR7hOHhCC5bJ8MOP5sWuqW78NCRpehBn7B6/lI/rBNWblHJkgDA
      suUrOHTkZU5TwNY9D2Z0ol1J+kjWBMBf2cSvPde00G1IFpMlJ8GStDDm3AP09fWRbQvHRCIR
      ent7b/5ing8ql4prwuWGW3uYQ3j7A5hxcUvQaX4/07fpa40vn9LqWkEdQZUn75Of1xy2BlqI
      F4ibB7AwVXxTX3MukZSNC1H09PRQWyvuA5QWP7vdPvc6waqamVNQw9BJ6SZOhx3TNNFTSQxT
      wW63o9gAQyeZ1FFUO3a7etNME4qiZKwvyboEngSbdJ3+N354zsGf//7niY5e5fW3zhAz7dSv
      b2H7yiLajh/mfN8EDm85ex95iGKXceNQzDAMNE3c7AF3JQtXiJHmJigAJtpUJ73hIhqqnUCK
      /stdrHr0aVbYJ3jzbB+hoigjziqee/4RhttP0t01RklTyez6tuTWHiB2/K8xI2PC6jm2/xGO
      MnkFbT6EBMBMxrh0eZDG9fcxfaYbSBBKFbGi2I3TLKTQ6GU6bFJS7sehqviLqxjsnsJUy280
      mEsBEE2xyW0zX0ICMDl4ie4JHffwIJPjI/QPh8HU0HQw0UnaVVyqiZacPfk2zBQ2u1PONidl
      nJBxALvdR3GhytjoOJHQDFMzOgF/lMsdE8yMDDKdMikIuBnrHCSUiDNw7TIUlMpBCinjhOwB
      /FUr2Vm1EpIh3IEh1jZWkkrkMfz2L/j3eAEte/fiLnTQ0jTFz176MeWrW9hd75N7ACnjxN4K
      4chn87rZqUXsLj/bDzzD9l/578JlG/jSsg1CW5KsTR5lSJYmAyBZmgyAZGkyAJKlyQBIliYD
      IFmagMugKfraTnLs/Q6SriLu37GbpkoPXeeOc+TCALXrWmhZV0cq2MvRw8cYNYrZs28XS4uy
      f41ZKfcJCICJp7iRL3xxG8ZEB7+42EGN6eFqNMBzX3qAi0fepn2sktS18yzZeIAHlHYOtfZQ
      uXul3D1JGScgAA6KSgsYG+imr3+IJRUNTIcnqa2twO3wUtVYzfB4ECPpprbKT4GtkdIrV4gA
      ecbHt0ObppmVD+pkA9OQ22a+hIwEG8kYgz2dhHUPRU47RlJBtc3+fVdUFTOVwkTFZlPApqIa
      KVLMPgOQiwEQ/TipYRo5s22yTeYDoCeIJp00tzyEEerj1RNd1Db66BiZoL7Cz0TvIOrSBpRg
      mLGxKB61l1GHn42A3f5xezabDadT4DSId0FTFERGQFXVnNk22SbzATAStJ89yqWeUQzVxdLV
      D1C4tJi86wf5/vdOULpsPfvKvWj6Mt558ye8i5dNex7JnvlapEVtzofis1FXVxd1dXW3f2MW
      CH9nr9Anwpwt38S1+SvC6i0WiqIo8kKLZGlpBcA0dbRE6sPjW4ORzou0tg9i5MZORJI+Ia0A
      GKlO/uXFg4QwGHn/Vb79Tz/mZ9//a354pB95DULKRWkeAiUJTccw0Wj/YIjdL3yD//KnzzNx
      7Bzi1vmTpHsnvYstiovg0DG++w99BC9Osv8RO0Y4hFEaQNxKr5J076QVAJtazQv/6bcZDYaJ
      rLVzX3EeeqiKRx8vx337b7cMRXVgquIWFFMUOSXKfKUVAEVxUtnQRCUmqViI4ZEhkvnlNFXm
      yQfYf0Xeyv2gCTwoLF0urtYiM6/xJi00zI9efJGgt4Lk+AArn/xDDjSXfOoJhZ6MMz0VRDPt
      FBQW4nWpJCLTTM7E8RYEKMhzYqY0poNTaDgpKvLjVOUVWinz5hWAaKiPhOd+vvLVx3HPnOJ/
      /MNJdjZ/Dv+c707S9cEpro1FMJMJKGvisXUB3j18krAJuuln1/7dJLrPcerSMOgJljTv5YHG
      0rv6wSTpTswrAE6Xn2T4EAff9uDRuxkPRnnv6AW27VzLJ1fGUlm6egu1LhdmeICjl6aZ6B/C
      U9fM7pU19F48Ru/ANMbgKJsefJxKdZC33u1HayxF3t0iZdq8AqB6Cli7ehUzWowY5ezcCXos
      8Sk3gNlwez0Y8XFOn+uleuVq4sFeAvk+bIoNb1EhE6PTYPrIz7ejKsUUad2EgHxNu3Fnpa7r
      xGKxef+gIv1kaoBofFpYvU2lk6zNkW2TbdIKgKEP8e6bY2x6tIklRSVUr26mrjDEsdeH2PDw
      ej5tbffYRDenL0/Q/MBW/C6VoSmTeDIJgJ7UsHvy0INxNM0Ee4K4y4sXcDg+vpKiqipud25c
      azoVmyYYmxJWr8pMsTlHtk22Se9WCGOKi6e70Ugx0HaFkUgCmObiqet8+oJAGp0XOiiuX4aS
      iDATiRMIeOm73sXI+CAdl4fxlfvxeBU6r/XSe6mVsC+Am9kZoT/6xy2vs/mfcErubJts+gdp
      HwKZxMPj9HX3MjY9hWugj+7kJPHPvBUoiY5B+4lDXAEoXs5Te9awJTTDsaNnqN/QQn2RHX3N
      Zt5/7xRtlLL9gRp5WVUSIs2R4DxsRgf/+n/70cJRlNdfoVU1CNTt49OHffJo3vMwzbd8tXT5
      Jr6w/OPlsO15xWzZeyCtdiTpbqUVANW+jG986y8z1YskCSdHmyRLkwGQLE0GQLI0GQDJ0mQA
      JEuTAZAsTQZAsjQx6wT3XuR823kiJbv53JYqTG2aM0cO0to7RaCmmf17NpEcbOWdo+8zrXvY
      vPcR1lYXimhNsjghAVDdhazbuJYLQ3bAZLq/h1Dhffzm3gba3ztI53AUo6ubtQ89Q7Wtm7db
      +1lVXUiuPujXEp8gGp0QVq82GRVWa7ERs05wWRWEwjfu7wlpULWkBIfqpLi2ksGxKQzdR2mp
      F4+thrLkeUKAL5W6cTu0YRhomiai3bu26/hSjOAnn4zIlPwyH9rqz942Q2GdaFLc/E0+p0J5
      Xvb/CVuQKThtpoluGACYuo5it6OgYxgmoKPbVFRmJ8T9KACKoqCq2b9BF8KdbJtX275L2/Bl
      QR3BpqXr+Z2tLwirN18LEgC/z05r9xANFfkMXOvDs6aJ1GScgYFpHEoHY65C8pgNwEdyKQCi
      72RVbLbbbptocpSZeLeYhoBYsuqOPq+XD18mkkgK6GjW+uXlrK0vv/FaQAAStL3zc053jZJI
      2bje3sCzT2+ncfQ4P/rhv1K3YTfNpS5S9nUcOfw6bUoJu/aukZenLOLtof/JRETc+ZKv7FnW
      8uSN1wIC4GLNvidZc8tXGzbto+Hju6FxFNfwyK9/MfPtSFlFscewOcQ9zqnYbt7byD+0kqXJ
      AEiWJgMgWZoMgGRpMgCSpckASJaW04sx6oaByNWZbIoyu5axtGjkdABe++d36OkcElbvvtV1
      PPJEi7B6UubldAB+rTAJ5XFxBQty42Y86c7ldACkO3e/30WF5hFWr9afG4tmzRmASCRCtq2f
      nUqlCIfDN3/RbgePV1wTqgq39jAHrawUQ+BktXGnA/U2ffVFVtEZmXsFh0ywh2s/+XnNodRV
      jtMUFxan6bqprzlXih8bG8u6AExMTFBcXLzQbUiLSHl5uTLnHqC0NPtWZ4lEIpSVlS10G9Ii
      I88BMsBMxhB6fVZ1oAhclXIxkQHIgMh3D2BGxoTVc7Z8E9fmrwirt5jIkWDJ0mQAJEuTAZAs
      TQZAsjQZAMnSZAAkS5MBkCxNBkCyNBkAydJkACRLkwGQLE0GQLI0ATfDmUwPdXDs2Ckmkh6a
      t+1mXW0+XeeOc+TCADXrWti5ro5UsJejh44xahaze98uqovEPb0kWZeAPUCS4FSSzY/+Bs8+
      tpG+7l4iAx1cjQZ47ktP4Z9so30sQfvF8yzZdIAnNgc419qDkfnGJEnEHsBBTVMTGBpDnRFK
      S4uYDs9QW1uB2+GlqrGa4fEgRtJNbZWfAlsjpVcuEwHyDOPGk2mmaaLreubbzUGmIbfNfAkI
      gIKZinLt4gXijjLWNS1jvP0C6oeLXyiqiplKYaLOzrljU1ENnRSzyyLlYgCcS1ZBPCiuoK8k
      Z7ZNthEQAIOhKx+glayhuSofmwL5TmgfHqe+ws9EzyBqdQNKMMzYWBS3rZdRh59NgGr/uD2b
      zYbT6cx8u/dC8TLQQuLq+UogV7ZNlhEQgDCXzlzgunmVswpQtorf2r+S/OsH+f73TlJat559
      5V40YxnvvPkT3iWPTXseztkVIrOVbphCn9JUFFBzYBa9OWeFyEZdXV3U1dUtdBt35vi3xO4B
      6vdD7c7PfMtL547SMSZuFr1VS6r59eZtwurNh6Ioc88K8WlM08Q0TRRFQcEkGpohYTrwF3ix
      KdmfdivrnTzEpeGzwuoVuHYA2R0ASPcQyIxz5uhJVmzdjW3oPV78wRvEDDu7v/gH7F5RJHx1
      REm6W2mNAxh6H+eOjWI4krQdOU/jY1/mG7+1nbM/O4XAHb4k3TNpBUBRSjBi5zjVOoDX5yUv
      P4/I0ACG34+clUbKRWkdAilqEc/+zlO89C/f553BSTh9ldNV6/i9r25B3EyYknTvpBcARSFQ
      v5n/+McbiYVDaNjxej04VJs8/pdy0rzGAcxUnNaj/07rQBTD5mbfk8/SWCIHYqTcM6+b4cKT
      VzjZGmXXw4/x0CqVn77yHtF73ZkkCTCvAKj2AipqygkEiqhoWoFncpJwNI68G0XKNfM7BFLi
      DJw/yt9cfg/FTBGLm3zn2xF+70+fR05gnp32BspYY9YKq1cRyL4p9ueS5khwlNHBBMVVq/nK
      H/9nlMIA+c4kI/0xAksD8lJoFnttuIrTvSlh9XZSwYa1wsrNW3oDYalufvpPR4mQ4Owrr3Nx
      LAT08dN/PCgHwqSclOY5gIlhJEkkNFK6TlLTSCQ0+fSWlLPSPAewMdR+kBf/6gqTHT2oIwMc
      9ySIOzbLcQApJ6UVAJu9nq/95Z9w62q5Lm8RBfewKUkSJc2RYBdLamrSLqInQly98D6JQDMb
      6osAndFr73OktZ9l61vYtLwUPTLO6RMnGDFK2NVyPwGvPKWWMk/IvEAD19pQ8lwEgwnAJDbc
      wek+nb0P7iDefpKOySTXLpxGrdzA5qokJz7olecVkhBCFsmrWbsNQlcZ65g9U5iailPdUEtx
      URkNTZWMjs6gx6BuYxWlqpfOg53EAc8tD6vlyMNrAELPiUxMsatS3gkzNz6vBVklUlcU3PbZ
      QxzV4SAVjILpxuFQQHHh0qLEAXsyeWMj6rpOIpFYiHbT5hL8wadSOvptto2hi92nGkZufF4L
      EgC3zaR/JoRhFBGZmEL1L8MIhpmZSeJTx5l0FuCDm2aBUFUVtztHbroW/Hiow27HcZttY1PF
      zoJpy5HPS0AAklw/e4LL3V30TLqYmVjBg9tr0A6d4N/aP0B1ltKyrwAtWc6Jt17lrKlTuX4v
      8t5SSQQBAVCpWL6G/OqVbAFQXTi9BWzbs5fpSAKPz0+eC2jYwIOlDSRxUFCQn/m2MugvRjuY
      iU0Jq/e5so08KKza4iIgADa8/gDeW76qevMp9f7KL7rqoKCoOPPtCDCW0gimbh0tyZyIKe/D
      nS85PbpkaTIAkqXJAEiWJgMgWZoMgGRpMgCSpckASJa2ILdCSNJHvvr3f89ESNwDtc/v2slT
      27bfeJ01ATCNFLFYDN1U8Xo9ObG4wqfZE5kkFh0XVq9Oiwmrda85ys7i9E0Iq6fm1d/0OmsC
      MNZ5jqNnO9EMk+Vb9rO5IXdHhXecrEIP5gmr568qgI3Cyi0qWROAgf5hNj38BarUft56r59k
      Q7GcZkXKuCw5CdYxDR+FfieOgnKKtRk5zYokRJYEwAZKgmTKBF1Dc7hxLXRLkiVkySGQgtOp
      09szhkI7U54yPAvdkmQJWbIHgJXrthBpP8KhDpMdG5dlT2PSopYlewCw+0rZdeDphW5Dshj5
      h1aytDkXyu7u7s66KS3C4TA+n2+h27gjqZFRTEPcU1pqfj6222ybiUiEeCopqCPwOBwEvLcf
      CxkNjaALfKIt35WPzzX7JGJ9fb0iV4qXLEtRFEUeAkmWljUnwYtJ7Jd/BvFpYfXsTZ/HsWK/
      sHqLiQxABujdxzAjY8Lq2SqahdVabOQhkGRpMgCSpckASJYmAyBZmjwJtojhkEZUEzfg5HOp
      lPmyf4pjGQCL+GnrS1waviqs3oala/ntrc8JqzdfMgAWMRPvYTxyUVi9ULxQWK27IQOQATZ3
      PqYubnUUm10+PjRfQgKgJ0K0t31APLCG9XVFQJS2w8e5MjaN6vFz//bdVDhDnD11klGzhJZt
      GynK4VUi3yhtJJZfJqze+rwSVgurtrgICcDAtTZ0j53JqQTUAdFJepJFPPzwVhSbitvjoP30
      acyytaw3uzhxvpdHtzXk7CWqt8ITBAUukJGvRWUA5knI71jN2m2srg5g/3DtLCMWxV1cQn5+
      Pr48D3YbxGIm9SuqqV61lvzIFNm/vJq0GPx/AnwBIKhkE8YAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
