<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1223.0056                               -->
<workbook source-build='10.1.3 (10100.16.1223.0056)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Picks (Bachelor Fantasy 2017)' inline='true' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Bachelor Fantasy 2017' name='excel-direct.0kejm901tftsm81h312710ja0fd2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\ochang\My Documents\GitHub\Whaleshit-Fantasy-Football\Bachelor Fantasy 2017.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0kejm901tftsm81h312710ja0fd2' name='Picks' table='[Picks$]' type='table'>
          <columns gridOrigin='A1:O21:no:A1:O21:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestants' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='integer' name='Grand Total' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestants</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestants]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Contestants</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Picks]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O21:no:A1:O21:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\ochang\My Documents\My Tableau Repository\Datasources\Picks (Bachelor Fantasy 2017).tde' schema='Extract' tablename='Extract' update-time='01/31/2017 10:47:12 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='20' timestamp-start='2017-01-31 22:47:12.698' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestants</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestants]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestants</remote-alias>
              <ordinal>0</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brittany&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sarah&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>2</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>570.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>50</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.649932048214154</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.380269746013347</statistic>
                <statistic aggregation='Var' datatype='real'>113.42105263157895</statistic>
                <statistic aggregation='VarP' datatype='real'>107.75</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18400.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>3</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>675.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>44.095440747733115</statistic>
                <statistic aggregation='StdevP' datatype='real'>42.97891925118639</statistic>
                <statistic aggregation='Var' datatype='real'>1944.4078947368421</statistic>
                <statistic aggregation='VarP' datatype='real'>1847.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>59725.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>4</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>745.0</statistic>
                <statistic aggregation='Avg' datatype='real'>37.25</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>38.915394058609273</statistic>
                <statistic aggregation='StdevP' datatype='real'>37.930034273646527</statistic>
                <statistic aggregation='Var' datatype='real'>1514.4078947368421</statistic>
                <statistic aggregation='VarP' datatype='real'>1438.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>56525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>5</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>34.335803011158085</statistic>
                <statistic aggregation='StdevP' datatype='real'>33.466401061363023</statistic>
                <statistic aggregation='Var' datatype='real'>1178.9473684210527</statistic>
                <statistic aggregation='VarP' datatype='real'>1120.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>34900.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>6</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>605.0</statistic>
                <statistic aggregation='Avg' datatype='real'>30.25</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>50.327218752563915</statistic>
                <statistic aggregation='StdevP' datatype='real'>49.052905112745364</statistic>
                <statistic aggregation='Var' datatype='real'>2532.8289473684213</statistic>
                <statistic aggregation='VarP' datatype='real'>2406.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>66425.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>7</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>8</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>9</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>10</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>11</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3095.0</statistic>
                <statistic aggregation='Avg' datatype='real'>154.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>505</statistic>
                <statistic aggregation='Stdev' datatype='real'>129.44695113402531</statistic>
                <statistic aggregation='StdevP' datatype='real'>126.16928112658802</statistic>
                <statistic aggregation='Var' datatype='real'>16756.513157894737</statistic>
                <statistic aggregation='VarP' datatype='real'>15918.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>797325.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>20.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>20.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>13</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Eliminated&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Eliminated&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>14</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bailey&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Rebecca&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>15</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.327362' measure-ordering='alphabetic' measure-percentage='0.672638' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Contestants]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
              <wedge-size column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
              <tooltip column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Score by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]' direction='DESC' using='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Score by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' direction='DESC' using='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk]' direction='DESC' />
          <slices>
            <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk] / ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk] / [federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]))</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]</column>
          <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk] + [federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]))))</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017'>
      <style />
      <size maxheight='1500' maxwidth='1000' minheight='1500' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='9' param='horz' type='layout-flow' w='99600' x='0' y='0'>
              <zone h='100000' id='7' type='layout-basic' w='99600' x='0' y='0'>
                <zone h='24467' id='1' is-centered='0' is-scaled='1' param='C:\Users\ochang\Pictures\Bach.JPG' type='bitmap' w='99600' x='0' y='0' />
                <zone h='12000' id='3' name='Weekly Score by Team' w='49800' x='0' y='24467' />
                <zone h='38200' id='4' name='Weekly Score by Team and Contestant' w='49800' x='49800' y='24467' />
                <zone h='26200' id='5' name='Contestant Filter' w='49800' x='0' y='36467' />
                <zone h='37333' id='6' name='Scoring Pie' w='49800' x='49800' y='62667' />
                <zone h='37333' id='10' name='Weekly Scoring by Episode' w='49800' x='0' y='62667' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Weekly Score by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Score by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Score by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Score by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='104'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='Weekly Score by Team' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Score by Team and Contestant' width='192'>
      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
      ljN++voWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
