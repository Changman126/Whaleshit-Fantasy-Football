<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Picks (Bachelor Fantasy 2017)' inline='true' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Bachelor Fantasy 2017' name='excel-direct.0kejm901tftsm81h312710ja0fd2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\ochang\My Documents\GitHub\Whaleshit-Fantasy-Football\Bachelor Fantasy 2017.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0kejm901tftsm81h312710ja0fd2' name='Picks' table='[Picks$]' type='table'>
          <columns gridOrigin='A1:O21:no:A1:O21:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestants' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='integer' name='Grand Total' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestants</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestants]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Contestants</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Picks]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O21:no:A1:O21:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\ochang\My Documents\My Tableau Repository\Datasources\Picks (Bachelor Fantasy 2017).tde' schema='Extract' tablename='Extract' update-time='02/21/2017 07:08:52 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='20' timestamp-start='2017-02-21 19:08:52.434' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestants</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestants]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestants</remote-alias>
              <ordinal>0</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brittany&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sarah&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>2</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>570.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>50</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.649932048214154</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.380269746013347</statistic>
                <statistic aggregation='Var' datatype='real'>113.42105263157895</statistic>
                <statistic aggregation='VarP' datatype='real'>107.75</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18400.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>3</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>675.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>44.095440747733115</statistic>
                <statistic aggregation='StdevP' datatype='real'>42.97891925118639</statistic>
                <statistic aggregation='Var' datatype='real'>1944.4078947368421</statistic>
                <statistic aggregation='VarP' datatype='real'>1847.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>59725.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>4</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>745.0</statistic>
                <statistic aggregation='Avg' datatype='real'>37.25</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>38.915394058609273</statistic>
                <statistic aggregation='StdevP' datatype='real'>37.930034273646527</statistic>
                <statistic aggregation='Var' datatype='real'>1514.4078947368421</statistic>
                <statistic aggregation='VarP' datatype='real'>1438.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>56525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>5</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>34.335803011158085</statistic>
                <statistic aggregation='StdevP' datatype='real'>33.466401061363023</statistic>
                <statistic aggregation='Var' datatype='real'>1178.9473684210527</statistic>
                <statistic aggregation='VarP' datatype='real'>1120.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>34900.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>6</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>615.0</statistic>
                <statistic aggregation='Avg' datatype='real'>30.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>50.269667531068976</statistic>
                <statistic aggregation='StdevP' datatype='real'>48.996811120724992</statistic>
                <statistic aggregation='Var' datatype='real'>2527.0394736842104</statistic>
                <statistic aggregation='VarP' datatype='real'>2400.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>66925.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>7</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.358509593425559</statistic>
                <statistic aggregation='StdevP' datatype='real'>40.311288741492746</statistic>
                <statistic aggregation='Var' datatype='real'>1710.5263157894738</statistic>
                <statistic aggregation='VarP' datatype='real'>1625.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>45000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>8</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>465.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.25</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>105</statistic>
                <statistic aggregation='Stdev' datatype='real'>40.009045029974487</statistic>
                <statistic aggregation='StdevP' datatype='real'>38.995993383936252</statistic>
                <statistic aggregation='Var' datatype='real'>1600.7236842105262</statistic>
                <statistic aggregation='VarP' datatype='real'>1520.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>41225.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>9</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>235.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.89512162874653</statistic>
                <statistic aggregation='StdevP' datatype='real'>35.960916284210555</statistic>
                <statistic aggregation='Var' datatype='real'>1361.25</statistic>
                <statistic aggregation='VarP' datatype='real'>1293.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>28625.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>10</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>11</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4305.0</statistic>
                <statistic aggregation='Avg' datatype='real'>215.25</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>705</statistic>
                <statistic aggregation='Stdev' datatype='real'>207.43086990482803</statistic>
                <statistic aggregation='StdevP' datatype='real'>202.17860297271815</statistic>
                <statistic aggregation='Var' datatype='real'>43027.565789473687</statistic>
                <statistic aggregation='VarP' datatype='real'>40876.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1744175.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>20.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>20.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>13</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Eliminated&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Eliminated&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>14</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bailey&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Rebecca&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>15</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.327362' measure-ordering='alphabetic' measure-percentage='0.672638' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Contestants]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
              <wedge-size column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
              <tooltip column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Score by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]' direction='DESC' using='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Score by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' direction='DESC' using='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk]' direction='DESC' />
          <slices>
            <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]' value='60' />
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk]' value='76' />
            <format attr='width' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk] / ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk] / [federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]))</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]</column>
          <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='8' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep7:qk] + [federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep8:qk])))))))</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017'>
      <style />
      <size maxheight='1500' maxwidth='1100' minheight='1500' minwidth='1100' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='9' param='horz' type='layout-flow' w='99636' x='0' y='0'>
              <zone h='100000' id='7' type='layout-basic' w='99636' x='0' y='0'>
                <zone h='24467' id='1' is-centered='0' is-scaled='1' param='C:\Users\ochang\Pictures\Bach.JPG' type='bitmap' w='99636' x='0' y='0' />
                <zone h='12000' id='3' name='Weekly Score by Team' w='49818' x='0' y='24467' />
                <zone h='38200' id='4' name='Weekly Score by Team and Contestant' w='49818' x='49818' y='24467' />
                <zone h='26200' id='5' name='Contestant Filter' w='49818' x='0' y='36467' />
                <zone h='37333' id='6' name='Scoring Pie' w='49818' x='49818' y='62667' />
                <zone h='37333' id='10' name='Weekly Scoring by Episode' w='49818' x='0' y='62667' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Weekly Score by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Score by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Score by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Score by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='104'>
      iVBORw0KGgoAAAANSUhEUgAAAGgAAADACAYAAADoUyYiAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAXP0lEQVR4nO2df1RUdd7HX9XsIR1TM3/i6qMsx8o6bkcvOk/o8MOBxEXlcYWUNRIXSc0w
      fyGrriOu8ZCapZnllGC44YquktKD2cTgKDXm5Lqm6SGCksDMIjAmZ2rcef6YAUH5OYP4Re/r
      HI/Mvff7ud+Z93y+986938/73uVwOBzICMvdt7oDMk0jCyQ4skCCIwskOLJAgiMLJDiyQIKj
      aG4Ds9ncHv2QaYS75B+qYiMPcYIjCyQ4skCCIwskOM2exTWEPkkiSX8thNJXzfzVKUwe4lY4
      mSZwM4M0pJrNmM1mzObD7EroyT9Ss/iuiRb1RdWTdO1FnW2SuHHpnU0bDHFe9H08gsAe1VQ3
      sZUm1UyqxvO93Wl4LJDdUsZHG1IxD9PgA0AxuiQdxZUFpE4NQBWloxjQJ0Whc/6BJCWh1ych
      SRKSFIWuWE+SJJGkd/4vSRJRumLgOwyrpzPW37nMPzyBzEK7a896kmavJSPRtV4VwMy0QuxA
      ZfZ85mdX1ullOQV2OiYON/hg6QjHiBGuf2MmORZlnHZU16790rF10SLH0jlzHFuPXXL8Wtsm
      0rH1y9oIjqVLP2gg7lJH/aU/OQo/O+uotDpfWS/scDy73HAtRvhzjq0ffuGo/tXh+PVSjmNR
      7FbHlw6Hw/HrUceqaRsdZ2rCnNnoztsUAs+PQR+8TVz/d3lu0QFqv7MVVqRlm4gf2dO9s5Ba
      7sVRmMaz4/1dGfQKpsJCimtWPzKR+GBflApQ9HyYIb1dyxX+zBp3jt2utDHtPedRL24lnh+D
      vLrxUPAyon9TQO1Vu97DGP7bNjijO5/B+rzhrNp/2HVCkkpLD2Pek8Oo2JZJub2A98tVnvfl
      FtEGJwl2LKfSyDzXne6tafb5CU7YALsNW+3x4XNOOBdis9nBauVu74H081Jgt5Rxco+eMy2N
      3yWMaT56tr+0l8thk1vTM6Fw82vuPJjXhFD2H8mftKuRmmxTFxUR6rdYECBhuWcYC3emET0Q
      VBFq3loQgGS5h2ELd5IWHc0U23RCVd9yVenLE4kafPlPC/ehQDVTw5boEp5Z1KXV71AUbuOr
      2Xa+P7iChYUxZCQMvdWdcZvb9FKPniRpNH/MGsKKuR1XHLitM+j24DbNoNsHWSDBafYs7uef
      f26Pfsg0gpxBgiMLJDiyQIIjCyQ4skCC46ZAdsr0KcSFh6BWBxM2dQkZpy1ACenadEratIt3
      Nm4JZDmSwrzM+5i1LQej8RB7Nkyhx48V7vXAoEWtNTS7WUm6lvQ7UHk3rmZ/y/6dVfz55ZWM
      6uZcovQeRbg34E7uBCVjDGp9szuF1meQ/TSnOwUR1K2x9WV8uGEekSFq1OoQpm86jsW1yqDV
      YrAXsXtJJCFqLQbnQmJqUqN2nRp1cBhTVx3iEiWkx6h5Ot1A+tNq1Gp1bcbZy/SkzAgjWK0m
      JHwer5+sqtkT2vkvs/OvcYSHOGN11CkJrc+g0lJKuwxC2dj6H7+kwm8Bm3OG0YdzvDFrJ5/g
      hzNJKslPWc89Y18iZ91AvK5v+3EmB/5rFTnrHsHLbqH8fCWd6U9shpHAdC35gcnEDq7Z+Ft2
      Z3zG2BezWdbHC7vlDG8t2crxLYn4AVy4gHXyMnZpffCqOkgpMPj6/XUAWi/QgAEMqLZggYZF
      6qUmMmIYfQB4iAfrfSo/0n3iqyx4rJH0Gx6E74bFPH1uBH4jxhA2cSzejfXj0hGO5O7j9dx9
      dRYOwqsE/AYDD4cRG+CcZ8QDD7b8/QlG6wVSPMqjV9ZhqAonvLFhrlEG81hj4gAox7By9x6K
      TxTw2ZnjvBz3IZP/vpawhr4J1itYx6wk7wWNhxNTxMaNs7i+TJzWjW0LXuXYRef8AUv5MXKO
      lHremxITh4uv0n9kKJOems30EXCp9uSwlNP//gE7YLPZYMBI/L7QsS7/IjYAu4XyY3qOX/K8
      GyLh1mm2cswyNkf/xOszwlCrQ5mycA8V9/fwvDedrlCwNppwtRp16HT+8UA0kwY4Vw0OnMDd
      70wlWB1MxCufAg8xKyWSijdmEKZWow57kpU5P9Kps+fdEIlm76jKtxtuLfKlHsGRBRIcWSDB
      kQUSHHnaleDIGSQ4skCCIwskOLJAgiMLJDhuz0n45qCW6WP9kSQVAZMSSDvVVI23jLu4JVB1
      /iriMrox9508zOaj/N+WqfSocG9OQrEuylXRLdMQbvwOKidjZgpdN2wmolU1jzLu4MachFOc
      6qxB04g4lSd0JIT71/oa6E7U1H437J9QrIu65kBSrGPxyi2kxk0iQCUh+Yej1de0b9wXoWbI
      nRqgQpL8GTtrEycquS1ovUDnz3O+SxcarPqs1pO6+gzqVw5hMps49IqaM6tT0dccnuyF6Ja9
      Q4+F/+RoVrzL+KI+FV9U4DtvK4dMZgreDOWsvo7jY9k3WMetYv9hM6acRHoczec8QHkm2049
      wSuHTJjNh9n/HGzebGr1WxOR1t8tHjiQgdVO25cbRDLnUxz6LKm+znvUCt8pPBuaRYYZNIE4
      /RNWb2JKEyX6vYOimfJYX+eLoUPri+jyRQCg58MM6V0GwHf5+RzI2sSBrDrb+txLMaoGvwQd
      CTfmJAxj2M8p6CsjWn8Maiv/hOuwWq0ErjGxftztNzvBjbM4bybHdOeNuRv46FvXnISyj8jO
      Pw9SID6HXmNPkQU7dixFe3jtkA+BLa/Pd4uBKhWFr73Ah9/aAJd/0EFTk+5bHQW3TrO7BK7i
      rZgqNj0ZgCSNZvzcf1DRowd00ZC08hGMz4eiklSEPm/kkZVJaG62TcHQuayf9oOrPxIBE5eS
      XdGZ22F6gny7QXDkSz2CIwskOLJAgiMLJDiyT4LgyBkkOLJAgiMLJDiyQIIjCyQ4bglk0LqK
      edVqgsOmsiT9U35ozyrduoXHlJAe4ypIblljtC0o+xcFNzMoiGSjEaPRSO6u1YwtXU9cypHa
      am53KUmPqfPBy0AbDHFeXYcwbuUb/LkqnSwPP9vBsRlkxHbEWuybRxsdg7oxLqwfx83OAtFL
      xhddNjFq1CGRLNldVOtTYNDO5+Wdf71mIzMngyLXypL0GK6NPlWcTF/i9FsIDmPqyhzKWjKM
      Vp0k3eW1EBw2lZU5ZR3WIwHa8CRBcY+C6mrn5IPO/SeQmJmD0WjEmLMZyZTJx7VbXuCCVcOy
      XbkY83Yzv4eJhuqP7aa32XffHLbnGjHmZbNx1Mds3NdchbAd09v7uG/OdnKNRvKyNzLq4400
      20xg2uwesf2qnS5dnHfmvBxF7FiYiKnwsrMCm0HElsCYwQAPExYb4Jor8AAP+vbiQgPx/mXM
      xZCzB8OmOguDNBDZlG/MvzDmGsjZY6BVzQSmjQSq4mDuBfzm9QJKydx0mN8v24XWR4kCMGhj
      +KqVEa3WXsSk5RLn26pWWHvFkJYbR6uaCUwbPD+omIOrZ7OtWyxRgwFs/HJXPwb08UJht1B+
      Kpv8s62PO9yvL+9u2MEZi/MIYrtcyEFDc4GG49f3XTbsOIOzmY3LhQdptpnAuJlBBrRqA1pA
      ofRmRNQS3npqhMsaxpfIiF+Iiwjm4lUlPpr5BPnQ4icu1KAMW87ys4tYGvEml20KlN5DCXlm
      BeOabkXY8uWcXbSUiDcvY1Mo8R4awjMrrmtl0KI2aGtfBiUbSQ4yoFXnE2hMRqTRUPZJEBz5
      Uo/gyAIJjiyQ4MgCCY48cVFw5AwSHFkgwZEFEhxZIMGRBRIctwTSJ0muB6VLqAImkaD7hO/b
      866YPqlO6X4xuqgk9E02qNeYJEkiMLnghht51Qfmo5Kka0XNAuDxs7wP73+RJ86nMH1VPp5a
      WbSbZ4Imnuiv9Ryrp1A1Bv0VwiPEqmr1fE5Ct4f4w5rtzK7UkenhZ+sTn0VWfHt8QD5oVF+j
      r6tQtQH9lUA0vRtvdStoo2NQd8LDvTGZnFWh3xlWu2xinF4HCZmFtcOJPmk2azMSr9nIzEyj
      0LWynmcClZzQJRDu8kSYtDSbb1oyjFaeQJcQjr9r+F2a/U2DcxJ8NCq+1h+rXVdt0HMlUINg
      +rThnARFnTkJv53Mir15zifY573FyI8yOFq7ZRnfWMc5n3BvyiGxx1Hyz98Yz16wjayuCew6
      bMZsOsTWx4+yNqu5smA7Bduy6Jqwi8NmM6ZDW3n86FoabOYTTuDFmmGuGoMexk8UTZ62nJNg
      vzYn4V5HIWnPzqfgXJVrToIP8cUQ6APwCBPjg123pHvy8JDelDUQz2w4gD57J/r1dRZqxkG0
      polemDEc0JO9U0/zzbzRqC7y5jE7/qNMFBDEii4IVxneRgJVkpNTjmphb+A8GevzGL5qPym+
      zjkJ+qQoWnt4slp7MzMzn7lDWtUKa++ZZObPpSXNvDUqLr55DNsVPVeCVtAF8QRqgzkJRby3
      YgZvdI8n2gfAivVubwb2c85JKDu5B/2Z1seVRvVjb2oap2rmJFSd471mA0mM6reX1LRTtXMS
      qs691/j+vTWoLh4k9eAVgm66V4B7uCmQ87eEJEmMHr+I9wcu4++rAl3WMEOInmIjJVSFNHo8
      i/Z1wteNKTZdJiSTPCSPBaEqJElFaMx6PqO550N0YUJyMkPyFhCqkpBUocSs/4zGm3mjUX1N
      7q+ahr0cinVEuUyfbhXy7QbBkS/1CI4skODIAgmOLJDgyD4JgiNnkODIAgmOLJDgyAIJjiyQ
      4Hjsk1Dzr6b4t34hsKeUkK5Npy0K89sqTnvj5u2GIJJbVOjkNJkgOYP2ra4vIV2bT2BybId8
      wHpdbrLR9GBiMzJu7i5uc26yQCWkx2xnUEYyQRjQqutbtvjGvUNazADOvjOP5L9/TrnFjkLp
      Q7h2IwtVroeyV59mx5JIjhy7yFWlD5pFL5Co6Y8CqDqZzpoXMjl28SpK79E8+9JKwn/ZQczT
      6XwFpBvSAWeJ4yB7GR9umMf7uae4aPNi4JQUtib40dBz3EXC4xrVGpx1nk21CSLZGEQyQJWB
      1au+Ijra+aDu+6V4NkQMxVupwG45xivJ71KqisG5thMj5mxn2TolVy/ms+G5ZHY/qmNaTxNv
      77uPOdtzWadUYLv4Hqtf2seotbFkGANvGOLSd39Jhd8CNucMow/neGPWTj7BT6h61Ia4yceg
      BrAXkfHaOSaumoOva++dfjzKcu1SPi+3uGbZBDECnAJ1+R1DXeX8ij6BJMQcYO1ZoIuRXEMO
      e+obKaAhsuF+9VITGTGMPgA8xIMd5ODUvg87sBexO3k/AxYv5LFuNQuPsFFn46mN2Yzq40XN
      sNgYP/30EygBq5VeMWnkts5IocPRjr+DqjBsyqLT7ASCutVZbLdhu8+bQd29wHaZwsM5HK9r
      3WK38LMNwI7lzE5S9vcjcCQw3I++725gxxlX1tkuU3jQQK0lQulp/v2DHbBhs7XH+7s5tN8x
      6MhG/patx559kLWuRYNi3yYjNpDYEc8xI+w1LPf0YVT0k/j0+L62Wfe7T/K3iGDKLaD0HkHM
      qjUEKQHCWL78LIuWRvDmZRsKpTdDQ57BaYkwmMAJd5M4NZgNV5X8YU2ucBMSW4rskyA48qUe
      wZEFEhxZIMGRBRIceeKi4MgZJDiyQIIjCyQ4skCC42YZ/o1l7/XrS1tKa0vo7zzaP4P0SUgi
      GREITvs/W1mTirmpMlOZetycDDrzNnGTAlBJzhL6qakFVNasq+cSch2NlNBXZs9nfnZlnQ3L
      yZibTEFH9vxvIW5mkLME8no0qa4/eoxk3pYpPNpficJu4aO1y9h73p+ZA5uKWaeEfpMShe1b
      3l2eQtbjm4gOj6JHTAafRyQwFODzPRQ8FEnM7fds9Rtw8y1qSDWnUnekKtZFoat50amCw4uT
      mH+6zFXMC5qRQJMCNVVC78+sce/wZoEdrb8C095z+M9McK/rHYyb8h3MX/8atplbOfR4X7y4
      TrxGabqE3ntyGBUJmZSP+h3vl6uY5d3m3RaSm3AMsmO1dsXb5368sFF1Lo9sU0vcB5opoe8S
      xjQfPdtf2svlsMncIfrcDIEUaOJHkvdkAJIUzJ+2FOHt21z5PDRfQq9ANVPDudyuTA4T09Pg
      ZtCBrmbb+f7gChYWxpCRMPRWd6bd6CCXevQkSaP5Y9YQVsy9c8SBDpVBdyYdJIPuXGSBBEcu
      wxccOYMERxZIcGSBBEcWSHBkgQTHPYEM2iZK7d0onTdoUavD+F/T9XfgLOQmBqO+rrb1TkKY
      DAqKjaLUYK5vQm4xYrCOI3yQB4ENWtRtZ9zQ7ggjEIMC8Ss1YK6jkMVowDomiF6exA1Kxth0
      dbPQtIlAVSfTWRIZglqtJjjsObJqn25/CeOLcYSHON1IQiKXsLuosYkEgwn0K8VQq5AFo8HK
      mMCe9ba6ZHyRuHDnvtQhkSzZXVSbdQatFoO9iN1LIgmpGRYNWmLSSwA7ZfoUZoQFo1aHED7v
      dU5WtcW7v7l4LpAllxeSz+L/YjZ5RiOH9qTwh341KzvTf0IimTlGjEYjOZslTJkfNxpqcNgY
      LtUMcxYjBkIZf136dO4/gcTMHIxGI8aczUimTK5FrCQ/ZT1nx75EzvVV6N/uJuOzsbyYnYfR
      mMuuOXeh23rc47d/s/H8lvcnJn7zbAoRPq5QyvtQ1kb1wlG0g4WJJgovuyp5B8VSwpiGLVr6
      BuF3KR2zXYX0iQnUiSiv84L3chSxY2EipsLLrscODCK2BMYMBviR7hNfZcFj3W4IfenIEXL3
      vU7uvjoLB3lRgp/QdjEeC2S/akdxTyNhSjPZdPj3LNulxUepAAxoY75qIlpfgvwukW62cSX/
      CurE631ASsncdJjfL9uF1uWdYNDGcC3iYB5rQBwA6xUrY1bm8YKmY00F8niIU/zOl9Idr/Kp
      q+T9cuGnnK4po7f9wl39BtDHS4HdUs6p7PxrZfKN0DfIj0sfbEB/Re2q5q6LjV/u6seAPs7H
      DpSfyia/uYAuBoz04wvdOvIvOvPObinnmP44l5ppd6vx/Os0+CmWhf2Fv0wN5uJVJT7+QTzQ
      yXXg8I0k4pc4IoJdPjvzg/DhP03H6xuEX2k0//qfhAZ8dHyJjPiFuAjXvjTzCfKhuYhOHppF
      SuRfWDEjjJUWO15dh6B6+nmSWv2G2xe5DF9wxPkdJNMgskCCIwskOLJAgiNPuxIcOYMERxZI
      cGSBBEcWSHBkgQSnTXwSqvNXMCW5gA5sDSosnmdQpZ41m+9l8XJ/vBrbpoXeCMW6JK4vAC/W
      RTVeFX4H4OHV7Er0qRn0XpmGqqlIHngj+MRnkeVe09sCjzKo8uAa0novJmHYNXX0SUno7YVk
      JoTjL7mGwnreCJUUpE4lQCUhSf6Mnf4GZyhGFyURpdOji3I+4bgm4+pbzOhJmr2WjMTpjPV3
      ejDMTCt0zUk4w9txk1xxVQRMTaWgrrVCB8Uzn4TOoaz9YNh1QSrRr0pB8cRm8jYNunHYO7+X
      bRen8c+jk+ipsFF17gI/M4j4LDMaXRJ6TSrxPk3suuwbrFGr2J/ii1fleyQl5nN+5hB86MHI
      eVuY8mh/lAo7lo/WsmzvefybNmcQHo98EqTseUxdZ0K9QlUnUAU9JutIHN694aYDAxl9MZYn
      Z+jx9xtJ2KQo/rs1u35kIvHBLrf5ng8zpHeZa0UnKg4vJmn+acpabs4gPB4Ncd0j1rC4ej0r
      9HXHEh+GNyaOa/3MzEO8s3gyqh4VZDw/jU2fe9ILF/nrec02k62HTJjNZsxZ8TSViB0FD8/i
      uqNZk8LAtBVkt3S8/+4UxpPfc9+jQYx/ajZLw+/nu9qJO+c5deJ77ICtlX7+dquVrt4+3O8F
      tqpz5GWbaIk7g+h4fpqtGEL8qmHsTdBR2BJzo85QlDaX8aMlJCmYeV9MYPZo5yofTQR3b5+E
      SlIRuvaT1nVDE8/IvCcJkCSC/7SFIm9fWuLOIDry7QbBkS/1CI4skODIAgmOLJDgyD4JgiNn
      kODIAgmOLJDgyAIJzv8DHVMPSeNiXAYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017' width='192'>
      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
      P3846H9eLikkN1JOmgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='124' name='Weekly Score by Team' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Score by Team and Contestant' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
