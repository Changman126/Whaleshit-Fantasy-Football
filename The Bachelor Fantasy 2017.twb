<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Picks (Bachelor Fantasy 2017)' inline='true' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Bachelor Fantasy 2017' name='excel-direct.0kejm901tftsm81h312710ja0fd2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\ochang\My Documents\GitHub\Whaleshit-Fantasy-Football\Bachelor Fantasy 2017.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0kejm901tftsm81h312710ja0fd2' name='Picks' table='[Picks$]' type='table'>
          <columns gridOrigin='A1:O21:no:A1:O21:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestants' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='integer' name='Grand Total' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestants</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestants]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Contestants</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Picks]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Picks]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O21:no:A1:O21:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\ochang\My Documents\My Tableau Repository\Datasources\Picks (Bachelor Fantasy 2017).tde' schema='Extract' tablename='Extract' update-time='02/08/2017 03:51:07 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='20' timestamp-start='2017-02-08 15:51:07.775' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestants</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestants]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestants</remote-alias>
              <ordinal>0</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brittany&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sarah&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>2</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>570.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>50</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.649932048214154</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.380269746013347</statistic>
                <statistic aggregation='Var' datatype='real'>113.42105263157895</statistic>
                <statistic aggregation='VarP' datatype='real'>107.75</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18400.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>3</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>675.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>44.095440747733115</statistic>
                <statistic aggregation='StdevP' datatype='real'>42.97891925118639</statistic>
                <statistic aggregation='Var' datatype='real'>1944.4078947368421</statistic>
                <statistic aggregation='VarP' datatype='real'>1847.1875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>59725.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>4</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>745.0</statistic>
                <statistic aggregation='Avg' datatype='real'>37.25</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>38.915394058609273</statistic>
                <statistic aggregation='StdevP' datatype='real'>37.930034273646527</statistic>
                <statistic aggregation='Var' datatype='real'>1514.4078947368421</statistic>
                <statistic aggregation='VarP' datatype='real'>1438.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>56525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>5</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>34.335803011158085</statistic>
                <statistic aggregation='StdevP' datatype='real'>33.466401061363023</statistic>
                <statistic aggregation='Var' datatype='real'>1178.9473684210527</statistic>
                <statistic aggregation='VarP' datatype='real'>1120.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>34900.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>6</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>615.0</statistic>
                <statistic aggregation='Avg' datatype='real'>30.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>50.269667531068976</statistic>
                <statistic aggregation='StdevP' datatype='real'>48.996811120724992</statistic>
                <statistic aggregation='Var' datatype='real'>2527.0394736842104</statistic>
                <statistic aggregation='VarP' datatype='real'>2400.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>66925.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>7</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.358509593425559</statistic>
                <statistic aggregation='StdevP' datatype='real'>40.311288741492746</statistic>
                <statistic aggregation='Var' datatype='real'>1710.5263157894738</statistic>
                <statistic aggregation='VarP' datatype='real'>1625.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>45000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>8</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>9</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>10</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>11</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3605.0</statistic>
                <statistic aggregation='Avg' datatype='real'>180.25</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>580</statistic>
                <statistic aggregation='Stdev' datatype='real'>161.81109031017749</statistic>
                <statistic aggregation='StdevP' datatype='real'>157.71394199626107</statistic>
                <statistic aggregation='Var' datatype='real'>26182.82894736842</statistic>
                <statistic aggregation='VarP' datatype='real'>24873.6875</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1147275.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>20.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>20.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>13</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Eliminated&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Eliminated&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>14</ordinal>
              <family>Picks</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bailey&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Rebecca&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>15</ordinal>
              <family>Picks</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>20</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.327362' measure-ordering='alphabetic' measure-percentage='0.672638' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Contestants]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
              <wedge-size column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
              <tooltip column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Score by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]' direction='DESC' using='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Score by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' direction='DESC' using='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk]' direction='DESC' />
          <slices>
            <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk] / ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Status:nk] / [federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]))</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]</column>
          <column>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Picks (Bachelor Fantasy 2017)' name='federated.0j2cl1k15o1a4a1apxiif1ogtj8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0j2cl1k15o1a4a1apxiif1ogtj8j'>
            <column datatype='string' name='[Contestants]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestants]' derivation='None' name='[none:Contestants:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep1:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep2:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep3:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep4:qk] + ([federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep5:qk] + [federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[sum:Ep6:qk])))))</rows>
        <cols>[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Team:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017'>
      <style />
      <size maxheight='1500' maxwidth='1100' minheight='1500' minwidth='1100' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='9' param='horz' type='layout-flow' w='99636' x='0' y='0'>
              <zone h='100000' id='7' type='layout-basic' w='99636' x='0' y='0'>
                <zone h='24467' id='1' is-centered='0' is-scaled='1' param='C:\Users\ochang\Pictures\Bach.JPG' type='bitmap' w='99636' x='0' y='0' />
                <zone h='12000' id='3' name='Weekly Score by Team' w='49818' x='0' y='24467' />
                <zone h='38200' id='4' name='Weekly Score by Team and Contestant' w='49818' x='49818' y='24467' />
                <zone h='26200' id='5' name='Contestant Filter' w='49818' x='0' y='36467' />
                <zone h='37333' id='6' name='Scoring Pie' w='49818' x='49818' y='62667' />
                <zone h='37333' id='10' name='Weekly Scoring by Episode' w='49818' x='0' y='62667' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Weekly Score by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Score by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0j2cl1k15o1a4a1apxiif1ogtj8j].[none:Contestants:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Score by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Score by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='104'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      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
      mgyA5Gv/BsZ2AAy6p405AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='Weekly Score by Team' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Score by Team and Contestant' width='192'>
      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
      vP/+bQD+F13Ptp3ry1k/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
