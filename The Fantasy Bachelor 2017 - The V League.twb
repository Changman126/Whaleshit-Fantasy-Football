<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='TheFantasyBachelor2017-TheVLeague' path='/workbooks' revision='2.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Tableau Set Up (Vanessa Bach League)' inline='true' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vanessa Bach League' name='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\ochang\My Documents\GitHub\Whaleshit-Fantasy-Football\Vanessa Bach League.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0' name='Tableau Set Up' table='[&apos;Tableau Set Up$&apos;]' type='table'>
          <columns gridOrigin='A1:O65:no:A1:O65:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestant' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='integer' name='Grand Total' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestant]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Contestant</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O65:no:A1:O65:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
      <group caption='Action (Contestant)' hidden='true' name='[Action (Contestant)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Contestant]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\ochang\My Documents\My Tableau Repository\Datasources\Tableau Set Up (Vanessa Bach League).tde' schema='Extract' tablename='Extract' update-time='03/07/2017 01:28:40 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='64' timestamp-start='2017-03-07 13:28:40.230' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestant</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestant</remote-alias>
              <ordinal>0</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alexis&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Whitney&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1470.0</statistic>
                <statistic aggregation='Avg' datatype='real'>22.96875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>190</statistic>
                <statistic aggregation='Stdev' datatype='real'>59.606638798785568</statistic>
                <statistic aggregation='StdevP' datatype='real'>59.13912853126515</statistic>
                <statistic aggregation='Var' datatype='real'>3552.9513888888887</statistic>
                <statistic aggregation='VarP' datatype='real'>3497.4365234375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>257600.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>2</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1825.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.515625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>65</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.144968551196298</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.065398941888741</statistic>
                <statistic aggregation='Var' datatype='real'>102.9203869047619</statistic>
                <statistic aggregation='VarP' datatype='real'>101.312255859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>58525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>3</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1525.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.828125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.825868533599696</statistic>
                <statistic aggregation='StdevP' datatype='real'>36.537033732698866</statistic>
                <statistic aggregation='Var' datatype='real'>1356.1445932539682</statistic>
                <statistic aggregation='VarP' datatype='real'>1334.954833984375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>121775.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>4</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3050.0</statistic>
                <statistic aggregation='Avg' datatype='real'>47.65625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>39.999689978957313</statistic>
                <statistic aggregation='StdevP' datatype='real'>39.685962076501305</statistic>
                <statistic aggregation='Var' datatype='real'>1599.9751984126983</statistic>
                <statistic aggregation='VarP' datatype='real'>1574.9755859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>246150.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>5</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2595.0</statistic>
                <statistic aggregation='Avg' datatype='real'>40.546875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.357109017312141</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.032734526648049</statistic>
                <statistic aggregation='Var' datatype='real'>1710.4104662698412</statistic>
                <statistic aggregation='VarP' datatype='real'>1683.685302734375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>212975.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>6</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2135.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33.359375</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.567068462372418</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.241047205537534</statistic>
                <statistic aggregation='Var' datatype='real'>1727.8211805555557</statistic>
                <statistic aggregation='VarP' datatype='real'>1700.823974609375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>180075.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>7</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3120.0</statistic>
                <statistic aggregation='Avg' datatype='real'>48.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>50.174299371892751</statistic>
                <statistic aggregation='StdevP' datatype='real'>49.780769379349692</statistic>
                <statistic aggregation='Var' datatype='real'>2517.4603174603176</statistic>
                <statistic aggregation='VarP' datatype='real'>2478.125</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>310700.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>8</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1990.0</statistic>
                <statistic aggregation='Avg' datatype='real'>31.09375</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>105</statistic>
                <statistic aggregation='Stdev' datatype='real'>44.955610822726506</statistic>
                <statistic aggregation='StdevP' datatype='real'>44.603012352726807</statistic>
                <statistic aggregation='Var' datatype='real'>2021.0069444444443</statistic>
                <statistic aggregation='VarP' datatype='real'>1989.4287109375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>189200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>9</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1550.0</statistic>
                <statistic aggregation='Avg' datatype='real'>24.21875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>46.292880164969795</statistic>
                <statistic aggregation='StdevP' datatype='real'>45.929793146034307</statistic>
                <statistic aggregation='Var' datatype='real'>2143.030753968254</statistic>
                <statistic aggregation='VarP' datatype='real'>2109.5458984375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>172550.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>10</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>990.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15.46875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.925091456677748</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.596262133003009</statistic>
                <statistic aggregation='Var' datatype='real'>1757.7132936507937</statistic>
                <statistic aggregation='VarP' datatype='real'>1730.2490234375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>126050.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>11</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>21255.0</statistic>
                <statistic aggregation='Avg' datatype='real'>332.109375</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>795</statistic>
                <statistic aggregation='Stdev' datatype='real'>263.79526195171627</statistic>
                <statistic aggregation='StdevP' datatype='real'>261.72624756051766</statistic>
                <statistic aggregation='Var' datatype='real'>69587.940228174601</statistic>
                <statistic aggregation='VarP' datatype='real'>68500.628662109375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>11443025.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>64.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>64.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>13</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Eliminated&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Eliminated&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>14</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Allie&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vanessa&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>15</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1005.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15.703125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>50</statistic>
                <statistic aggregation='Stdev' datatype='real'>20.429266034644655</statistic>
                <statistic aggregation='StdevP' datatype='real'>20.269034023218151</statistic>
                <statistic aggregation='Var' datatype='real'>417.35491071428572</statistic>
                <statistic aggregation='VarP' datatype='real'>410.833740234375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>42075.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.32899' measure-ordering='alphabetic' measure-percentage='0.67101' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Contestant:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Danielle M.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alexis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jasmine B.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raven&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanessa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lauren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Corinne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kristina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hailey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danielle L.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astrid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whitney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lacey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jaimi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Briana&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017 - The V League' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017 - The V League' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Contestant]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
              <wedge-size column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
              <lod column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep10]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[WTL]' role='measure' type='quantitative' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep10]' derivation='Sum' name='[sum:Ep10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WTL]' derivation='Sum' name='[sum:WTL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='8' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='9' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='10' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='11' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk] + [federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk]))))))))))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep10]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[WTL]' role='measure' type='quantitative' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep10]' derivation='Sum' name='[sum:Ep10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WTL]' derivation='Sum' name='[sum:WTL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep10]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[WTL]' role='measure' type='quantitative' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep10]' derivation='Sum' name='[sum:Ep10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WTL]' derivation='Sum' name='[sum:WTL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep10:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:WTL:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='ASC' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk] / ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk] / [federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017 - The V League'>
      <style />
      <size maxheight='2000' maxwidth='1600' minheight='2000' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
      </datasources>
      <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
        <column datatype='string' name='[Team]' role='dimension' type='nominal' />
        <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='12' param='horz' type='layout-flow' w='99750' x='0' y='0'>
              <zone h='100000' id='9' param='horz' type='layout-flow' w='99750' x='0' y='0'>
                <zone h='100000' id='7' type='layout-basic' w='99750' x='0' y='0'>
                  <zone h='22150' id='1' is-scaled='1' param='C:\Users\ochang\Pictures\Bach.JPG' type='bitmap' w='99750' x='0' y='0' />
                  <zone h='20700' id='3' name='Weekly Scoring by Team' w='49877' x='0' y='22150' />
                  <zone h='48350' id='4' name='Weekly Scoring by Team and Contestant' w='49873' x='49877' y='22150' />
                  <zone h='26050' id='5' name='Contestant Filter' w='49877' x='0' y='42850' />
                  <zone h='29500' id='6' name='Scoring Pie' w='49873' x='49877' y='70500' />
                  <zone h='29500' id='10' name='Weekly Scoring by Episode' w='49877' x='0' y='70500' />
                  <zone h='1600' id='15' mode='checkdropdown' name='Scoring Pie' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' w='49877' x='0' y='68900' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Weekly Scoring by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017 - The V League'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='64'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017 - The V League' width='192'>
      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
      dULDMOT888/ns5/9LJs2bVpw8zNH2FpLEAR89atf5Xvf+x5BYPA++9soirjsssvYvHkzxhis
      dWh9nA2qlGLbtm18+tOf5uDBA6Rp8oJ6A4DDhw/zxBNPcMstt3DOOefwJ3/yJ5xyyildIdu5
      cyff+ta3use//e1v55prrgEEpY7HVTrHt1otvvnNb5KmLbz39Pf38+53v5tCocDjjz/Orbfe
      +gInfKESnagAAK9+9atZt24dd9xxB+Pj492d4d3vfjd9fX1o3d4ZJUQkwPuEKEhI0zF6C4ZH
      79vBnv3HTp4okFeZAkigMN5Scim1vXvYf+u3OT+f5xW5kN5Wg3RkjMlDh5mYHKcyO8PU9ATN
      aoU9zz7HBeeehQthImigvWVYDNv/6VvM/ORhVq/u5b5t96HSSnf/XsjJMcZgjCGXyy36yefz
      i46x1vLwww/zj//4j10B6vzfOd/+/fu5774fEobhovettdx8881dhcrMg+NjeOihh7jhhhvY
      s2cPSXJc+MvlMmvXrmXt2rWUy+XuWJxzbNu2jQ984APs3bv3Bc79wlDsiwnqQn6S1scLeDo7
      UmfsC8O6nWt3xnwiVXvhewv9o871OvQOrVWWvZcQLQGBcczPH8D5EXY89xg7nj3ExvXnnRw7
      gNVZhN4pRWAtPWlK8cgoD3zhq2xxnlB5ktocViw2bZECTeewZBPZShLSRsKRg3s57fzTeeLI
      AfZMp6yzjuWNhB997m94y99cz8zcMZJ0niDsXWT/d+Tiyiuv5MMfvmHRquuco1Kp8MUvfpGH
      H34YyG7sj370I2688UZgsSIppbj11ltJkrQt5IZisUSlUkFrzV133cX73/9+BgYG2sIRYm1K
      rVbjM5/5DPPz810zolzu4YYbbuDqq69mYGAArTUjIyPccccdfOUrX+kqyeTkJJ/+9Kf5yle+
      sqggZ2F4duEu1vlunetkc6AXrerGmG69wkIFevvb386b3vSml6RodxaDU089dZHid5ShMxYv
      aZYl9xqFkLSmmJzYSW8x5eHHfsrgpq285o3XnBwK4FWbpiMQeqG3Zdn27e/St/sgaVoll4uw
      kabZsCDt3cIojNYIQqgU2nkipckPlnnNq17LP913PyUTI3tq5GZHue87t1AY0DSaFYrR8a1a
      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
      UoyMjPDZz36Wubm57uef+MQnuPjii150dV4YoVn4Xsdp/nmEg44Sigi5XI6enp6fy079eQ3B
      OjuVBpQITlsIDKILrFi1mcGhcfYf2MvqTZdmtI6XvMqvEaQdBhVAiya0ikKiKTU1UbscMlWa
      Rj5P37nncMkH3surP/5htoWeAxFMasVEajmsLI/pOs+szZG7oMyImiJVhjDsZcWqlUzN7OBr
      X/tjpipPMTH9PNOzoyilEa8zoddZZrYjKFlkKLtxtVqN0dHRRYmhOI6x1jI2Nsa9997b/T4L
      Y+gvFjGBTEiazSa33HIL3nuuvvrqbuG7c45Dhw7x+c//t66gnUiV+Ju/+RsqlUqXkZrP57ni
      iit4oaOb4UTh7869/Pvd6TrOdGc+FkaDOt+v86NUxlfqmGida3f+T9M0W1wyTgZWHInX9Ays
      Z76eY9MrzmGuWqFVm0Zs9eTYASLbqfVVtIIsJGoEtAdwKAQtglUKH+eZkSbnXXctg30lvvG5
      /8au8QlKyjI+MUVrcw/nvf011HPTqCRHf34dxTDHTOUQPb2egGn+36/9KaeecjFJWkURonSE
      8w2e3PYYn/rUpxa1MumsWE8//TRHjx7tjjkMQ8477zyCIOC2225jfn5+0W7x8Y9/fNF5IBOA
      vXv38sd//Mfd895555285z3v4aKLLuLSSy/lgQce6P7Nrbd+m3379vHbv30dmzdvxnvPnj17
      +MY3vsHOnTu7xwVBwNve9jaGh4f/0+/VD3/4Qw4dOtR9/WK0Ee8911xzDaeffvoipXPO8Rd/
      8RdZlwwBhcEajYkNp29YxTVXvZrhDWcRlZaz/Zkfc+6rXnlyKEDoBa8gMeA0WK0wDgIFXluU
      z/hCRhTN1BLlCjQTy4bL38SHTjmN22/6f9j+9I85+6LTWHX2alq5FKkKzipO2Xo+p687l3P1
      PE/vv59DT9/PqsI8E1MHGBkdaTuOHhME7N27nz17D+CdRyvTtn01SgmpdRgTthmLite85gq2
      bj2P+fk6t9/+3Xa0JsM73vF7bN58CtAONC5YeDdt2szXvvaP7NixAxHPxMQkd999D+94xzv4
      5Cc/xY033si2bU8SBCEiws9+9jiPPPLoAkHq2NhZ4kopzVVXXcVHPvKRbGdSHfZpm2Xbvr60
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team and Contestant' width='192'>
      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
      1/4f3GsLY27jByAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
