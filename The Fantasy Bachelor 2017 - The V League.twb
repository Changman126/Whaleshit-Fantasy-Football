<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='TheFantasyBachelor2017-TheVLeague' path='/workbooks' revision='2.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Tableau Set Up (Vanessa Bach League)' inline='true' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vanessa Bach League' name='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\ochang\My Documents\GitHub\Whaleshit-Fantasy-Football\Vanessa Bach League.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0' name='Tableau Set Up' table='[&apos;Tableau Set Up$&apos;]' type='table'>
          <columns gridOrigin='A1:O65:no:A1:O65:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestant' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='integer' name='Grand Total' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestant]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Contestant</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O65:no:A1:O65:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
      <group caption='Action (Contestant)' hidden='true' name='[Action (Contestant)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Contestant]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\ochang\My Documents\My Tableau Repository\Datasources\Tableau Set Up (Vanessa Bach League).tde' schema='Extract' tablename='Extract' update-time='03/01/2017 05:52:58 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='64' timestamp-start='2017-03-01 17:52:58.777' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestant</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestant</remote-alias>
              <ordinal>0</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alexis&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Whitney&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>2</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1825.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.515625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>65</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.144968551196298</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.065398941888741</statistic>
                <statistic aggregation='Var' datatype='real'>102.9203869047619</statistic>
                <statistic aggregation='VarP' datatype='real'>101.312255859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>58525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>3</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1525.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.828125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.825868533599696</statistic>
                <statistic aggregation='StdevP' datatype='real'>36.537033732698866</statistic>
                <statistic aggregation='Var' datatype='real'>1356.1445932539682</statistic>
                <statistic aggregation='VarP' datatype='real'>1334.954833984375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>121775.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>4</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3050.0</statistic>
                <statistic aggregation='Avg' datatype='real'>47.65625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>39.999689978957313</statistic>
                <statistic aggregation='StdevP' datatype='real'>39.685962076501305</statistic>
                <statistic aggregation='Var' datatype='real'>1599.9751984126983</statistic>
                <statistic aggregation='VarP' datatype='real'>1574.9755859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>246150.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>5</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2595.0</statistic>
                <statistic aggregation='Avg' datatype='real'>40.546875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.357109017312141</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.032734526648049</statistic>
                <statistic aggregation='Var' datatype='real'>1710.4104662698412</statistic>
                <statistic aggregation='VarP' datatype='real'>1683.685302734375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>212975.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>6</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2135.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33.359375</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.567068462372418</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.241047205537534</statistic>
                <statistic aggregation='Var' datatype='real'>1727.8211805555557</statistic>
                <statistic aggregation='VarP' datatype='real'>1700.823974609375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>180075.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>7</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3120.0</statistic>
                <statistic aggregation='Avg' datatype='real'>48.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>50.174299371892751</statistic>
                <statistic aggregation='StdevP' datatype='real'>49.780769379349692</statistic>
                <statistic aggregation='Var' datatype='real'>2517.4603174603176</statistic>
                <statistic aggregation='VarP' datatype='real'>2478.125</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>310700.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>8</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1990.0</statistic>
                <statistic aggregation='Avg' datatype='real'>31.09375</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>105</statistic>
                <statistic aggregation='Stdev' datatype='real'>44.955610822726506</statistic>
                <statistic aggregation='StdevP' datatype='real'>44.603012352726807</statistic>
                <statistic aggregation='Var' datatype='real'>2021.0069444444443</statistic>
                <statistic aggregation='VarP' datatype='real'>1989.4287109375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>189200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>9</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1550.0</statistic>
                <statistic aggregation='Avg' datatype='real'>24.21875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>46.292880164969795</statistic>
                <statistic aggregation='StdevP' datatype='real'>45.929793146034307</statistic>
                <statistic aggregation='Var' datatype='real'>2143.030753968254</statistic>
                <statistic aggregation='VarP' datatype='real'>2109.5458984375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>172550.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>10</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>930.0</statistic>
                <statistic aggregation='Avg' datatype='real'>14.53125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.468277701823546</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.143031286446309</statistic>
                <statistic aggregation='Var' datatype='real'>1719.6180555555557</statistic>
                <statistic aggregation='VarP' datatype='real'>1692.7490234375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>121850.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>11</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>18720.0</statistic>
                <statistic aggregation='Avg' datatype='real'>292.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>730</statistic>
                <statistic aggregation='Stdev' datatype='real'>230.19143172171991</statistic>
                <statistic aggregation='StdevP' datatype='real'>228.38598085259088</statistic>
                <statistic aggregation='Var' datatype='real'>52988.095238095237</statistic>
                <statistic aggregation='VarP' datatype='real'>52160.15625</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8813850.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>64.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>64.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>13</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Eliminated&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Eliminated&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>14</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Allie&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vanessa&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>15</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.32899' measure-ordering='alphabetic' measure-percentage='0.67101' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Contestant:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Danielle M.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alexis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jasmine B.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raven&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanessa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lauren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Corinne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kristina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hailey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danielle L.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astrid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whitney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lacey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jaimi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Briana&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017 - The V League' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017 - The V League' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Contestant]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
              <wedge-size column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
              <lod column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='8' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='9' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk] + [federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]))))))))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep9]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep9]' derivation='Sum' name='[sum:Ep9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='ASC' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk] / ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk] / [federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017 - The V League'>
      <style />
      <size maxheight='2000' maxwidth='1200' minheight='2000' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
      </datasources>
      <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
        <column datatype='string' name='[Team]' role='dimension' type='nominal' />
        <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='12' param='horz' type='layout-flow' w='99667' x='0' y='0'>
              <zone h='100000' id='9' param='horz' type='layout-flow' w='99667' x='0' y='0'>
                <zone h='100000' id='7' type='layout-basic' w='99667' x='0' y='0'>
                  <zone h='22150' id='1' is-centered='0' is-scaled='1' param='C:\Users\ochang\Pictures\Bach.JPG' type='bitmap' w='99667' x='0' y='0' />
                  <zone h='20700' id='3' name='Weekly Scoring by Team' w='49834' x='0' y='22150' />
                  <zone h='48350' id='4' name='Weekly Scoring by Team and Contestant' w='49833' x='49834' y='22150' />
                  <zone h='26050' id='5' name='Contestant Filter' w='49834' x='0' y='42850' />
                  <zone h='29500' id='6' name='Scoring Pie' w='49833' x='49834' y='70500' />
                  <zone h='29500' id='10' name='Weekly Scoring by Episode' w='49834' x='0' y='70500' />
                  <zone h='1600' id='15' mode='checkdropdown' name='Scoring Pie' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' w='49834' x='0' y='68900' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Weekly Scoring by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017 - The V League'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAADACAYAAAC02WUGAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAATjUlEQVR4nO2dfVhUZd7HP5uzFyqURqmJK49ycVFZl9vqUeeJHF4cTFxUMiFkjcRV8l17
      UeYBY9DHWDJjhax0VsGoaEOeJKN0dWJgFBtzYl1Kc0lhF0VNC6GghnV8zvPHDC8Kw8uZkdM+
      zve6uJRzn/s+3/vLfe6Z85vv/H6/EEVR5BbGbXITkBtuAeQmIDfcAshNQG64BZCbgNxQdHeC
      2WzuCx6y4RfuN0K3ONwCyE1AbrgFkN71EnkJgQSuKqTxhha9JhpdlVO8+gzSBbikx+S7njUY
      MNyogJOo0kW7dsAuIFmAS/oSBiqDUYeA3sUK+CXku3S8riBRgEaOHB1AoFKB18OT+KnMhNXR
      qdZz7NfGEKQUEAKnsCirnHrAWqlj6To99baTqNQtZZ3e9lvrCrBWkrcygkBBQFAGMSvpYy5J
      I+wQ0gRo1KO/FkKIFzBUiVCjp8SBAufzdlLx6BYOmMyYS/eygq1sNYEiIIHn/fJJ31+PtTKX
      dxSrSVUPvr7z4VwKR6VRbDZjPvwxry8Yy0BJhB2j27fCnaFRr+fHh1PwAsAPdXANuhIravWN
      w12ipORD8rM+pP2i9utfBUo//BZsQr1uMZF7Q8nICuhIRlATkL6C6JMTUU4MYcbsqYyQQrgL
      SBCgEYPBTEXZdISMtqNeM45iVQfeMKAFiyWYjabNTOv0SnXU1HnjO8CCpbNmr2A2Fn3M6WOl
      /O0LEy/N+wvRBZnM8Oo9a0fo/S3QaEB/NpZcsxlzy48pkxCznqMdbgNflMpKXnvxEy42A1hp
      qj3CftMlbPd9NtbVWWQ93Z9tqS37QTtUHaH4tJWR/zmdxxesJH4iXK6TMk3H6LUAVlMZP0TO
      YUz7g4pAosL+jr6jAoxZupm532XxRJCAIAQxM7GQuoEDqdensoU4FgQoUAQksG5MPit1lddv
      pgN+pHTjbEIFAeGRx3n77qeY7dvrOXYJ99Og3ATkhlsAuQnIjVtegG7fB/z44499wUM23PIr
      wC2A3ATkhlsAuQnIDScEuMzulWGErS2iyXV8OkE1OXFaDDdpdOkCXC7h2K+SWIUR481V4KZC
      sgCXSw4xYMJkQlRg+DdWQKIATRw91h/lRAWekyZgMX3W7jG2mpzkjezIWE5MeCgqVRhRaQYa
      7K3WWj1p88MJValQhUWxcF5G6/JuOJ7DmqgwVKpQimo7j7FdNr7EwogwVPb+a3afdhyP7AGk
      CdBkwHBNhcoTGCLwm7MlHGrP4soZ6vwSyCwsxnjwVaacKqEcgFP8aU0ety/ZxT6jEWNRKg+J
      dmmsJt7ccztLdu3DaCzm08w9XO7k0gNHzGBtXhFGoxFj0VYEUx6fSpqEDZJigk0GAz8pNXgC
      MJrgyWfZdchKSIh9uCEqoiLHMgyA+7h3tL1j9aecC03ixUm2FjwG4tnP3vZXI/sMRRQYsuwH
      QlATRcgN1/YQT/PWs2sxVX5PMwCjiK+GyaORBAkCNGE0/pUvTY+jerXtqGe4GWuIsusBr12D
      fv06b7NYGBKXzb6F/l0McJa8rFJ+nfQeWj9PFIBBG8c/ej2HNvT+FmgyYjgXhc5otC1DoxFj
      8SZUfzVg7u5mHPUgXgfeoLCmGbDSVHWSMy3757gJ3PNBBm+daMIKVO438FWHAZr51y+GM3KY
      BwprE+crCinpeFKv0PuY4GcmGmc8xn3tDyqUPBbyNYbuFFAoWbrqHgqfDkelCmf+G5/zU0ub
      ZzjJyf6UJkYSqlKRdRLu7DCAP1GR/2JzZCiqqXNIKuqPn19vZ3A9uo0JuvZx+CJ/r/gXw+/1
      5Q4PaP7mIzb8Vw1PZi+5XtA+hKRNUDquYNat5+2T52mygsewScQmr5Nt8tDnK+DnB/fDkNwE
      5Ib7gxG5CcgNtwByE5AbbgHkJiA3bopP8GZCr9Ggd+F4feoTrNJpemag1Gsk0+otfpY+QdTp
      rh2vC9wEn2A9Zel2X6AQyJR52zhBFbpogWidHl20gCAICBrbQtZrNOhb/YD25d1uBVjP7Ucb
      E4RSsPkM/3DIidl2BlEKftgjLlu2R/xBFEVRPCNun5soHrxqb/vnTjF+daF4+aooiqJFrP+q
      WjxvbzqzPVHcfub6oQ4mPi0mJj8lJhdVi5a2g/b/nBAzH5srvlJ2wdZmqRcLVieKByWR7hyS
      VoDNJ/jwdT5BfYtT0jeYR77J4In5K0jJzOdk/+EM73K0Orxnb2Hjb0fhcWNT1WFq1Kk8+/A9
      tjaPQQzqcJJzuAk+QT8W5B1g+vEjlH9RQe7quRxLe5+VYxyN58e4cYM7b7JaQXFzQxau9wle
      qsB4/FtufzCE6U8uJjHiTi61GnxrqCj/FivQ3Nzc/bX8AlC8n0nBP+wxxNojlLvYhu96n+BA
      OJ29lOmPCAhCKMu/nsHiR2yn+akjuW3XLJSCkqmbPuv+Ygo1mheGU/BUEIIQxBNaI3UDesu4
      a7gfh+UmIDfcAshNQG7c8gK4fYJyE5AbbgHkJiA33ALITUBuSHrUMmhVaFuNewo8/QJZsk7L
      TP8+/rDZBZC4AkJY3+oQ2ceuJd4UZHRuamrB9aL9fOCCW8CDYZNmoLqzscvocMh6I+tvdDz9
      DOC0ANam8xx99RU+fyAYm1GrmhxtDtUNJjLmhxMal0M1NjNTTrW901fvsDzG7hUMDWd+hqnV
      R1idk8zGHRmEqlSERaVhaOi+jzOQeNMa0KoMaAEGjGByfAqbY9r51Kyn2ZVawagVb3Ng/F0o
      4Hon150CCRmRjPHxRGFt4uiW9XxwVkncSIArnKmbQLHxIKe2LeLdcggJ6a6PdEgUIIT1xvU2
      D1/z91SadDyf9A/S08IZBHDFwm+SXyZyhIPhB1zhcLKWRLtVBiBkPDASYAiqqEgA7rt3dA/7
      SIfze4DHHQQEPU/0L012Nygw5EF+7WjywKFMHc1PZlJYbNtI34wf1e1lpPTpCVywCVppOvEW
      uysH4SC02eH85ubb8Rk1GA+a+b6ylKJjXb1+SO3TMzi/B6DA02c80Zp1/KaHlwyOH8+K+eG8
      1tSPYZNiecLPm29d3qdncLvE5CYgN9wCyE1AbtzyArg/GJGbgNxwCyA3AbnhFkBuAnJD0rOA
      XiOgaTXrKfD0V7FqQxqzA/79YoKSTFIHE9sblSzihbKXxKj4d8RvuuwzXkxs7XRQTEzsaHW6
      fty+gUtigvc8HEmwd9cxQXW6mXS181dzNVwQE6zlSEY65rFqbN9gq0Kn0VFVX0Z6TBDKaB1V
      tEuzqdcgCBr0eo3NLyhEo6vSoxEENHrbv4IgAJcwbJjHlEDb74ERK8mrbHEj6tEs3kTuWnu7
      MogF2bY0XPWFq1hV2D4r2Xlyl66nzNE3+qQsm4OJ48Xx4+0/k2eJz+V+KTa2tp4Rtz/3nJi4
      ZIm4/ehl8Wprn6h2HsGe3AI/iJVffCXW282DlgtvicuSDW39I1aI2z/5Wmy8KopXLxeJz8Vv
      F8+IoihePSymzs0UT7QMcyJTTMhs/a0DJK4ANektDrGDb7JwxAeseO7DtmxwdRaEpCwSJt7t
      xPfy+iNWZrNseqB9BWzBVFlJq0nsgZkkhPrjqQDF3fcTMNR+XBHIommn2G3/k5veP0XgHIce
      PVfEBAdxX2gSsb8sozUL+dCxjPuVk68INblsLh5H6t5Sux0vnZ5uIT6zw6nbmcd5axl/Oa9E
      7eP4XNfEBCuyyTs1uIcxQTtOllPeDFibaW69P09SbjsIFgu3+fgy3EOBtamW4wV6TvR0bK9w
      5vrp2fXK+3wfPpsu5i91hdo2q5YhPEdM5HfaDQhd9mkPJZGqHTwTJNDUbyzPvptNrC8oI1Xs
      eCYIoakfZvNHzGmex1TlRa55+vPoWjX+/G8Px1egXKDm9dhqnn6um/STvd4B/y1wVby8L1F8
      sovNrwX/D98K69EIj/B4fgDrljre/FrgDojITUBu3PICuH2CchOQG24B5CYgN9wCyE1AbkgU
      wEqtPs2e1CyU8Jg15H7ZRKtByqUUby4kCdB0KI3lebezaGcRRuMBCjLm4H1FYtp3gxZVNwbC
      6hxtm8PMxZDwNHiRve828Ps/pjBpkO2Ip88kInwAKX/7kPUYZfQP9n4FWL/kywEhhAxy1F7L
      JxnLiQpToVKFMS/rWGvKTYNWi8F6mt1roghT2dNkGrTEtfx5W9tUxKQe4DLV5MSpeCrHQM5T
      KlsOQftqaZ+XMCxiOW8cb3ENGtCu+iPvvrCQiDCbp3BJruOcg71fAWfPctZrlD2VXie4coa6
      Cc+wtWgswzjFtkXv8hkT7Gnx6ilJ20y/Ka9Q9LJvx6/KfprHh/+RStHLD/BdVS0DGUF8rpHg
      HC0lweuJb3XNXWR37hdMeamQpGEeWJtOsGPNdo69vpYJABcuYJmdxHtaPzwa9qN94RBn4/zp
      LONe7wUYOZKRjU00QeciOMolaFOHwTNf5ZmHHCyfcSH4ZzzPU6fGk7I+1XEk5/IhDu3bwxv7
      9rQ7OAqPapgwGrg/nPgge5a1u+7Ff8gFh9PpvQCKB3nwp5cxNEQQ4eg2cIjRPORo8gCek0nZ
      XUBVeRl/WJjE7Lc3Ed6ZypafsExOofhFtdPJ0CS8CtzDzLmD2PnMqxz9xv6d3vNHKTp01kkq
      QLWJ0qprjJg4lXnj29cTOcuXf/uu7TvHIycy4WsdL5d8Y8sqaW3i/FE9UqyDkl4GPScnsTX2
      B96YH45KNZU5zxZQd6e3lKGux4CfKNsUS4RKxZ/vimWW3QY7OngGt70TQ6gqlMgtnwP3sSgt
      irpt8wlXqVCFP0FK0RUGSChC5PYJyk1AbrgFkJuA3LjlBXCHxeUmIDfcAshNQG64BZCbgNyQ
      HBM8t1/LvCmBCIKSoFkrya7oy6yCLoSUT99/MCSLj859RSy7YBFF8arYeK5M3GP4p5ShxDPb
      o8SoGzOs9SEkCFArvhm/TNxzxfVk5ICEmGAFFQPV3FghtwX15TpWRgS2evt05S3esc79g1W6
      6DbbbZWO51NeJ33hLITACLT6lr6OfYEtt2NMkNKWv3BRFuUdipc6Ru8FqKmhxsuLTp03jXrS
      N5xAteUAJrOJA1tUnNiQjr5le7BWokt6B+9n/4fD+Ql0Vhqg7us6/Jdvp+xPU/lKb25rqD2H
      ZVoqe0vNmIrW4n24hBqA83nsrHiULQdMmM2l7F0BW7eaejyd3keUfH3xbbTZYjuIYC6hauoy
      0v1tcSyF/xyWTc0n1wzqYGz+wQ1ZzOnCQjc0JJY5D90DjLleILsvEIC77ydgaC0Al0pK+DA/
      iw+vL2xMFcpOBb4REmKCYxn7Yxr6+kgie+WLwzX+wRtgsVgI3mhic+eFjbuFhJdBH2bHDWbb
      0gyOXGzL81dYUgNCMH4HXqPgdBNWrDSdLuC1A34E99w/12v4KpVUvvYin9gKG9u8y/tNPa5R
      Lul9gFdwKjviGsh6IghBeITpS/9Mnbc3eKnRpDyAcfVUW87A1UYeSNGgdmGl6A4Ys5TNc7+z
      cxEImplIYd3AHtcodz8Oy01AbrgFkJuA3LjlBXD7BOUmIDfcAshNQG64BZCbgNyQJIBBazcs
      qVSEhsewJudzvnOm8mnvLt5mqnJBTWKn8wnue28DU85uZmHaIacLMFfnxLWbXN/A6VvA444A
      pqVs4/cNOeQ7yX10fC658RKrp0qEi/aAQUwLH84xs82k01VtYIN2FX9894U2m+2SXE7bG6tz
      4lqzTh7PWWPzGoaGE5NShIMyxE7DZZugop+CxkZb8K/r2sAXuGBRk/TePozFu1nlbaIzf9We
      25ewa58RY3EhmZM+JXOPa5KndeDtqoGs16x4edkiH13XBr6f8Pgge7zuLu71H0JnLj5D1nxa
      SxADhKghyvWeWhcJ0MD+fReYsHwIrqoNHJdtpMsSxC6CC/IHVLF/w2J2DoonejS4qjbwBxlv
      ccKeOrL5+0r2G5wsMOwATucTVHj6MD56DTueHG+3ztpqAy+MDOWba574qVcR4kePv/XbgmT/
      UhIj/8T3zQo8fcYQ9vQ6pnVLS4uqJBijPX2tQauiJLjrbLZun6DcBOSGWwC5CciNW14A9wcj
      chOQG24B5CYgN9wCyE1AbkgSQK+xF04VBJRBs1ip+4xv+yomqNcQ3Vq7twpdtHN1iJ3OJVa6
      9yUerUljXmqJ0wWYq3TR7SbXN3A+JjjoPn67cReL63XkOcndLyGf/ISeWJtcBxftAYOJiPDB
      ZLI5cy4ZNthttAJCYAQr8ypbY4J6zWI25a5ts9kuyKYlTWB7z2C5biURdk/grMRCzv3sY4KK
      djHBX81m3fvFtixwxTuYeCSXw61n1nLOMs2WJc5UxFrvw5TUdBwv/46VvFdqxmw6wPaHD7Mp
      v6e2p17ydtVAVmtbTLC/WEn2slWUnWqwxwT9SKiCYD+AB5iZEIot2nU39wcMpbaT8fSbY9Bv
      bndAPQ1iXZ+T00UC1FNUdB7ls0OBGnI3FzMudS9p/raYoF4TTW+3hwV5ZpYGuIZdV3BBTPA0
      H62bz7bBCcT6AViw3OaD73BbTLD2eAH6HicCbMP76dlUtMQEG07xkZRBegCn8wkqPEcw8XfJ
      vL1got06G0DsnGbmTVVy8Zon/o+uRe3f+5jg+oBinpn6Og3NCjxHPEj4iv/mt93S0iDo1Zjt
      6Wv1GgG9uutstu7HYbkJyA23AHITkBu3vABun6DcBOSGWwC5CciN/wNbHAhf0q9viwAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017 - The V League' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team' width='192'>
      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
      OeYTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team and Contestant' width='192'>
      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
      NvtDFP8JEC8bY7nz6bAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
