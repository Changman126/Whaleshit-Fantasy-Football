<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='TheFantasyBachelor2017-TheVLeague' path='/workbooks' revision='2.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Tableau Set Up (Vanessa Bach League)' inline='true' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vanessa Bach League' name='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\ochang\My Documents\GitHub\Whaleshit-Fantasy-Football\Vanessa Bach League.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0' name='Tableau Set Up' table='[&apos;Tableau Set Up$&apos;]' type='table'>
          <columns gridOrigin='A1:O65:no:A1:O65:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestant' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='integer' name='Grand Total' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestant]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Contestant</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O65:no:A1:O65:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
      <group caption='Action (Contestant)' hidden='true' name='[Action (Contestant)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Contestant]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\ochang\My Documents\My Tableau Repository\Datasources\Tableau Set Up (Vanessa Bach League).tde' schema='Extract' tablename='Extract' update-time='02/21/2017 07:10:08 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='64' timestamp-start='2017-02-21 19:10:08.743' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestant</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestant</remote-alias>
              <ordinal>0</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alexis&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Whitney&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>2</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1825.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.515625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>65</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.144968551196298</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.065398941888741</statistic>
                <statistic aggregation='Var' datatype='real'>102.9203869047619</statistic>
                <statistic aggregation='VarP' datatype='real'>101.312255859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>58525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>3</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1525.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.828125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.825868533599696</statistic>
                <statistic aggregation='StdevP' datatype='real'>36.537033732698866</statistic>
                <statistic aggregation='Var' datatype='real'>1356.1445932539682</statistic>
                <statistic aggregation='VarP' datatype='real'>1334.954833984375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>121775.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>4</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3050.0</statistic>
                <statistic aggregation='Avg' datatype='real'>47.65625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>39.999689978957313</statistic>
                <statistic aggregation='StdevP' datatype='real'>39.685962076501305</statistic>
                <statistic aggregation='Var' datatype='real'>1599.9751984126983</statistic>
                <statistic aggregation='VarP' datatype='real'>1574.9755859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>246150.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>5</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2595.0</statistic>
                <statistic aggregation='Avg' datatype='real'>40.546875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.357109017312141</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.032734526648049</statistic>
                <statistic aggregation='Var' datatype='real'>1710.4104662698412</statistic>
                <statistic aggregation='VarP' datatype='real'>1683.685302734375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>212975.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>6</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2135.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33.359375</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.567068462372418</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.241047205537534</statistic>
                <statistic aggregation='Var' datatype='real'>1727.8211805555557</statistic>
                <statistic aggregation='VarP' datatype='real'>1700.823974609375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>180075.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>7</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3120.0</statistic>
                <statistic aggregation='Avg' datatype='real'>48.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>50.174299371892751</statistic>
                <statistic aggregation='StdevP' datatype='real'>49.780769379349692</statistic>
                <statistic aggregation='Var' datatype='real'>2517.4603174603176</statistic>
                <statistic aggregation='VarP' datatype='real'>2478.125</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>310700.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>8</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1990.0</statistic>
                <statistic aggregation='Avg' datatype='real'>31.09375</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>105</statistic>
                <statistic aggregation='Stdev' datatype='real'>44.955610822726506</statistic>
                <statistic aggregation='StdevP' datatype='real'>44.603012352726807</statistic>
                <statistic aggregation='Var' datatype='real'>2021.0069444444443</statistic>
                <statistic aggregation='VarP' datatype='real'>1989.4287109375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>189200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>9</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1515.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.671875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>45.217658682709697</statistic>
                <statistic aggregation='StdevP' datatype='real'>44.863004903643883</statistic>
                <statistic aggregation='Var' datatype='real'>2044.6366567460318</statistic>
                <statistic aggregation='VarP' datatype='real'>2012.689208984375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>164675.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>10</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>11</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>17755.0</statistic>
                <statistic aggregation='Avg' datatype='real'>277.421875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>705</statistic>
                <statistic aggregation='Stdev' datatype='real'>206.84706448320088</statistic>
                <statistic aggregation='StdevP' datatype='real'>205.22470951735897</statistic>
                <statistic aggregation='Var' datatype='real'>42785.708085317463</statistic>
                <statistic aggregation='VarP' datatype='real'>42117.181396484375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7621125.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>64.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>64.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>13</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Eliminated&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Eliminated&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>14</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Allie&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vanessa&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>15</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.32899' measure-ordering='alphabetic' measure-percentage='0.67101' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Contestant:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Danielle M.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alexis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jasmine B.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raven&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanessa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lauren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Corinne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kristina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hailey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danielle L.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astrid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whitney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lacey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jaimi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Briana&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017 - The V League' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017 - The V League' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Contestant]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
              <wedge-size column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
              <lod column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='8' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk] + [federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk])))))))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep7]' derivation='Sum' name='[sum:Ep7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep8]' derivation='Sum' name='[sum:Ep8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='ASC' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk] / ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk] / [federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017 - The V League'>
      <style />
      <size maxheight='2000' maxwidth='1200' minheight='2000' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
      </datasources>
      <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
        <column datatype='string' name='[Team]' role='dimension' type='nominal' />
        <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='12' param='horz' type='layout-flow' w='99667' x='0' y='0'>
              <zone h='100000' id='9' param='horz' type='layout-flow' w='99667' x='0' y='0'>
                <zone h='100000' id='7' type='layout-basic' w='99667' x='0' y='0'>
                  <zone h='22150' id='1' is-centered='0' is-scaled='1' param='C:\Users\ochang\Pictures\Bach.JPG' type='bitmap' w='99667' x='0' y='0' />
                  <zone h='20700' id='3' name='Weekly Scoring by Team' w='49834' x='0' y='22150' />
                  <zone h='48350' id='4' name='Weekly Scoring by Team and Contestant' w='49833' x='49834' y='22150' />
                  <zone h='26050' id='5' name='Contestant Filter' w='49834' x='0' y='42850' />
                  <zone h='29500' id='6' name='Scoring Pie' w='49833' x='49834' y='70500' />
                  <zone h='29500' id='10' name='Weekly Scoring by Episode' w='49834' x='0' y='70500' />
                  <zone h='1600' id='15' mode='checkdropdown' name='Scoring Pie' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' w='49834' x='0' y='68900' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Weekly Scoring by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017 - The V League'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='64'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017 - The V League' width='192'>
      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
      MUUxHhBJ1gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team' width='192'>
      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
      B217ABXdiXc0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team and Contestant' width='192'>
      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
      NPZg+xtib1EAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
