<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1223.0056                               -->
<workbook source-build='10.1.3 (10100.16.1223.0056)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Tableau Set Up (Vanessa Bach League)' inline='true' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vanessa Bach League' name='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\ochang\My Documents\GitHub\Whaleshit-Fantasy-Football\Vanessa Bach League.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0' name='Tableau Set Up' table='[&apos;Tableau Set Up$&apos;]' type='table'>
          <columns gridOrigin='A1:O65:no:A1:O65:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestant' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='integer' name='Grand Total' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestant]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Contestant</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O65:no:A1:O65:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
      <group caption='Action (Contestant)' hidden='true' name='[Action (Contestant)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Contestant]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\ochang\My Documents\My Tableau Repository\Datasources\Tableau Set Up (Vanessa Bach League).tde' schema='Extract' tablename='Extract' update-time='01/31/2017 10:49:02 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='64' timestamp-start='2017-01-31 22:49:02.537' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestant</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestant</remote-alias>
              <ordinal>0</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alexis&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Whitney&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>2</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1825.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.515625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>65</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.144968551196298</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.065398941888741</statistic>
                <statistic aggregation='Var' datatype='real'>102.9203869047619</statistic>
                <statistic aggregation='VarP' datatype='real'>101.312255859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>58525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>3</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1525.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.828125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.825868533599696</statistic>
                <statistic aggregation='StdevP' datatype='real'>36.537033732698866</statistic>
                <statistic aggregation='Var' datatype='real'>1356.1445932539682</statistic>
                <statistic aggregation='VarP' datatype='real'>1334.954833984375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>121775.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>4</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3050.0</statistic>
                <statistic aggregation='Avg' datatype='real'>47.65625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>39.999689978957313</statistic>
                <statistic aggregation='StdevP' datatype='real'>39.685962076501305</statistic>
                <statistic aggregation='Var' datatype='real'>1599.9751984126983</statistic>
                <statistic aggregation='VarP' datatype='real'>1574.9755859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>246150.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>5</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2595.0</statistic>
                <statistic aggregation='Avg' datatype='real'>40.546875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.357109017312141</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.032734526648049</statistic>
                <statistic aggregation='Var' datatype='real'>1710.4104662698412</statistic>
                <statistic aggregation='VarP' datatype='real'>1683.685302734375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>212975.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>6</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2085.0</statistic>
                <statistic aggregation='Avg' datatype='real'>32.578125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.718940423737571</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.39172799587346</statistic>
                <statistic aggregation='Var' datatype='real'>1740.4699900793651</statistic>
                <statistic aggregation='VarP' datatype='real'>1713.275146484375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>177575.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>7</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>8</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>9</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>10</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>11</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11080.0</statistic>
                <statistic aggregation='Avg' datatype='real'>173.125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>505</statistic>
                <statistic aggregation='Stdev' datatype='real'>117.7113094861848</statistic>
                <statistic aggregation='StdevP' datatype='real'>116.78806927507621</statistic>
                <statistic aggregation='Var' datatype='real'>13855.952380952382</statistic>
                <statistic aggregation='VarP' datatype='real'>13639.453125</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2791150.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>64.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>64.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>13</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Eliminated&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>14</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Allie&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vanessa&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>15</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.32899' measure-ordering='alphabetic' measure-percentage='0.67101' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Contestant:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Danielle M.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alexis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jasmine B.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raven&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanessa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lauren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Corinne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kristina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hailey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danielle L.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astrid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whitney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lacey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jaimi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Briana&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017 - The V League' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017 - The V League' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Contestant]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
              <wedge-size column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
              <lod column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk] + [federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]))))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='ASC' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk] / ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk] / [federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017 - The V League'>
      <style />
      <size maxheight='2000' maxwidth='1200' minheight='2000' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
      </datasources>
      <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
        <column datatype='string' name='[Team]' role='dimension' type='nominal' />
        <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='12' param='horz' type='layout-flow' w='99667' x='0' y='0'>
              <zone h='100000' id='9' param='horz' type='layout-flow' w='99667' x='0' y='0'>
                <zone h='100000' id='7' type='layout-basic' w='99667' x='0' y='0'>
                  <zone h='22150' id='1' is-centered='0' is-scaled='1' param='C:\Users\ochang\Pictures\Bach.JPG' type='bitmap' w='99667' x='0' y='0' />
                  <zone h='20700' id='3' name='Weekly Scoring by Team' w='49834' x='0' y='22150' />
                  <zone h='48350' id='4' name='Weekly Scoring by Team and Contestant' w='49833' x='49834' y='22150' />
                  <zone h='26050' id='5' name='Contestant Filter' w='49834' x='0' y='42850' />
                  <zone h='29500' id='6' name='Scoring Pie' w='49833' x='49834' y='70500' />
                  <zone h='29500' id='10' name='Weekly Scoring by Episode' w='49834' x='0' y='70500' />
                  <zone h='1600' id='15' mode='checkdropdown' name='Scoring Pie' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' w='49834' x='0' y='68900' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Weekly Scoring by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017 - The V League'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='64'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017 - The V League' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team and Contestant' width='192'>
      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
      H8L+f1fWrnna8qNGAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
