<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1223.0056                               -->
<workbook source-build='10.1.3 (10100.16.1223.0056)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Tableau Set Up (Vanessa Bach League)' inline='true' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vanessa Bach League' name='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\ochang\My Documents\GitHub\Whaleshit-Fantasy-Football\Vanessa Bach League.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0' name='Tableau Set Up' table='[&apos;Tableau Set Up$&apos;]' type='table'>
          <columns gridOrigin='A1:O65:no:A1:O65:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestant' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='integer' name='Grand Total' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestant]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Contestant</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O65:no:A1:O65:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
      <group caption='Action (Contestant)' hidden='true' name='[Action (Contestant)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Contestant]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\ochang\My Documents\My Tableau Repository\Datasources\Tableau Set Up (Vanessa Bach League).tde' schema='Extract' tablename='Extract' update-time='01/28/2017 02:29:39 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='64' timestamp-start='2017-01-28 02:29:39.609' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestant</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestant</remote-alias>
              <ordinal>0</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alexis&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Whitney&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>2</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1825.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.515625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>65</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.144968551196298</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.065398941888741</statistic>
                <statistic aggregation='Var' datatype='real'>102.9203869047619</statistic>
                <statistic aggregation='VarP' datatype='real'>101.312255859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>58525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>3</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1525.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.828125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.825868533599696</statistic>
                <statistic aggregation='StdevP' datatype='real'>36.537033732698866</statistic>
                <statistic aggregation='Var' datatype='real'>1356.1445932539682</statistic>
                <statistic aggregation='VarP' datatype='real'>1334.954833984375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>121775.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>4</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3050.0</statistic>
                <statistic aggregation='Avg' datatype='real'>47.65625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>39.999689978957313</statistic>
                <statistic aggregation='StdevP' datatype='real'>39.685962076501305</statistic>
                <statistic aggregation='Var' datatype='real'>1599.9751984126983</statistic>
                <statistic aggregation='VarP' datatype='real'>1574.9755859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>246150.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>5</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2595.0</statistic>
                <statistic aggregation='Avg' datatype='real'>40.546875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.357109017312141</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.032734526648049</statistic>
                <statistic aggregation='Var' datatype='real'>1710.4104662698412</statistic>
                <statistic aggregation='VarP' datatype='real'>1683.685302734375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>212975.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>6</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>7</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>8</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>9</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>10</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>11</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>8995.0</statistic>
                <statistic aggregation='Avg' datatype='real'>140.546875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>335</statistic>
                <statistic aggregation='Stdev' datatype='real'>87.831536023447157</statistic>
                <statistic aggregation='StdevP' datatype='real'>87.142650595069554</statistic>
                <statistic aggregation='Var' datatype='real'>7714.3787202380954</statistic>
                <statistic aggregation='VarP' datatype='real'>7593.841552734375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1750225.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>64.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>64.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>13</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Eliminated&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>14</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Allie&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vanessa&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>15</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.32899' measure-ordering='alphabetic' measure-percentage='0.67101' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Contestant:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Danielle M.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alexis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jasmine B.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raven&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanessa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lauren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Corinne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kristina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hailey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danielle L.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astrid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whitney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lacey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jaimi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Briana&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017 - The V League' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017 - The V League' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Contestant]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
              <wedge-size column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
              <lod column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk] + [federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk])))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='ASC' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk] / ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk] / [federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017 - The V League'>
      <style />
      <size maxheight='2000' maxwidth='1200' minheight='2000' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
      </datasources>
      <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
        <column datatype='string' name='[Team]' role='dimension' type='nominal' />
        <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='12' param='horz' type='layout-flow' w='99667' x='0' y='0'>
              <zone h='100000' id='9' param='horz' type='layout-flow' w='99667' x='0' y='0'>
                <zone h='100000' id='7' type='layout-basic' w='99667' x='0' y='0'>
                  <zone h='22150' id='1' is-centered='0' is-scaled='1' param='C:\Users\ochang\Pictures\Bach.JPG' type='bitmap' w='99667' x='0' y='0' />
                  <zone h='20700' id='3' name='Weekly Scoring by Team' w='49834' x='0' y='22150' />
                  <zone h='48350' id='4' name='Weekly Scoring by Team and Contestant' w='49833' x='49834' y='22150' />
                  <zone h='26050' id='5' name='Contestant Filter' w='49834' x='0' y='42850' />
                  <zone h='29500' id='6' name='Scoring Pie' w='49833' x='49834' y='70500' />
                  <zone h='29500' id='10' name='Weekly Scoring by Episode' w='49834' x='0' y='70500' />
                  <zone h='1600' id='15' mode='checkdropdown' name='Scoring Pie' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' w='49834' x='0' y='68900' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Weekly Scoring by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017 - The V League'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='64'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAQHklEQVR4nO3d649c5X3A8e9zztxvOzt78WXXXhvHNphrMNgYKDSJA4RUjRpUhfQF71pV
      qtT/oFXftGoiRa3UqlKV0FTQBIoalKQUShElkIaLjYmNvTbGd3vXe7/P7syZc3n6YrG57Zrd
      9eycM/v8Pm9Wwp7Z3+Lz3XnmmTNnlNZaI4SBlFLKCnsIIcIkAQijSQDCaBKAMJoEIIwmAQij
      SQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoE
      IIwWW+wPLly4wNzcXCNnEaLhlFwWRZhKLosijCcBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAw
      mgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJ
      AMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjLbo5dHF2qS9Kroyia5MoGuz6MoE1GbRc2N400l8
      vQG7UMDKZlCJBFY+T3z9+rDHXjUSgCGC8jD+pXfwzv6KYPoyuBW0X/v4a22Oan871ZHNWKkU
      Kh6HmI1KJom1tZPY/iWy9+4j1tER9o9SV/L5AGuUrs0RzAzgDxzBO/cGft+74M6B7wIL/5NX
      +jup9i3y2962UfE4sY4OMvvuIbnrJuJdXVi5HEqp1ftBVpFSSkkAa4wOPIKxM7gn/hP36H9A
      rbzk214zgM9QySSp224l99Wvkty5AyuTWenIoZEA1phgZhDvgxdxT79CMHwCAm9Zt19OAFfY
      xSLpu+8i++ADJLZuRdn2sm4fJglgDdBagzuLd/Ftam//M8HkhfmlzgqsJAAAbBu7VCL/8EPk
      v/koQFMsiySAJqd1QDB+Fve9p3FP/PKj9f3KrTiAT0js2EHxO39IcseO+SfSESYBNDHtVfGH
      T+K89jcEw711uc96BAAQ7+4m/81Hyf7O/ahYdDca5UPympT2qnjnf4PzxvfrdvDXk9vXx+Sz
      /87Mf78c9ihfKLp5igVpt4J7/OfUDjyJLg+FPc6igqkppp7/Oc74LMXf/wbxYj7skRYkjwBN
      RHs13OO/wPn136HLgyy2nx8FGoVDjpFjI4y/dRzfub7nJ6tFAmgi/tBRagd/tOJdnkbRKLxU
      CafQQ+Arxn9zjOkjp8Mea0ESQJMIJi5QO/BD9Mxg2KNc08cH/2a0Nb8L5Fcchl8+iDM6FfJ0
      nycBRJzWmmBuHOfgj/AvvBn2ONekUbjpNqotWwhiGfjEawHuZJlLT71MpX+UKG08SgBR59dw
      jzyDd/JF0EHY0yzq49/8W9Cx9KcO/iuqA2OMvvZbvOnoLOEkgIgLZgZxjz0PnhP2KIv61LIn
      llr8Lwaa8smLlE9eRPvRiFkCiDj3vacjvd2pUXjJIk5+8/yy5wv4cw4TB07gV6IRtAQQYX7/
      IdwPXwp7jEVdXfMXtxHEMwsuexYyd26Q6aNnV3m6pZEAIkrXZnGP/xKcpZ/O3EgahR/P4RR6
      5pc9yzz5bfytXrzZ6ipNt3QSQET5g8fw+g6C9sMe5XOuHPy1/Ca0fY01/zU4QxNMvvtBnSdb
      PgkggrTn4PcdRE/1hT3K52gUfiKHk9+Elyou+zf/1fvxfMonL4X+XEACiCBdHsa7dCBy257z
      B38ep7AFP12C6zyX0hmZonJxuE7TrYwEEDFaa4KZAYKxaJ06cHXNn+/GT7bU5T69mTmqA2Oh
      bolKAJGj8QffB2c67EGumj/4s9Ty3fjJYv3u1/WoXB7Fr4a3DJLToSMm0IrXEvuxbmpl/fjb
      dEwdJuZXiPlV7MBBNfgMUA3zy578pvmDv85vdaxeHsObqRDLput6v0slAURM2fEZctPQfj8D
      7feTqE2SrV6mtfwhbdO9ZCv9pNwJUrUxrAbsEGk7hZPfjJ+q32/+T3IGxnCGJ0iuaw3lfcQS
      QMTM1j59UNcSRWqJIhOFXVxY9zDZ6iBpZ5iW2XOUpntJ10ZoLZ9alVn8WBqn0LNqB/8VzuA4
      3LK17o8uSyEBREy5tvhvdd9OM53dynR2K8PF3SQ79xPzq2SqA3RMHaY0c4KOqSN1mSOwUzj5
      HrxUqS73dy3uZDm09/YsP4DAYbR/gEknzoatXWRtAJfRvn7iHVto0ROcH9N0dZWI9jUBoskL
      lnYkaCtGNdkOQDndxXDrbhQa26/SNn2MdeMHaJ8+SsyfI+HOEPdnl/z8wY+lqbbcsCpr/oXU
      JstorQnjQirLDsCfPMGP/+kpTl2s8Nj3/pGHu21glOd/8Fd0/9m/8qj7v/zFjyv84PuPo868
      z8lyiXtu6SFmR/86MVEwV1vBlqBS8NHh7cWyDJX2MlTaiwo88pVLlKaP0zJ7mlyln4wzRKY6
      iK0XvmiWb6dwClvxU63X9XMsh64t7wJe9bTMADTj504xtWkPj7S/zpHeyzzUvWnRci0rRsy2
      CCXtJnWtJdByaSt2dcmEDsg4w6SdYQqz58hV+mmb6aWlfAZbz79fN/hoze818OAHcKfKENKb
      ZJYXQFDm7Klh1nfu5pb8EL8+cIjB/ZvYsODV8DyGP3yHY+5e7ty5jotHXuHfnn6BU9MWex/7
      c554eCcZS8r4rM8+Ca4bZTGXWs9caj3jhZuxghpxr0zaGaE08wFt08fITlfwam0NfzLqTs6G
      FsCyXgjzp4Y5fqlM5+b1tN92B51jhzh7ebF3+wdUp8cYna5QHjnDi794hfYHvsufPPEQ/f/1
      97x6MvwzAaNINeDhUisb305TTXYwUdjFma5vc+Cmv+REzxPXfXrDStjZZCg7QLCsRwDN5Ogl
      Tp3uxQ5eYCJX5ezEJTac7WPPpmufEeg4gwycHUdnj+JmFJv27qencJ2Tr1HZhM3IbAiXEAkC
      LD+cM0+tRHjbJUsPQPuMXTyNVbydu+6+hRYcrJlJBk+fZ+beG69500Sik1JXKx33/h6P3bOJ
      ysQQbkzOwlhILhHO/xelNVZI5+TYySYIQAcBI6MT9HztWzz6lR3E8djW4vD8u0OUZ3eSa20j
      HQPI0F5UWCjimQIFN0Gu/QYe+cY9/OS5v+ZPfxiw4bYH+e4fPc7a+qyR+ogZ+Lwoua6ECunn
      lovjRsyp0TnePD/T8O9reR5dh4/ReepMw7936z272PjtB1B2Yx/95OK4EZRLhPMBEyoIsPxw
      9uPjxVxoW+USQMSUMma9fq6ScdKbOkPbBZIAIiZuKza3JMMeo2HihSzxQia0T5SRACJGARtb
      Eo3/voFGhbALlFzXih3SewFAAogcpRSlTLzhu0FKh/A6gG2R7u7Azq7syhL1IAFEUCquKGXW
      /pnqiWKOTM96rFh4nywpAURQwrYopWM09EFAa1SDd8TjbQVSG1b//QbXIgFEUDJmsbk1SbaB
      W6LKD7Dcxp2CoeIxWm67gVg+3A/YlgAiqi0bZ0M+sWbPJI8Xs7R8eXvYY0gAUZWwLXZ2pknF
      G/NPpADVqBWQpeh86G7sVPjbvRJAhJUycba0NmaHRPk+doOWQNltXeR2bm7I9/oiEkDEbW9P
      kQ/p9IjVYOfStO65ETvV+Nc6FiIBRFwhFWNbe3j75HVlWeRv6iG3vbvhJ74tJhpTiEVZCnZ2
      ZLixI81qXlfA8oNVXwLld/XQ+fXd2LnwXvn9LAkg4pRSpOIWt2/M0dXE5wjFiznaH7ydRFtL
      aOf9LEQCaBLzEWTJJ5vv+YCdS9H5yB6yN2wMe5TPkQCaSCkTZ19PIbT3DKyESsRo/90v03LH
      l8IeZUESQJNZl4tzZ1eOQp0fCSzfx67V9zmAlU7S+fW7aLvvFqx4NM9tiuZUYlGWpdjcmiQR
      U/QOzTEwXQt7pAUlO4u07ruZ9gduD3uUa5IAmpBtKbpa5s8VOtQ3Q9/U9UegggDLq8NbIm2L
      1IY2OvfvJn/zluu/v1UmATSxlpTN3s0FUgNlLow7uEu8sO6CtMa6zrNBVdwmd+NmOh+6m9S6
      EsqK/gpbAmhiSilySZs9m/JsaU3ROzjHyKy75CtM122OmE2ivYXinTto3XczsUzzbNdKAGtA
      3LboaknSmo5xYcLh0qTDULnGkjvQGnuFy594a47iXTvJ79pCuqsdZTfPDhVIAGtKJmGzszNN
      dzHJ5SmH9/rL1PylVWB5y3s7pErEKdy6lbb7biW1oRTq5Q2vhwSwxlhKkU/abO9Is6WUYmTW
      5exYlbFZl6oX4Pp62R/GomwLlYhjpxIkOloo3rGdzLYNxIv5+T+L0Cu7yyUBrFGWUiRjiu6W
      JN0tSSo1n8szNUbLLjM1n5qn8QKNrzWup1FxG2wLO5XASiWw4jHsVAKViJHu7iC5rpXM1o0k
      WvOhXcZwNcilEQ3jB5qaH+BcCSDQ1HyNnp4lNzCInU5ip5PzAWSSqESMRDEf9tirQimlJABh
      LLk2qDCeBCCMJgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgSgDCaBCCM
      JgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgS
      gDCaBCCMJgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgSgDCaBCCMJgEI
      o0kAwmgSgDCaBCCMJgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgSgDCaBCCMJgEIo0kAwmgSgDCa
      BCCMJgEIo0kAwmgSgDBaLOwBRGNpdw5dHiGYHUZXp9DlkfmvM4McVhs4Wbid9lyOQjJFOh6n
      lM1yQ1t72GOvGglgDdNag++C7xBMXcI79394Z15FzwyhAw+0D4EHwfzXk7E7+VkyIGbZ2JZC
      KUXMsiikUty8fiP7d+xkY7FIKhYjbtlYVvMvICSANSqYHSUY6sUfPIp36R2CwaPzB/s1aK3x
      ggAvCD713ycrFS5OTPDSiV5KmQx7e7awa/0Gdnauo6uliFJqNX+UVaW01jrsIUT9aL+Gf/kw
      7rHn8c68Cm5lybf9WWw3zyX2LOnvxm2bHR2dfGX7Du7buo2WdHqlI4dGKaXkEWAN8Scv4v72
      J3jn3kBP94MOvvhGK+T6Pr2DA5wfH+PAxQt865bbuG1jF3aTLYskgCandYCevoz74f9Qe/dJ
      cGZW9cD/rNlajQMXznO47xJf27GTx++8i9Z0hphtN2yG6yEBNDEd+Ph97+Ie/ineude/cI2/
      mmq+z0snjvPB8BDfuWM3e3q2kIrHQ5tnqSSAJqVrc3j9h3B+9bfoyQthj3PVubEx/uWdtxiY
      nuIPbr+DhB3tQ6y5FmwCrTXancM7/QrO69+L1MF/xXB5hucOv8dTB98h0Joo77NEO0/xObo6
      Se3gk7hHngHPCXucRVVcl5+/f4TzY2P88b776Cm1hT3SguQRoIlot4J75FncI89G+uC/ItCa
      9y/380LvMWaq1bDHWZAE0ET8/kO4h58BL5oH00K8IODVUyd55eSJsEdZkATQBLTW+IPHcN78
      B3RlPOxxlq3quvz00Lt8MDSIHzRui3Yp/h9ko5ep2kZWzgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017 - The V League' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      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
      kbq0TVvgbXkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team and Contestant' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
