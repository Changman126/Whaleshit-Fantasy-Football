<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Tableau Set Up (Vanessa Bach League)' inline='true' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vanessa Bach League' name='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\ochang\My Documents\GitHub\Whaleshit-Fantasy-Football\Vanessa Bach League.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0e99zuy1rxwjb71awir0u1q46vh0' name='Tableau Set Up' table='[&apos;Tableau Set Up$&apos;]' type='table'>
          <columns gridOrigin='A1:O65:no:A1:O65:0' header='yes' outcome='6'>
            <column datatype='string' name='Team' ordinal='0' />
            <column datatype='string' name='Contestant' ordinal='1' />
            <column datatype='integer' name='Ep1' ordinal='2' />
            <column datatype='integer' name='Ep2' ordinal='3' />
            <column datatype='integer' name='Ep3' ordinal='4' />
            <column datatype='integer' name='Ep4' ordinal='5' />
            <column datatype='integer' name='Ep5' ordinal='6' />
            <column datatype='integer' name='Ep6' ordinal='7' />
            <column datatype='integer' name='Ep7' ordinal='8' />
            <column datatype='integer' name='Ep8' ordinal='9' />
            <column datatype='integer' name='Ep9' ordinal='10' />
            <column datatype='integer' name='WTL' ordinal='11' />
            <column datatype='integer' name='Ep10' ordinal='12' />
            <column datatype='string' name='Status' ordinal='13' />
            <column datatype='integer' name='Grand Total' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contestant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contestant]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Contestant</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep1]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep2]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep3]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep4]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep4</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep5]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep5</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep6]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep6</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep7]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep7</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep8]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep8</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep9]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep9</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WTL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WTL]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>WTL</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ep10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ep10]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Ep10</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tableau Set Up]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O65:no:A1:O65:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
      <group caption='Action (Contestant)' hidden='true' name='[Action (Contestant)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Contestant]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\ochang\My Documents\My Tableau Repository\Datasources\Tableau Set Up (Vanessa Bach League).tde' schema='Extract' tablename='Extract' update-time='02/08/2017 03:57:50 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='64' timestamp-start='2017-02-08 15:57:50.410' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Contestant</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Contestant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Contestant</remote-alias>
              <ordinal>0</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alexis&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Whitney&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep10</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep10</remote-alias>
              <ordinal>1</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep1</remote-alias>
              <ordinal>2</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1825.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.515625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>65</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.144968551196298</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.065398941888741</statistic>
                <statistic aggregation='Var' datatype='real'>102.9203869047619</statistic>
                <statistic aggregation='VarP' datatype='real'>101.312255859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>58525.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep2</remote-alias>
              <ordinal>3</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1525.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.828125</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>145</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.825868533599696</statistic>
                <statistic aggregation='StdevP' datatype='real'>36.537033732698866</statistic>
                <statistic aggregation='Var' datatype='real'>1356.1445932539682</statistic>
                <statistic aggregation='VarP' datatype='real'>1334.954833984375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>121775.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep3</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep3</remote-alias>
              <ordinal>4</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3050.0</statistic>
                <statistic aggregation='Avg' datatype='real'>47.65625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>115</statistic>
                <statistic aggregation='Stdev' datatype='real'>39.999689978957313</statistic>
                <statistic aggregation='StdevP' datatype='real'>39.685962076501305</statistic>
                <statistic aggregation='Var' datatype='real'>1599.9751984126983</statistic>
                <statistic aggregation='VarP' datatype='real'>1574.9755859375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>246150.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep4</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep4</remote-alias>
              <ordinal>5</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2595.0</statistic>
                <statistic aggregation='Avg' datatype='real'>40.546875</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>130</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.357109017312141</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.032734526648049</statistic>
                <statistic aggregation='Var' datatype='real'>1710.4104662698412</statistic>
                <statistic aggregation='VarP' datatype='real'>1683.685302734375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>212975.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep5</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep5</remote-alias>
              <ordinal>6</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2135.0</statistic>
                <statistic aggregation='Avg' datatype='real'>33.359375</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>170</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.567068462372418</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.241047205537534</statistic>
                <statistic aggregation='Var' datatype='real'>1727.8211805555557</statistic>
                <statistic aggregation='VarP' datatype='real'>1700.823974609375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>180075.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep6</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ep6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep6</remote-alias>
              <ordinal>7</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3120.0</statistic>
                <statistic aggregation='Avg' datatype='real'>48.75</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>140</statistic>
                <statistic aggregation='Stdev' datatype='real'>50.174299371892751</statistic>
                <statistic aggregation='StdevP' datatype='real'>49.780769379349692</statistic>
                <statistic aggregation='Var' datatype='real'>2517.4603174603176</statistic>
                <statistic aggregation='VarP' datatype='real'>2478.125</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>310700.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep7</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep7</remote-alias>
              <ordinal>8</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep8</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep8</remote-alias>
              <ordinal>9</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ep9</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Ep9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ep9</remote-alias>
              <ordinal>10</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grand Total</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Grand Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grand Total</remote-alias>
              <ordinal>11</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>14250.0</statistic>
                <statistic aggregation='Avg' datatype='real'>222.65625</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>580</statistic>
                <statistic aggregation='Stdev' datatype='real'>154.08966867400127</statistic>
                <statistic aggregation='StdevP' datatype='real'>152.88110359340521</statistic>
                <statistic aggregation='Var' datatype='real'>23743.625992063491</statistic>
                <statistic aggregation='VarP' datatype='real'>23372.6318359375</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4668700.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>64.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>64.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>13</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Eliminated&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Still in it to Win it&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Eliminated&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>14</ordinal>
              <family>Tableau Set Up</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Allie&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vanessa&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WTL</remote-name>
              <remote-type>16</remote-type>
              <local-name>[WTL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WTL</remote-alias>
              <ordinal>15</ordinal>
              <family>Tableau Set Up</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>64</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.32899' measure-ordering='alphabetic' measure-percentage='0.67101' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Contestant:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Danielle M.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alexis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jasmine B.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raven&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanessa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lauren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Corinne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kristina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hailey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danielle L.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astrid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whitney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lacey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jaimi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Briana&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='The Bachelor Fantasy 2017 - The V League' type='sheet' worksheet='Contestant Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='The Bachelor Fantasy 2017 - The V League' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contestant Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scoring Pie'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[pcto:sum:Grand Total:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Contestant]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
              <wedge-size column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
              <lod column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[pcto:sum:Grand Total:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Episode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk] + ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk] + [federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk])))))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Scoring by Team and Contestant'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
            <column datatype='string' name='[Contestant]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Ep1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ep6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grand Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Contestant]' derivation='None' name='[none:Contestant:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ep1]' derivation='Sum' name='[sum:Ep1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep2]' derivation='Sum' name='[sum:Ep2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep3]' derivation='Sum' name='[sum:Ep3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep4]' derivation='Sum' name='[sum:Ep4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep5]' derivation='Sum' name='[sum:Ep5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ep6]' derivation='Sum' name='[sum:Ep6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grand Total]' derivation='Sum' name='[sum:Grand Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]'>
            <groupfilter function='level-members' level='[Contestant]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' direction='DESC' using='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' />
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' direction='ASC' />
          <slices>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Action (Contestant)]</column>
            <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep1:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep2:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Grand Total:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep3:qk]' value='N' />
            <format attr='text-format' field='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[sum:Ep4:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk] / ([federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Status:nk] / [federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]))</rows>
        <cols>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='The Bachelor Fantasy 2017 - The V League'>
      <style />
      <size maxheight='2000' maxwidth='1200' minheight='2000' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Tableau Set Up (Vanessa Bach League)' name='federated.1dshjls175vrcm11tf4hb0hh3zpn' />
      </datasources>
      <datasource-dependencies datasource='federated.1dshjls175vrcm11tf4hb0hh3zpn'>
        <column datatype='string' name='[Team]' role='dimension' type='nominal' />
        <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='12' param='horz' type='layout-flow' w='99667' x='0' y='0'>
              <zone h='100000' id='9' param='horz' type='layout-flow' w='99667' x='0' y='0'>
                <zone h='100000' id='7' type='layout-basic' w='99667' x='0' y='0'>
                  <zone h='22150' id='1' is-centered='0' is-scaled='1' param='C:\Users\ochang\Pictures\Bach.JPG' type='bitmap' w='99667' x='0' y='0' />
                  <zone h='20700' id='3' name='Weekly Scoring by Team' w='49834' x='0' y='22150' />
                  <zone h='48350' id='4' name='Weekly Scoring by Team and Contestant' w='49833' x='49834' y='22150' />
                  <zone h='26050' id='5' name='Contestant Filter' w='49834' x='0' y='42850' />
                  <zone h='29500' id='6' name='Scoring Pie' w='49833' x='49834' y='70500' />
                  <zone h='29500' id='10' name='Weekly Scoring by Episode' w='49834' x='0' y='70500' />
                  <zone h='1600' id='15' mode='checkdropdown' name='Scoring Pie' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' w='49834' x='0' y='68900' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Weekly Scoring by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Team and Contestant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Scoring Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Team:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weekly Scoring by Episode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dshjls175vrcm11tf4hb0hh3zpn].[none:Contestant:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Contestant Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='The Bachelor Fantasy 2017 - The V League'>
      <viewpoints>
        <viewpoint name='Contestant Filter'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Scoring Pie'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Episode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weekly Scoring by Team and Contestant'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Contestant Filter' width='64'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scoring Pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The Bachelor Fantasy 2017 - The V League' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Episode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team' width='192'>
      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
      2Qkqh/KregAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Weekly Scoring by Team and Contestant' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
